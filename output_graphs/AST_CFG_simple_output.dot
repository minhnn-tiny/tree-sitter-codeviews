digraph  {
5 [code="pragma solidity ^0.5.1;\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Burn(address indexed from, uint256 value);\n}\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n  function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n  uint8 constant DECIMALS = 18;\n  function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n  uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n  function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n  mapping (address => uint256) private _balances;\n  function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n  mapping (address => mapping (address => uint256)) private _allowed;\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\nfunction bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\nfunction withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n    function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\nfunction bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }\nfunction transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\nfunction transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\nfunction withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n    function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\nfunction withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\nfunction bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\nfunction transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\nfunction bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\nfunction transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n}\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n  function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n  uint8 private _decimals;\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\nfunction bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n    function name() public view returns (string memory) {\n        return _name;\n    }\nfunction sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\nfunction transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\nfunction transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n}\ncontract SaveWon is ERC20, ERC20Detailed {\n  function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n  uint8 public constant DECIMALS = 18;\n    uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));\n    constructor () public ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\nfunction sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n}", color=white, fillcolor="#BFE6D3", label="0_ source_file--source_file\n5_pragma solidity ^0.5.1;\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Burn(address indexed from, uint256 value);\n}\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n  function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n  uint8 constant DECIMALS = 18;\n  function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n  uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n  function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n  mapping (address => uint256) private _balances;\n  function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n  mapping (address => mapping (address => uint256)) private _allowed;\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\nfunction bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\nfunction withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n    function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\nfunction bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }\nfunction transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\nfunction transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\nfunction withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n    function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\nfunction withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\nfunction bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\nfunction transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\nfunction bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\nfunction transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n}\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n  function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n  uint8 private _decimals;\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\nfunction bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n    function name() public view returns (string memory) {\n        return _name;\n    }\nfunction sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\nfunction transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\nfunction transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n}\ncontract SaveWon is ERC20, ERC20Detailed {\n  function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n  uint8 public constant DECIMALS = 18;\n    uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));\n    constructor () public ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\nfunction sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n}-1-207", node_type=source_file, shape=box, style="rounded, filled"];
6 [code="pragma solidity ^0.5.1;", color=white, fillcolor="#BFE6D3", label="0_ pragma_directive--pragma_directive\n6_pragma solidity ^0.5.1;-1-1", node_type=pragma_directive, shape=box, style="rounded, filled"];
7 [code="solidity ^0.5.1", color=white, fillcolor="#BFE6D3", label="0_ solidity_pragma_token--solidity_pragma_token\n7_solidity ^0.5.1-1-1", node_type=solidity_pragma_token, shape=box, style="rounded, filled"];
8 [code=" ^", color=white, fillcolor="#BFE6D3", label="0_ solidity_version_comparison_operator--solidity_version_comparison_operator\n8_ ^-1-1", node_type=solidity_version_comparison_operator, shape=box, style="rounded, filled"];
9 [code="0.5.1", color=white, fillcolor="#BFE6D3", label="0_ 0.5.1--solidity_version\n9_0.5.1-1-1", node_type=solidity_version, shape=box, style="rounded, filled"];
10 [code="library SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}", color=white, fillcolor="#BFE6D3", label="1_ library_declaration--library_declaration\n10_library SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}-2-30", node_type=library_declaration, shape=box, style="rounded, filled"];
11 [code=SafeMath, color=white, fillcolor="#BFE6D3", label="1_ SafeMath--identifier\n11_SafeMath-2-2", node_type=identifier, shape=box, style="rounded, filled"];
12 [code="{\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}", color=white, fillcolor="#BFE6D3", label="1_ contract_body--contract_body\n12_{\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}-2-30", node_type=contract_body, shape=box, style="rounded, filled"];
13 [code="function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }", color=white, fillcolor="#BFE6D3", label="2_ function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n13-function_definition-3-10", method="mul(uint256 a,uint256 b)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
14 [code=mul, color=white, fillcolor="#BFE6D3", label="2_ mul--identifier\n14_mul-3-3", node_type=identifier, shape=box, style="rounded, filled"];
15 [code="uint256 a", color=white, fillcolor="#BFE6D3", label="2_ parameter--parameter\n15_uint256 a-3-3", node_type=parameter, shape=box, style="rounded, filled"];
16 [code=uint256, color=white, fillcolor="#BFE6D3", label="2_ type_name--type_name\n16_uint256-3-3", node_type=type_name, shape=box, style="rounded, filled"];
17 [code=uint256, color=white, fillcolor="#BFE6D3", label="2_ primitive_type--primitive_type\n17_uint256-3-3", node_type=primitive_type, shape=box, style="rounded, filled"];
18 [code=a, color=white, fillcolor="#BFE6D3", label="2_ a--identifier\n18_a-3-3", node_type=identifier, shape=box, style="rounded, filled"];
19 [code="uint256 b", color=white, fillcolor="#BFE6D3", label="2_ parameter--parameter\n19_uint256 b-3-3", node_type=parameter, shape=box, style="rounded, filled"];
20 [code=uint256, color=white, fillcolor="#BFE6D3", label="2_ type_name--type_name\n20_uint256-3-3", node_type=type_name, shape=box, style="rounded, filled"];
21 [code=uint256, color=white, fillcolor="#BFE6D3", label="2_ primitive_type--primitive_type\n21_uint256-3-3", node_type=primitive_type, shape=box, style="rounded, filled"];
22 [code=b, color=white, fillcolor="#BFE6D3", label="2_ b--identifier\n22_b-3-3", node_type=identifier, shape=box, style="rounded, filled"];
23 [code=internal, color=white, fillcolor="#BFE6D3", label="2_ visibility--visibility\n23_internal-3-3", node_type=visibility, shape=box, style="rounded, filled"];
24 [code=pure, color=white, fillcolor="#BFE6D3", label="2_ state_mutability--state_mutability\n24_pure-3-3", node_type=state_mutability, shape=box, style="rounded, filled"];
25 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="2_ return_type_definition--return_type_definition\n25_returns (uint256)-3-3", node_type=return_type_definition, shape=box, style="rounded, filled"];
26 [code=uint256, color=white, fillcolor="#BFE6D3", label="2_ parameter--parameter\n26_uint256-3-3", node_type=parameter, shape=box, style="rounded, filled"];
27 [code=uint256, color=white, fillcolor="#BFE6D3", label="2_ type_name--type_name\n27_uint256-3-3", node_type=type_name, shape=box, style="rounded, filled"];
28 [code=uint256, color=white, fillcolor="#BFE6D3", label="2_ primitive_type--primitive_type\n28_uint256-3-3", node_type=primitive_type, shape=box, style="rounded, filled"];
29 [code="{\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }", color=white, fillcolor="#BFE6D3", label="2_ function_body--function_body\n29_{\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }-3-10", node_type=function_body, shape=box, style="rounded, filled"];
30 [code="if (a == 0) {\n            return 0;\n        }", color=white, fillcolor="#BFE6D3", label="3_ if_a == 0\n30-if-4-6", method="mul(uint256 a,uint256 b)", node_type=if_statement, shape=box, style="rounded, filled", type_label=if];
31 [code="a == 0", color=white, fillcolor="#BFE6D3", label="3_ binary_expression--binary_expression\n31_a == 0-4-4", node_type=binary_expression, shape=box, style="rounded, filled"];
32 [code=a, color=white, fillcolor="#BFE6D3", label="3_ a--identifier\n32_a-4-4", node_type=identifier, shape=box, style="rounded, filled"];
33 [code=0, color=white, fillcolor="#BFE6D3", label="3_ 0--number_literal\n33_0-4-4", node_type=number_literal, shape=box, style="rounded, filled"];
34 [code="{\n            return 0;\n        }", color=white, fillcolor="#BFE6D3", label="3_ block_statement--block_statement\n34_{\n            return 0;\n        }-4-6", node_type=block_statement, shape=box, style="rounded, filled"];
35 [code="return 0;", color=white, fillcolor="#BFE6D3", label="4_ return 0;\n35-return-5-5", method="mul(uint256 a,uint256 b)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
36 [code=0, color=white, fillcolor="#BFE6D3", label="4_ 0--number_literal\n36_0-5-5", node_type=number_literal, shape=box, style="rounded, filled"];
37 [code="uint256 c = a * b;", color=white, fillcolor="#BFE6D3", label="6_ uint256 c = a * b;\n37-new_variable-7-7", method="mul(uint256 a,uint256 b)", node_type=variable_declaration_statement, shape=box, style="rounded, filled", type_label=new_variable];
38 [code="uint256 c", color=white, fillcolor="#BFE6D3", label="6_ variable_declaration--variable_declaration\n38_uint256 c-7-7", node_type=variable_declaration, shape=box, style="rounded, filled"];
39 [code=uint256, color=white, fillcolor="#BFE6D3", label="6_ type_name--type_name\n39_uint256-7-7", node_type=type_name, shape=box, style="rounded, filled"];
40 [code=uint256, color=white, fillcolor="#BFE6D3", label="6_ primitive_type--primitive_type\n40_uint256-7-7", node_type=primitive_type, shape=box, style="rounded, filled"];
41 [code=c, color=white, fillcolor="#BFE6D3", label="6_ c--identifier\n41_c-7-7", node_type=identifier, shape=box, style="rounded, filled"];
42 [code="a * b", color=white, fillcolor="#BFE6D3", label="6_ binary_expression--binary_expression\n42_a * b-7-7", node_type=binary_expression, shape=box, style="rounded, filled"];
43 [code=a, color=white, fillcolor="#BFE6D3", label="6_ a--identifier\n43_a-7-7", node_type=identifier, shape=box, style="rounded, filled"];
44 [code=b, color=white, fillcolor="#BFE6D3", label="6_ b--identifier\n44_b-7-7", node_type=identifier, shape=box, style="rounded, filled"];
45 [code="require(c / a == b);", color=white, fillcolor="#BFE6D3", label="7_ require(c / a == b);\n45-expression_statement-8-8", method="mul(uint256 a,uint256 b)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
46 [code="require(c / a == b)", color=white, fillcolor="#BFE6D3", label="7_ call_expression--call_expression\n46_require(c / a == b)-8-8", node_type=call_expression, shape=box, style="rounded, filled"];
47 [code=require, color=white, fillcolor="#BFE6D3", label="7_ require--identifier\n47_require-8-8", node_type=identifier, shape=box, style="rounded, filled"];
48 [code="c / a == b", color=white, fillcolor="#BFE6D3", label="7_ call_argument--call_argument\n48_c / a == b-8-8", node_type=call_argument, shape=box, style="rounded, filled"];
49 [code="c / a == b", color=white, fillcolor="#BFE6D3", label="7_ binary_expression--binary_expression\n49_c / a == b-8-8", node_type=binary_expression, shape=box, style="rounded, filled"];
50 [code="c / a", color=white, fillcolor="#BFE6D3", label="7_ binary_expression--binary_expression\n50_c / a-8-8", node_type=binary_expression, shape=box, style="rounded, filled"];
51 [code=c, color=white, fillcolor="#BFE6D3", label="7_ c--identifier\n51_c-8-8", node_type=identifier, shape=box, style="rounded, filled"];
52 [code=a, color=white, fillcolor="#BFE6D3", label="7_ a--identifier\n52_a-8-8", node_type=identifier, shape=box, style="rounded, filled"];
53 [code=b, color=white, fillcolor="#BFE6D3", label="7_ b--identifier\n53_b-8-8", node_type=identifier, shape=box, style="rounded, filled"];
54 [code="return c;", color=white, fillcolor="#BFE6D3", label="8_ return c;\n54-return-9-9", method="mul(uint256 a,uint256 b)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
55 [code=c, color=white, fillcolor="#BFE6D3", label="8_ c--identifier\n55_c-9-9", node_type=identifier, shape=box, style="rounded, filled"];
56 [code="function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }", color=white, fillcolor="#BFE6D3", label="10_ function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n56-function_definition-11-15", method="div(uint256 a,uint256 b)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
57 [code=div, color=white, fillcolor="#BFE6D3", label="10_ div--identifier\n57_div-11-11", node_type=identifier, shape=box, style="rounded, filled"];
58 [code="uint256 a", color=white, fillcolor="#BFE6D3", label="10_ parameter--parameter\n58_uint256 a-11-11", node_type=parameter, shape=box, style="rounded, filled"];
59 [code=uint256, color=white, fillcolor="#BFE6D3", label="10_ type_name--type_name\n59_uint256-11-11", node_type=type_name, shape=box, style="rounded, filled"];
60 [code=uint256, color=white, fillcolor="#BFE6D3", label="10_ primitive_type--primitive_type\n60_uint256-11-11", node_type=primitive_type, shape=box, style="rounded, filled"];
61 [code=a, color=white, fillcolor="#BFE6D3", label="10_ a--identifier\n61_a-11-11", node_type=identifier, shape=box, style="rounded, filled"];
62 [code="uint256 b", color=white, fillcolor="#BFE6D3", label="10_ parameter--parameter\n62_uint256 b-11-11", node_type=parameter, shape=box, style="rounded, filled"];
63 [code=uint256, color=white, fillcolor="#BFE6D3", label="10_ type_name--type_name\n63_uint256-11-11", node_type=type_name, shape=box, style="rounded, filled"];
64 [code=uint256, color=white, fillcolor="#BFE6D3", label="10_ primitive_type--primitive_type\n64_uint256-11-11", node_type=primitive_type, shape=box, style="rounded, filled"];
65 [code=b, color=white, fillcolor="#BFE6D3", label="10_ b--identifier\n65_b-11-11", node_type=identifier, shape=box, style="rounded, filled"];
66 [code=internal, color=white, fillcolor="#BFE6D3", label="10_ visibility--visibility\n66_internal-11-11", node_type=visibility, shape=box, style="rounded, filled"];
67 [code=pure, color=white, fillcolor="#BFE6D3", label="10_ state_mutability--state_mutability\n67_pure-11-11", node_type=state_mutability, shape=box, style="rounded, filled"];
68 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="10_ return_type_definition--return_type_definition\n68_returns (uint256)-11-11", node_type=return_type_definition, shape=box, style="rounded, filled"];
69 [code=uint256, color=white, fillcolor="#BFE6D3", label="10_ parameter--parameter\n69_uint256-11-11", node_type=parameter, shape=box, style="rounded, filled"];
70 [code=uint256, color=white, fillcolor="#BFE6D3", label="10_ type_name--type_name\n70_uint256-11-11", node_type=type_name, shape=box, style="rounded, filled"];
71 [code=uint256, color=white, fillcolor="#BFE6D3", label="10_ primitive_type--primitive_type\n71_uint256-11-11", node_type=primitive_type, shape=box, style="rounded, filled"];
72 [code="{\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }", color=white, fillcolor="#BFE6D3", label="10_ function_body--function_body\n72_{\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }-11-15", node_type=function_body, shape=box, style="rounded, filled"];
73 [code="require(b > 0);", color=white, fillcolor="#BFE6D3", label="11_ require(b > 0);\n73-expression_statement-12-12", method="div(uint256 a,uint256 b)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
74 [code="require(b > 0)", color=white, fillcolor="#BFE6D3", label="11_ call_expression--call_expression\n74_require(b > 0)-12-12", node_type=call_expression, shape=box, style="rounded, filled"];
75 [code=require, color=white, fillcolor="#BFE6D3", label="11_ require--identifier\n75_require-12-12", node_type=identifier, shape=box, style="rounded, filled"];
76 [code="b > 0", color=white, fillcolor="#BFE6D3", label="11_ call_argument--call_argument\n76_b > 0-12-12", node_type=call_argument, shape=box, style="rounded, filled"];
77 [code="b > 0", color=white, fillcolor="#BFE6D3", label="11_ binary_expression--binary_expression\n77_b > 0-12-12", node_type=binary_expression, shape=box, style="rounded, filled"];
78 [code=b, color=white, fillcolor="#BFE6D3", label="11_ b--identifier\n78_b-12-12", node_type=identifier, shape=box, style="rounded, filled"];
79 [code=0, color=white, fillcolor="#BFE6D3", label="11_ 0--number_literal\n79_0-12-12", node_type=number_literal, shape=box, style="rounded, filled"];
80 [code="uint256 c = a / b;", color=white, fillcolor="#BFE6D3", label="12_ uint256 c = a / b;\n80-new_variable-13-13", method="div(uint256 a,uint256 b)", node_type=variable_declaration_statement, shape=box, style="rounded, filled", type_label=new_variable];
81 [code="uint256 c", color=white, fillcolor="#BFE6D3", label="12_ variable_declaration--variable_declaration\n81_uint256 c-13-13", node_type=variable_declaration, shape=box, style="rounded, filled"];
82 [code=uint256, color=white, fillcolor="#BFE6D3", label="12_ type_name--type_name\n82_uint256-13-13", node_type=type_name, shape=box, style="rounded, filled"];
83 [code=uint256, color=white, fillcolor="#BFE6D3", label="12_ primitive_type--primitive_type\n83_uint256-13-13", node_type=primitive_type, shape=box, style="rounded, filled"];
84 [code=c, color=white, fillcolor="#BFE6D3", label="12_ c--identifier\n84_c-13-13", node_type=identifier, shape=box, style="rounded, filled"];
85 [code="a / b", color=white, fillcolor="#BFE6D3", label="12_ binary_expression--binary_expression\n85_a / b-13-13", node_type=binary_expression, shape=box, style="rounded, filled"];
86 [code=a, color=white, fillcolor="#BFE6D3", label="12_ a--identifier\n86_a-13-13", node_type=identifier, shape=box, style="rounded, filled"];
87 [code=b, color=white, fillcolor="#BFE6D3", label="12_ b--identifier\n87_b-13-13", node_type=identifier, shape=box, style="rounded, filled"];
88 [code="return c;", color=white, fillcolor="#BFE6D3", label="13_ return c;\n88-return-14-14", method="div(uint256 a,uint256 b)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
89 [code=c, color=white, fillcolor="#BFE6D3", label="13_ c--identifier\n89_c-14-14", node_type=identifier, shape=box, style="rounded, filled"];
90 [code="function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }", color=white, fillcolor="#BFE6D3", label="15_ function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }\n90-function_definition-16-20", method="sub(uint256 a,uint256 b)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
91 [code=sub, color=white, fillcolor="#BFE6D3", label="15_ sub--identifier\n91_sub-16-16", node_type=identifier, shape=box, style="rounded, filled"];
92 [code="uint256 a", color=white, fillcolor="#BFE6D3", label="15_ parameter--parameter\n92_uint256 a-16-16", node_type=parameter, shape=box, style="rounded, filled"];
93 [code=uint256, color=white, fillcolor="#BFE6D3", label="15_ type_name--type_name\n93_uint256-16-16", node_type=type_name, shape=box, style="rounded, filled"];
94 [code=uint256, color=white, fillcolor="#BFE6D3", label="15_ primitive_type--primitive_type\n94_uint256-16-16", node_type=primitive_type, shape=box, style="rounded, filled"];
95 [code=a, color=white, fillcolor="#BFE6D3", label="15_ a--identifier\n95_a-16-16", node_type=identifier, shape=box, style="rounded, filled"];
96 [code="uint256 b", color=white, fillcolor="#BFE6D3", label="15_ parameter--parameter\n96_uint256 b-16-16", node_type=parameter, shape=box, style="rounded, filled"];
97 [code=uint256, color=white, fillcolor="#BFE6D3", label="15_ type_name--type_name\n97_uint256-16-16", node_type=type_name, shape=box, style="rounded, filled"];
98 [code=uint256, color=white, fillcolor="#BFE6D3", label="15_ primitive_type--primitive_type\n98_uint256-16-16", node_type=primitive_type, shape=box, style="rounded, filled"];
99 [code=b, color=white, fillcolor="#BFE6D3", label="15_ b--identifier\n99_b-16-16", node_type=identifier, shape=box, style="rounded, filled"];
100 [code=internal, color=white, fillcolor="#BFE6D3", label="15_ visibility--visibility\n100_internal-16-16", node_type=visibility, shape=box, style="rounded, filled"];
101 [code=pure, color=white, fillcolor="#BFE6D3", label="15_ state_mutability--state_mutability\n101_pure-16-16", node_type=state_mutability, shape=box, style="rounded, filled"];
102 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="15_ return_type_definition--return_type_definition\n102_returns (uint256)-16-16", node_type=return_type_definition, shape=box, style="rounded, filled"];
103 [code=uint256, color=white, fillcolor="#BFE6D3", label="15_ parameter--parameter\n103_uint256-16-16", node_type=parameter, shape=box, style="rounded, filled"];
104 [code=uint256, color=white, fillcolor="#BFE6D3", label="15_ type_name--type_name\n104_uint256-16-16", node_type=type_name, shape=box, style="rounded, filled"];
105 [code=uint256, color=white, fillcolor="#BFE6D3", label="15_ primitive_type--primitive_type\n105_uint256-16-16", node_type=primitive_type, shape=box, style="rounded, filled"];
106 [code="{\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }", color=white, fillcolor="#BFE6D3", label="15_ function_body--function_body\n106_{\n        require(b <= a);\n        uint256 c = a - b;\n        return c;\n    }-16-20", node_type=function_body, shape=box, style="rounded, filled"];
107 [code="require(b <= a);", color=white, fillcolor="#BFE6D3", label="16_ require(b <= a);\n107-expression_statement-17-17", method="sub(uint256 a,uint256 b)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
108 [code="require(b <= a)", color=white, fillcolor="#BFE6D3", label="16_ call_expression--call_expression\n108_require(b <= a)-17-17", node_type=call_expression, shape=box, style="rounded, filled"];
109 [code=require, color=white, fillcolor="#BFE6D3", label="16_ require--identifier\n109_require-17-17", node_type=identifier, shape=box, style="rounded, filled"];
110 [code="b <= a", color=white, fillcolor="#BFE6D3", label="16_ call_argument--call_argument\n110_b <= a-17-17", node_type=call_argument, shape=box, style="rounded, filled"];
111 [code="b <= a", color=white, fillcolor="#BFE6D3", label="16_ binary_expression--binary_expression\n111_b <= a-17-17", node_type=binary_expression, shape=box, style="rounded, filled"];
112 [code=b, color=white, fillcolor="#BFE6D3", label="16_ b--identifier\n112_b-17-17", node_type=identifier, shape=box, style="rounded, filled"];
113 [code=a, color=white, fillcolor="#BFE6D3", label="16_ a--identifier\n113_a-17-17", node_type=identifier, shape=box, style="rounded, filled"];
114 [code="uint256 c = a - b;", color=white, fillcolor="#BFE6D3", label="17_ uint256 c = a - b;\n114-new_variable-18-18", method="sub(uint256 a,uint256 b)", node_type=variable_declaration_statement, shape=box, style="rounded, filled", type_label=new_variable];
115 [code="uint256 c", color=white, fillcolor="#BFE6D3", label="17_ variable_declaration--variable_declaration\n115_uint256 c-18-18", node_type=variable_declaration, shape=box, style="rounded, filled"];
116 [code=uint256, color=white, fillcolor="#BFE6D3", label="17_ type_name--type_name\n116_uint256-18-18", node_type=type_name, shape=box, style="rounded, filled"];
117 [code=uint256, color=white, fillcolor="#BFE6D3", label="17_ primitive_type--primitive_type\n117_uint256-18-18", node_type=primitive_type, shape=box, style="rounded, filled"];
118 [code=c, color=white, fillcolor="#BFE6D3", label="17_ c--identifier\n118_c-18-18", node_type=identifier, shape=box, style="rounded, filled"];
119 [code="a - b", color=white, fillcolor="#BFE6D3", label="17_ binary_expression--binary_expression\n119_a - b-18-18", node_type=binary_expression, shape=box, style="rounded, filled"];
120 [code=a, color=white, fillcolor="#BFE6D3", label="17_ a--identifier\n120_a-18-18", node_type=identifier, shape=box, style="rounded, filled"];
121 [code=b, color=white, fillcolor="#BFE6D3", label="17_ b--identifier\n121_b-18-18", node_type=identifier, shape=box, style="rounded, filled"];
122 [code="return c;", color=white, fillcolor="#BFE6D3", label="18_ return c;\n122-return-19-19", method="sub(uint256 a,uint256 b)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
123 [code=c, color=white, fillcolor="#BFE6D3", label="18_ c--identifier\n123_c-19-19", node_type=identifier, shape=box, style="rounded, filled"];
124 [code="function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }", color=white, fillcolor="#BFE6D3", label="20_ function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }\n124-function_definition-21-25", method="add(uint256 a,uint256 b)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
125 [code=add, color=white, fillcolor="#BFE6D3", label="20_ add--identifier\n125_add-21-21", node_type=identifier, shape=box, style="rounded, filled"];
126 [code="uint256 a", color=white, fillcolor="#BFE6D3", label="20_ parameter--parameter\n126_uint256 a-21-21", node_type=parameter, shape=box, style="rounded, filled"];
127 [code=uint256, color=white, fillcolor="#BFE6D3", label="20_ type_name--type_name\n127_uint256-21-21", node_type=type_name, shape=box, style="rounded, filled"];
128 [code=uint256, color=white, fillcolor="#BFE6D3", label="20_ primitive_type--primitive_type\n128_uint256-21-21", node_type=primitive_type, shape=box, style="rounded, filled"];
129 [code=a, color=white, fillcolor="#BFE6D3", label="20_ a--identifier\n129_a-21-21", node_type=identifier, shape=box, style="rounded, filled"];
130 [code="uint256 b", color=white, fillcolor="#BFE6D3", label="20_ parameter--parameter\n130_uint256 b-21-21", node_type=parameter, shape=box, style="rounded, filled"];
131 [code=uint256, color=white, fillcolor="#BFE6D3", label="20_ type_name--type_name\n131_uint256-21-21", node_type=type_name, shape=box, style="rounded, filled"];
132 [code=uint256, color=white, fillcolor="#BFE6D3", label="20_ primitive_type--primitive_type\n132_uint256-21-21", node_type=primitive_type, shape=box, style="rounded, filled"];
133 [code=b, color=white, fillcolor="#BFE6D3", label="20_ b--identifier\n133_b-21-21", node_type=identifier, shape=box, style="rounded, filled"];
134 [code=internal, color=white, fillcolor="#BFE6D3", label="20_ visibility--visibility\n134_internal-21-21", node_type=visibility, shape=box, style="rounded, filled"];
135 [code=pure, color=white, fillcolor="#BFE6D3", label="20_ state_mutability--state_mutability\n135_pure-21-21", node_type=state_mutability, shape=box, style="rounded, filled"];
136 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="20_ return_type_definition--return_type_definition\n136_returns (uint256)-21-21", node_type=return_type_definition, shape=box, style="rounded, filled"];
137 [code=uint256, color=white, fillcolor="#BFE6D3", label="20_ parameter--parameter\n137_uint256-21-21", node_type=parameter, shape=box, style="rounded, filled"];
138 [code=uint256, color=white, fillcolor="#BFE6D3", label="20_ type_name--type_name\n138_uint256-21-21", node_type=type_name, shape=box, style="rounded, filled"];
139 [code=uint256, color=white, fillcolor="#BFE6D3", label="20_ primitive_type--primitive_type\n139_uint256-21-21", node_type=primitive_type, shape=box, style="rounded, filled"];
140 [code="{\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }", color=white, fillcolor="#BFE6D3", label="20_ function_body--function_body\n140_{\n        uint256 c = a + b;\n        require(c >= a);\n        return c;\n    }-21-25", node_type=function_body, shape=box, style="rounded, filled"];
141 [code="uint256 c = a + b;", color=white, fillcolor="#BFE6D3", label="21_ uint256 c = a + b;\n141-new_variable-22-22", method="add(uint256 a,uint256 b)", node_type=variable_declaration_statement, shape=box, style="rounded, filled", type_label=new_variable];
142 [code="uint256 c", color=white, fillcolor="#BFE6D3", label="21_ variable_declaration--variable_declaration\n142_uint256 c-22-22", node_type=variable_declaration, shape=box, style="rounded, filled"];
143 [code=uint256, color=white, fillcolor="#BFE6D3", label="21_ type_name--type_name\n143_uint256-22-22", node_type=type_name, shape=box, style="rounded, filled"];
144 [code=uint256, color=white, fillcolor="#BFE6D3", label="21_ primitive_type--primitive_type\n144_uint256-22-22", node_type=primitive_type, shape=box, style="rounded, filled"];
145 [code=c, color=white, fillcolor="#BFE6D3", label="21_ c--identifier\n145_c-22-22", node_type=identifier, shape=box, style="rounded, filled"];
146 [code="a + b", color=white, fillcolor="#BFE6D3", label="21_ binary_expression--binary_expression\n146_a + b-22-22", node_type=binary_expression, shape=box, style="rounded, filled"];
147 [code=a, color=white, fillcolor="#BFE6D3", label="21_ a--identifier\n147_a-22-22", node_type=identifier, shape=box, style="rounded, filled"];
148 [code=b, color=white, fillcolor="#BFE6D3", label="21_ b--identifier\n148_b-22-22", node_type=identifier, shape=box, style="rounded, filled"];
149 [code="require(c >= a);", color=white, fillcolor="#BFE6D3", label="22_ require(c >= a);\n149-expression_statement-23-23", method="add(uint256 a,uint256 b)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
150 [code="require(c >= a)", color=white, fillcolor="#BFE6D3", label="22_ call_expression--call_expression\n150_require(c >= a)-23-23", node_type=call_expression, shape=box, style="rounded, filled"];
151 [code=require, color=white, fillcolor="#BFE6D3", label="22_ require--identifier\n151_require-23-23", node_type=identifier, shape=box, style="rounded, filled"];
152 [code="c >= a", color=white, fillcolor="#BFE6D3", label="22_ call_argument--call_argument\n152_c >= a-23-23", node_type=call_argument, shape=box, style="rounded, filled"];
153 [code="c >= a", color=white, fillcolor="#BFE6D3", label="22_ binary_expression--binary_expression\n153_c >= a-23-23", node_type=binary_expression, shape=box, style="rounded, filled"];
154 [code=c, color=white, fillcolor="#BFE6D3", label="22_ c--identifier\n154_c-23-23", node_type=identifier, shape=box, style="rounded, filled"];
155 [code=a, color=white, fillcolor="#BFE6D3", label="22_ a--identifier\n155_a-23-23", node_type=identifier, shape=box, style="rounded, filled"];
156 [code="return c;", color=white, fillcolor="#BFE6D3", label="23_ return c;\n156-return-24-24", method="add(uint256 a,uint256 b)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
157 [code=c, color=white, fillcolor="#BFE6D3", label="23_ c--identifier\n157_c-24-24", node_type=identifier, shape=box, style="rounded, filled"];
158 [code="function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }", color=white, fillcolor="#BFE6D3", label="25_ function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n158-function_definition-26-29", method="mod(uint256 a,uint256 b)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
159 [code=mod, color=white, fillcolor="#BFE6D3", label="25_ mod--identifier\n159_mod-26-26", node_type=identifier, shape=box, style="rounded, filled"];
160 [code="uint256 a", color=white, fillcolor="#BFE6D3", label="25_ parameter--parameter\n160_uint256 a-26-26", node_type=parameter, shape=box, style="rounded, filled"];
161 [code=uint256, color=white, fillcolor="#BFE6D3", label="25_ type_name--type_name\n161_uint256-26-26", node_type=type_name, shape=box, style="rounded, filled"];
162 [code=uint256, color=white, fillcolor="#BFE6D3", label="25_ primitive_type--primitive_type\n162_uint256-26-26", node_type=primitive_type, shape=box, style="rounded, filled"];
163 [code=a, color=white, fillcolor="#BFE6D3", label="25_ a--identifier\n163_a-26-26", node_type=identifier, shape=box, style="rounded, filled"];
164 [code="uint256 b", color=white, fillcolor="#BFE6D3", label="25_ parameter--parameter\n164_uint256 b-26-26", node_type=parameter, shape=box, style="rounded, filled"];
165 [code=uint256, color=white, fillcolor="#BFE6D3", label="25_ type_name--type_name\n165_uint256-26-26", node_type=type_name, shape=box, style="rounded, filled"];
166 [code=uint256, color=white, fillcolor="#BFE6D3", label="25_ primitive_type--primitive_type\n166_uint256-26-26", node_type=primitive_type, shape=box, style="rounded, filled"];
167 [code=b, color=white, fillcolor="#BFE6D3", label="25_ b--identifier\n167_b-26-26", node_type=identifier, shape=box, style="rounded, filled"];
168 [code=internal, color=white, fillcolor="#BFE6D3", label="25_ visibility--visibility\n168_internal-26-26", node_type=visibility, shape=box, style="rounded, filled"];
169 [code=pure, color=white, fillcolor="#BFE6D3", label="25_ state_mutability--state_mutability\n169_pure-26-26", node_type=state_mutability, shape=box, style="rounded, filled"];
170 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="25_ return_type_definition--return_type_definition\n170_returns (uint256)-26-26", node_type=return_type_definition, shape=box, style="rounded, filled"];
171 [code=uint256, color=white, fillcolor="#BFE6D3", label="25_ parameter--parameter\n171_uint256-26-26", node_type=parameter, shape=box, style="rounded, filled"];
172 [code=uint256, color=white, fillcolor="#BFE6D3", label="25_ type_name--type_name\n172_uint256-26-26", node_type=type_name, shape=box, style="rounded, filled"];
173 [code=uint256, color=white, fillcolor="#BFE6D3", label="25_ primitive_type--primitive_type\n173_uint256-26-26", node_type=primitive_type, shape=box, style="rounded, filled"];
174 [code="{\n        require(b != 0);\n        return a % b;\n    }", color=white, fillcolor="#BFE6D3", label="25_ function_body--function_body\n174_{\n        require(b != 0);\n        return a % b;\n    }-26-29", node_type=function_body, shape=box, style="rounded, filled"];
175 [code="require(b != 0);", color=white, fillcolor="#BFE6D3", label="26_ require(b != 0);\n175-expression_statement-27-27", method="mod(uint256 a,uint256 b)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
176 [code="require(b != 0)", color=white, fillcolor="#BFE6D3", label="26_ call_expression--call_expression\n176_require(b != 0)-27-27", node_type=call_expression, shape=box, style="rounded, filled"];
177 [code=require, color=white, fillcolor="#BFE6D3", label="26_ require--identifier\n177_require-27-27", node_type=identifier, shape=box, style="rounded, filled"];
178 [code="b != 0", color=white, fillcolor="#BFE6D3", label="26_ call_argument--call_argument\n178_b != 0-27-27", node_type=call_argument, shape=box, style="rounded, filled"];
179 [code="b != 0", color=white, fillcolor="#BFE6D3", label="26_ binary_expression--binary_expression\n179_b != 0-27-27", node_type=binary_expression, shape=box, style="rounded, filled"];
180 [code=b, color=white, fillcolor="#BFE6D3", label="26_ b--identifier\n180_b-27-27", node_type=identifier, shape=box, style="rounded, filled"];
181 [code=0, color=white, fillcolor="#BFE6D3", label="26_ 0--number_literal\n181_0-27-27", node_type=number_literal, shape=box, style="rounded, filled"];
182 [code="return a % b;", color=white, fillcolor="#BFE6D3", label="27_ return a % b;\n182-return-28-28", method="mod(uint256 a,uint256 b)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
183 [code="a % b", color=white, fillcolor="#BFE6D3", label="27_ binary_expression--binary_expression\n183_a % b-28-28", node_type=binary_expression, shape=box, style="rounded, filled"];
184 [code=a, color=white, fillcolor="#BFE6D3", label="27_ a--identifier\n184_a-28-28", node_type=identifier, shape=box, style="rounded, filled"];
185 [code=b, color=white, fillcolor="#BFE6D3", label="27_ b--identifier\n185_b-28-28", node_type=identifier, shape=box, style="rounded, filled"];
186 [code="interface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Burn(address indexed from, uint256 value);\n}", color=white, fillcolor="#BFE6D3", label="30_ interface_declaration--interface_declaration\n186_interface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Burn(address indexed from, uint256 value);\n}-31-41", node_type=interface_declaration, shape=box, style="rounded, filled"];
187 [code=IERC20, color=white, fillcolor="#BFE6D3", label="30_ IERC20--identifier\n187_IERC20-31-31", node_type=identifier, shape=box, style="rounded, filled"];
188 [code="{\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Burn(address indexed from, uint256 value);\n}", color=white, fillcolor="#BFE6D3", label="30_ contract_body--contract_body\n188_{\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Burn(address indexed from, uint256 value);\n}-31-41", node_type=contract_body, shape=box, style="rounded, filled"];
189 [code="function totalSupply() external view returns (uint256);", color=white, fillcolor="#BFE6D3", label="31_ function totalSupply() external view returns (uint256);\n189-function_definition-32-32", method="totalSupply()", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
190 [code=totalSupply, color=white, fillcolor="#BFE6D3", label="31_ totalSupply--identifier\n190_totalSupply-32-32", node_type=identifier, shape=box, style="rounded, filled"];
191 [code=external, color=white, fillcolor="#BFE6D3", label="31_ visibility--visibility\n191_external-32-32", node_type=visibility, shape=box, style="rounded, filled"];
192 [code=view, color=white, fillcolor="#BFE6D3", label="31_ state_mutability--state_mutability\n192_view-32-32", node_type=state_mutability, shape=box, style="rounded, filled"];
193 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="31_ return_type_definition--return_type_definition\n193_returns (uint256)-32-32", node_type=return_type_definition, shape=box, style="rounded, filled"];
194 [code=uint256, color=white, fillcolor="#BFE6D3", label="31_ parameter--parameter\n194_uint256-32-32", node_type=parameter, shape=box, style="rounded, filled"];
195 [code=uint256, color=white, fillcolor="#BFE6D3", label="31_ type_name--type_name\n195_uint256-32-32", node_type=type_name, shape=box, style="rounded, filled"];
196 [code=uint256, color=white, fillcolor="#BFE6D3", label="31_ primitive_type--primitive_type\n196_uint256-32-32", node_type=primitive_type, shape=box, style="rounded, filled"];
197 [code="function balanceOf(address who) external view returns (uint256);", color=white, fillcolor="#BFE6D3", label="32_ function balanceOf(address who) external view returns (uint256);\n197-function_definition-33-33", method="balanceOf(address who)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
198 [code=balanceOf, color=white, fillcolor="#BFE6D3", label="32_ balanceOf--identifier\n198_balanceOf-33-33", node_type=identifier, shape=box, style="rounded, filled"];
199 [code="address who", color=white, fillcolor="#BFE6D3", label="32_ parameter--parameter\n199_address who-33-33", node_type=parameter, shape=box, style="rounded, filled"];
200 [code=address, color=white, fillcolor="#BFE6D3", label="32_ type_name--type_name\n200_address-33-33", node_type=type_name, shape=box, style="rounded, filled"];
201 [code=address, color=white, fillcolor="#BFE6D3", label="32_ primitive_type--primitive_type\n201_address-33-33", node_type=primitive_type, shape=box, style="rounded, filled"];
202 [code=who, color=white, fillcolor="#BFE6D3", label="32_ who--identifier\n202_who-33-33", node_type=identifier, shape=box, style="rounded, filled"];
203 [code=external, color=white, fillcolor="#BFE6D3", label="32_ visibility--visibility\n203_external-33-33", node_type=visibility, shape=box, style="rounded, filled"];
204 [code=view, color=white, fillcolor="#BFE6D3", label="32_ state_mutability--state_mutability\n204_view-33-33", node_type=state_mutability, shape=box, style="rounded, filled"];
205 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="32_ return_type_definition--return_type_definition\n205_returns (uint256)-33-33", node_type=return_type_definition, shape=box, style="rounded, filled"];
206 [code=uint256, color=white, fillcolor="#BFE6D3", label="32_ parameter--parameter\n206_uint256-33-33", node_type=parameter, shape=box, style="rounded, filled"];
207 [code=uint256, color=white, fillcolor="#BFE6D3", label="32_ type_name--type_name\n207_uint256-33-33", node_type=type_name, shape=box, style="rounded, filled"];
208 [code=uint256, color=white, fillcolor="#BFE6D3", label="32_ primitive_type--primitive_type\n208_uint256-33-33", node_type=primitive_type, shape=box, style="rounded, filled"];
209 [code="function transfer(address to, uint256 value) external returns (bool);", color=white, fillcolor="#BFE6D3", label="33_ function transfer(address to, uint256 value) external returns (bool);\n209-function_definition-34-34", method="transfer(address to,uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
210 [code=transfer, color=white, fillcolor="#BFE6D3", label="33_ transfer--identifier\n210_transfer-34-34", node_type=identifier, shape=box, style="rounded, filled"];
211 [code="address to", color=white, fillcolor="#BFE6D3", label="33_ parameter--parameter\n211_address to-34-34", node_type=parameter, shape=box, style="rounded, filled"];
212 [code=address, color=white, fillcolor="#BFE6D3", label="33_ type_name--type_name\n212_address-34-34", node_type=type_name, shape=box, style="rounded, filled"];
213 [code=address, color=white, fillcolor="#BFE6D3", label="33_ primitive_type--primitive_type\n213_address-34-34", node_type=primitive_type, shape=box, style="rounded, filled"];
214 [code=to, color=white, fillcolor="#BFE6D3", label="33_ to--identifier\n214_to-34-34", node_type=identifier, shape=box, style="rounded, filled"];
215 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="33_ parameter--parameter\n215_uint256 value-34-34", node_type=parameter, shape=box, style="rounded, filled"];
216 [code=uint256, color=white, fillcolor="#BFE6D3", label="33_ type_name--type_name\n216_uint256-34-34", node_type=type_name, shape=box, style="rounded, filled"];
217 [code=uint256, color=white, fillcolor="#BFE6D3", label="33_ primitive_type--primitive_type\n217_uint256-34-34", node_type=primitive_type, shape=box, style="rounded, filled"];
218 [code=value, color=white, fillcolor="#BFE6D3", label="33_ value--identifier\n218_value-34-34", node_type=identifier, shape=box, style="rounded, filled"];
219 [code=external, color=white, fillcolor="#BFE6D3", label="33_ visibility--visibility\n219_external-34-34", node_type=visibility, shape=box, style="rounded, filled"];
220 [code="returns (bool)", color=white, fillcolor="#BFE6D3", label="33_ return_type_definition--return_type_definition\n220_returns (bool)-34-34", node_type=return_type_definition, shape=box, style="rounded, filled"];
221 [code=bool, color=white, fillcolor="#BFE6D3", label="33_ parameter--parameter\n221_bool-34-34", node_type=parameter, shape=box, style="rounded, filled"];
222 [code=bool, color=white, fillcolor="#BFE6D3", label="33_ type_name--type_name\n222_bool-34-34", node_type=type_name, shape=box, style="rounded, filled"];
223 [code=bool, color=white, fillcolor="#BFE6D3", label="33_ primitive_type--primitive_type\n223_bool-34-34", node_type=primitive_type, shape=box, style="rounded, filled"];
224 [code="function transferFrom(address from, address to, uint256 value) external returns (bool);", color=white, fillcolor="#BFE6D3", label="34_ function transferFrom(address from, address to, uint256 value) external returns (bool);\n224-function_definition-35-35", method="transferFrom(address from,address to,uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
225 [code=transferFrom, color=white, fillcolor="#BFE6D3", label="34_ transferFrom--identifier\n225_transferFrom-35-35", node_type=identifier, shape=box, style="rounded, filled"];
226 [code="address from", color=white, fillcolor="#BFE6D3", label="34_ parameter--parameter\n226_address from-35-35", node_type=parameter, shape=box, style="rounded, filled"];
227 [code=address, color=white, fillcolor="#BFE6D3", label="34_ type_name--type_name\n227_address-35-35", node_type=type_name, shape=box, style="rounded, filled"];
228 [code=address, color=white, fillcolor="#BFE6D3", label="34_ primitive_type--primitive_type\n228_address-35-35", node_type=primitive_type, shape=box, style="rounded, filled"];
229 [code=from, color=white, fillcolor="#BFE6D3", label="34_ from--identifier\n229_from-35-35", node_type=identifier, shape=box, style="rounded, filled"];
230 [code="address to", color=white, fillcolor="#BFE6D3", label="34_ parameter--parameter\n230_address to-35-35", node_type=parameter, shape=box, style="rounded, filled"];
231 [code=address, color=white, fillcolor="#BFE6D3", label="34_ type_name--type_name\n231_address-35-35", node_type=type_name, shape=box, style="rounded, filled"];
232 [code=address, color=white, fillcolor="#BFE6D3", label="34_ primitive_type--primitive_type\n232_address-35-35", node_type=primitive_type, shape=box, style="rounded, filled"];
233 [code=to, color=white, fillcolor="#BFE6D3", label="34_ to--identifier\n233_to-35-35", node_type=identifier, shape=box, style="rounded, filled"];
234 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="34_ parameter--parameter\n234_uint256 value-35-35", node_type=parameter, shape=box, style="rounded, filled"];
235 [code=uint256, color=white, fillcolor="#BFE6D3", label="34_ type_name--type_name\n235_uint256-35-35", node_type=type_name, shape=box, style="rounded, filled"];
236 [code=uint256, color=white, fillcolor="#BFE6D3", label="34_ primitive_type--primitive_type\n236_uint256-35-35", node_type=primitive_type, shape=box, style="rounded, filled"];
237 [code=value, color=white, fillcolor="#BFE6D3", label="34_ value--identifier\n237_value-35-35", node_type=identifier, shape=box, style="rounded, filled"];
238 [code=external, color=white, fillcolor="#BFE6D3", label="34_ visibility--visibility\n238_external-35-35", node_type=visibility, shape=box, style="rounded, filled"];
239 [code="returns (bool)", color=white, fillcolor="#BFE6D3", label="34_ return_type_definition--return_type_definition\n239_returns (bool)-35-35", node_type=return_type_definition, shape=box, style="rounded, filled"];
240 [code=bool, color=white, fillcolor="#BFE6D3", label="34_ parameter--parameter\n240_bool-35-35", node_type=parameter, shape=box, style="rounded, filled"];
241 [code=bool, color=white, fillcolor="#BFE6D3", label="34_ type_name--type_name\n241_bool-35-35", node_type=type_name, shape=box, style="rounded, filled"];
242 [code=bool, color=white, fillcolor="#BFE6D3", label="34_ primitive_type--primitive_type\n242_bool-35-35", node_type=primitive_type, shape=box, style="rounded, filled"];
243 [code="function approve(address spender, uint256 value) external returns (bool);", color=white, fillcolor="#BFE6D3", label="35_ function approve(address spender, uint256 value) external returns (bool);\n243-function_definition-36-36", method="approve(address spender,uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
244 [code=approve, color=white, fillcolor="#BFE6D3", label="35_ approve--identifier\n244_approve-36-36", node_type=identifier, shape=box, style="rounded, filled"];
245 [code="address spender", color=white, fillcolor="#BFE6D3", label="35_ parameter--parameter\n245_address spender-36-36", node_type=parameter, shape=box, style="rounded, filled"];
246 [code=address, color=white, fillcolor="#BFE6D3", label="35_ type_name--type_name\n246_address-36-36", node_type=type_name, shape=box, style="rounded, filled"];
247 [code=address, color=white, fillcolor="#BFE6D3", label="35_ primitive_type--primitive_type\n247_address-36-36", node_type=primitive_type, shape=box, style="rounded, filled"];
248 [code=spender, color=white, fillcolor="#BFE6D3", label="35_ spender--identifier\n248_spender-36-36", node_type=identifier, shape=box, style="rounded, filled"];
249 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="35_ parameter--parameter\n249_uint256 value-36-36", node_type=parameter, shape=box, style="rounded, filled"];
250 [code=uint256, color=white, fillcolor="#BFE6D3", label="35_ type_name--type_name\n250_uint256-36-36", node_type=type_name, shape=box, style="rounded, filled"];
251 [code=uint256, color=white, fillcolor="#BFE6D3", label="35_ primitive_type--primitive_type\n251_uint256-36-36", node_type=primitive_type, shape=box, style="rounded, filled"];
252 [code=value, color=white, fillcolor="#BFE6D3", label="35_ value--identifier\n252_value-36-36", node_type=identifier, shape=box, style="rounded, filled"];
253 [code=external, color=white, fillcolor="#BFE6D3", label="35_ visibility--visibility\n253_external-36-36", node_type=visibility, shape=box, style="rounded, filled"];
254 [code="returns (bool)", color=white, fillcolor="#BFE6D3", label="35_ return_type_definition--return_type_definition\n254_returns (bool)-36-36", node_type=return_type_definition, shape=box, style="rounded, filled"];
255 [code=bool, color=white, fillcolor="#BFE6D3", label="35_ parameter--parameter\n255_bool-36-36", node_type=parameter, shape=box, style="rounded, filled"];
256 [code=bool, color=white, fillcolor="#BFE6D3", label="35_ type_name--type_name\n256_bool-36-36", node_type=type_name, shape=box, style="rounded, filled"];
257 [code=bool, color=white, fillcolor="#BFE6D3", label="35_ primitive_type--primitive_type\n257_bool-36-36", node_type=primitive_type, shape=box, style="rounded, filled"];
258 [code="function allowance(address owner, address spender) external view returns (uint256);", color=white, fillcolor="#BFE6D3", label="36_ function allowance(address owner, address spender) external view returns (uint256);\n258-function_definition-37-37", method="allowance(address owner,address spender)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
259 [code=allowance, color=white, fillcolor="#BFE6D3", label="36_ allowance--identifier\n259_allowance-37-37", node_type=identifier, shape=box, style="rounded, filled"];
260 [code="address owner", color=white, fillcolor="#BFE6D3", label="36_ parameter--parameter\n260_address owner-37-37", node_type=parameter, shape=box, style="rounded, filled"];
261 [code=address, color=white, fillcolor="#BFE6D3", label="36_ type_name--type_name\n261_address-37-37", node_type=type_name, shape=box, style="rounded, filled"];
262 [code=address, color=white, fillcolor="#BFE6D3", label="36_ primitive_type--primitive_type\n262_address-37-37", node_type=primitive_type, shape=box, style="rounded, filled"];
263 [code=owner, color=white, fillcolor="#BFE6D3", label="36_ owner--identifier\n263_owner-37-37", node_type=identifier, shape=box, style="rounded, filled"];
264 [code="address spender", color=white, fillcolor="#BFE6D3", label="36_ parameter--parameter\n264_address spender-37-37", node_type=parameter, shape=box, style="rounded, filled"];
265 [code=address, color=white, fillcolor="#BFE6D3", label="36_ type_name--type_name\n265_address-37-37", node_type=type_name, shape=box, style="rounded, filled"];
266 [code=address, color=white, fillcolor="#BFE6D3", label="36_ primitive_type--primitive_type\n266_address-37-37", node_type=primitive_type, shape=box, style="rounded, filled"];
267 [code=spender, color=white, fillcolor="#BFE6D3", label="36_ spender--identifier\n267_spender-37-37", node_type=identifier, shape=box, style="rounded, filled"];
268 [code=external, color=white, fillcolor="#BFE6D3", label="36_ visibility--visibility\n268_external-37-37", node_type=visibility, shape=box, style="rounded, filled"];
269 [code=view, color=white, fillcolor="#BFE6D3", label="36_ state_mutability--state_mutability\n269_view-37-37", node_type=state_mutability, shape=box, style="rounded, filled"];
270 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="36_ return_type_definition--return_type_definition\n270_returns (uint256)-37-37", node_type=return_type_definition, shape=box, style="rounded, filled"];
271 [code=uint256, color=white, fillcolor="#BFE6D3", label="36_ parameter--parameter\n271_uint256-37-37", node_type=parameter, shape=box, style="rounded, filled"];
272 [code=uint256, color=white, fillcolor="#BFE6D3", label="36_ type_name--type_name\n272_uint256-37-37", node_type=type_name, shape=box, style="rounded, filled"];
273 [code=uint256, color=white, fillcolor="#BFE6D3", label="36_ primitive_type--primitive_type\n273_uint256-37-37", node_type=primitive_type, shape=box, style="rounded, filled"];
274 [code="event Transfer(address indexed from, address indexed to, uint256 value);", color=white, fillcolor="#BFE6D3", label="37_ event_definition--event_definition\n274_event Transfer(address indexed from, address indexed to, uint256 value);-38-38", node_type=event_definition, shape=box, style="rounded, filled"];
275 [code=Transfer, color=white, fillcolor="#BFE6D3", label="37_ Transfer--identifier\n275_Transfer-38-38", node_type=identifier, shape=box, style="rounded, filled"];
276 [code="address indexed from", color=white, fillcolor="#BFE6D3", label="37_ event_paramater--event_paramater\n276_address indexed from-38-38", node_type=event_paramater, shape=box, style="rounded, filled"];
277 [code=address, color=white, fillcolor="#BFE6D3", label="37_ type_name--type_name\n277_address-38-38", node_type=type_name, shape=box, style="rounded, filled"];
278 [code=address, color=white, fillcolor="#BFE6D3", label="37_ primitive_type--primitive_type\n278_address-38-38", node_type=primitive_type, shape=box, style="rounded, filled"];
279 [code=from, color=white, fillcolor="#BFE6D3", label="37_ from--identifier\n279_from-38-38", node_type=identifier, shape=box, style="rounded, filled"];
280 [code="address indexed to", color=white, fillcolor="#BFE6D3", label="37_ event_paramater--event_paramater\n280_address indexed to-38-38", node_type=event_paramater, shape=box, style="rounded, filled"];
281 [code=address, color=white, fillcolor="#BFE6D3", label="37_ type_name--type_name\n281_address-38-38", node_type=type_name, shape=box, style="rounded, filled"];
282 [code=address, color=white, fillcolor="#BFE6D3", label="37_ primitive_type--primitive_type\n282_address-38-38", node_type=primitive_type, shape=box, style="rounded, filled"];
283 [code=to, color=white, fillcolor="#BFE6D3", label="37_ to--identifier\n283_to-38-38", node_type=identifier, shape=box, style="rounded, filled"];
284 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="37_ event_paramater--event_paramater\n284_uint256 value-38-38", node_type=event_paramater, shape=box, style="rounded, filled"];
285 [code=uint256, color=white, fillcolor="#BFE6D3", label="37_ type_name--type_name\n285_uint256-38-38", node_type=type_name, shape=box, style="rounded, filled"];
286 [code=uint256, color=white, fillcolor="#BFE6D3", label="37_ primitive_type--primitive_type\n286_uint256-38-38", node_type=primitive_type, shape=box, style="rounded, filled"];
287 [code=value, color=white, fillcolor="#BFE6D3", label="37_ value--identifier\n287_value-38-38", node_type=identifier, shape=box, style="rounded, filled"];
288 [code="event Approval(address indexed owner, address indexed spender, uint256 value);", color=white, fillcolor="#BFE6D3", label="38_ event_definition--event_definition\n288_event Approval(address indexed owner, address indexed spender, uint256 value);-39-39", node_type=event_definition, shape=box, style="rounded, filled"];
289 [code=Approval, color=white, fillcolor="#BFE6D3", label="38_ Approval--identifier\n289_Approval-39-39", node_type=identifier, shape=box, style="rounded, filled"];
290 [code="address indexed owner", color=white, fillcolor="#BFE6D3", label="38_ event_paramater--event_paramater\n290_address indexed owner-39-39", node_type=event_paramater, shape=box, style="rounded, filled"];
291 [code=address, color=white, fillcolor="#BFE6D3", label="38_ type_name--type_name\n291_address-39-39", node_type=type_name, shape=box, style="rounded, filled"];
292 [code=address, color=white, fillcolor="#BFE6D3", label="38_ primitive_type--primitive_type\n292_address-39-39", node_type=primitive_type, shape=box, style="rounded, filled"];
293 [code=owner, color=white, fillcolor="#BFE6D3", label="38_ owner--identifier\n293_owner-39-39", node_type=identifier, shape=box, style="rounded, filled"];
294 [code="address indexed spender", color=white, fillcolor="#BFE6D3", label="38_ event_paramater--event_paramater\n294_address indexed spender-39-39", node_type=event_paramater, shape=box, style="rounded, filled"];
295 [code=address, color=white, fillcolor="#BFE6D3", label="38_ type_name--type_name\n295_address-39-39", node_type=type_name, shape=box, style="rounded, filled"];
296 [code=address, color=white, fillcolor="#BFE6D3", label="38_ primitive_type--primitive_type\n296_address-39-39", node_type=primitive_type, shape=box, style="rounded, filled"];
297 [code=spender, color=white, fillcolor="#BFE6D3", label="38_ spender--identifier\n297_spender-39-39", node_type=identifier, shape=box, style="rounded, filled"];
298 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="38_ event_paramater--event_paramater\n298_uint256 value-39-39", node_type=event_paramater, shape=box, style="rounded, filled"];
299 [code=uint256, color=white, fillcolor="#BFE6D3", label="38_ type_name--type_name\n299_uint256-39-39", node_type=type_name, shape=box, style="rounded, filled"];
300 [code=uint256, color=white, fillcolor="#BFE6D3", label="38_ primitive_type--primitive_type\n300_uint256-39-39", node_type=primitive_type, shape=box, style="rounded, filled"];
301 [code=value, color=white, fillcolor="#BFE6D3", label="38_ value--identifier\n301_value-39-39", node_type=identifier, shape=box, style="rounded, filled"];
302 [code="event Burn(address indexed from, uint256 value);", color=white, fillcolor="#BFE6D3", label="39_ event_definition--event_definition\n302_event Burn(address indexed from, uint256 value);-40-40", node_type=event_definition, shape=box, style="rounded, filled"];
303 [code=Burn, color=white, fillcolor="#BFE6D3", label="39_ Burn--identifier\n303_Burn-40-40", node_type=identifier, shape=box, style="rounded, filled"];
304 [code="address indexed from", color=white, fillcolor="#BFE6D3", label="39_ event_paramater--event_paramater\n304_address indexed from-40-40", node_type=event_paramater, shape=box, style="rounded, filled"];
305 [code=address, color=white, fillcolor="#BFE6D3", label="39_ type_name--type_name\n305_address-40-40", node_type=type_name, shape=box, style="rounded, filled"];
306 [code=address, color=white, fillcolor="#BFE6D3", label="39_ primitive_type--primitive_type\n306_address-40-40", node_type=primitive_type, shape=box, style="rounded, filled"];
307 [code=from, color=white, fillcolor="#BFE6D3", label="39_ from--identifier\n307_from-40-40", node_type=identifier, shape=box, style="rounded, filled"];
308 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="39_ event_paramater--event_paramater\n308_uint256 value-40-40", node_type=event_paramater, shape=box, style="rounded, filled"];
309 [code=uint256, color=white, fillcolor="#BFE6D3", label="39_ type_name--type_name\n309_uint256-40-40", node_type=type_name, shape=box, style="rounded, filled"];
310 [code=uint256, color=white, fillcolor="#BFE6D3", label="39_ primitive_type--primitive_type\n310_uint256-40-40", node_type=primitive_type, shape=box, style="rounded, filled"];
311 [code=value, color=white, fillcolor="#BFE6D3", label="39_ value--identifier\n311_value-40-40", node_type=identifier, shape=box, style="rounded, filled"];
312 [code="contract ERC20 is IERC20 {\n    using SafeMath for uint256;\n  function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n  uint8 constant DECIMALS = 18;\n  function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n  uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n  function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n  mapping (address => uint256) private _balances;\n  function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n  mapping (address => mapping (address => uint256)) private _allowed;\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\nfunction bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\nfunction withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n    function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\nfunction bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }\nfunction transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\nfunction transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\nfunction withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n    function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\nfunction withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\nfunction bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\nfunction transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\nfunction bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\nfunction transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n}", color=white, fillcolor="#BFE6D3", label="41_ contract_declaration--contract_declaration\n312_contract ERC20 is IERC20 {\n    using SafeMath for uint256;\n  function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n  uint8 constant DECIMALS = 18;\n  function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n  uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n  function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n  mapping (address => uint256) private _balances;\n  function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n  mapping (address => mapping (address => uint256)) private _allowed;\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\nfunction bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\nfunction withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n    function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\nfunction bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }\nfunction transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\nfunction transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\nfunction withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n    function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\nfunction withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\nfunction bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\nfunction transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\nfunction bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\nfunction transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n}-42-155", node_type=contract_declaration, shape=box, style="rounded, filled"];
313 [code=ERC20, color=white, fillcolor="#BFE6D3", label="41_ ERC20--identifier\n313_ERC20-42-42", node_type=identifier, shape=box, style="rounded, filled"];
314 [code=IERC20, color=white, fillcolor="#BFE6D3", label="41_ inheritance_specifier--inheritance_specifier\n314_IERC20-42-42", node_type=inheritance_specifier, shape=box, style="rounded, filled"];
315 [code=IERC20, color=white, fillcolor="#BFE6D3", label="41_ user_defined_type--user_defined_type\n315_IERC20-42-42", node_type=user_defined_type, shape=box, style="rounded, filled"];
316 [code=IERC20, color=white, fillcolor="#BFE6D3", label="41_ IERC20--identifier\n316_IERC20-42-42", node_type=identifier, shape=box, style="rounded, filled"];
317 [code="{\n    using SafeMath for uint256;\n  function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n  uint8 constant DECIMALS = 18;\n  function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n  uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n  function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n  mapping (address => uint256) private _balances;\n  function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n  mapping (address => mapping (address => uint256)) private _allowed;\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\nfunction bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\nfunction withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n    function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\nfunction bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }\nfunction transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\nfunction transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\nfunction withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n    function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\nfunction withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\nfunction bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\nfunction transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\nfunction bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\nfunction transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n}", color=white, fillcolor="#BFE6D3", label="41_ contract_body--contract_body\n317_{\n    using SafeMath for uint256;\n  function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n  uint8 constant DECIMALS = 18;\n  function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n  uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n  function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n  mapping (address => uint256) private _balances;\n  function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n  mapping (address => mapping (address => uint256)) private _allowed;\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\nfunction bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\nfunction withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n    function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\nfunction bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }\nfunction transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\nfunction transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\nfunction withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n    function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\nfunction withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\nfunction bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\nfunction transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\nfunction bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\nfunction transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n}-42-155", node_type=contract_body, shape=box, style="rounded, filled"];
318 [code="using SafeMath for uint256;", color=white, fillcolor="#BFE6D3", label="42_ using_directive--using_directive\n318_using SafeMath for uint256;-43-43", node_type=using_directive, shape=box, style="rounded, filled"];
319 [code=SafeMath, color=white, fillcolor="#BFE6D3", label="42_ type_alias--type_alias\n319_SafeMath-43-43", node_type=type_alias, shape=box, style="rounded, filled"];
320 [code=SafeMath, color=white, fillcolor="#BFE6D3", label="42_ SafeMath--identifier\n320_SafeMath-43-43", node_type=identifier, shape=box, style="rounded, filled"];
321 [code=uint256, color=white, fillcolor="#BFE6D3", label="42_ type_name--type_name\n321_uint256-43-43", node_type=type_name, shape=box, style="rounded, filled"];
322 [code=uint256, color=white, fillcolor="#BFE6D3", label="42_ primitive_type--primitive_type\n322_uint256-43-43", node_type=primitive_type, shape=box, style="rounded, filled"];
323 [code="function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="43_ function transferTo_txorigin3(address to, uint amount,address owner_txorigin3) public {\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}\n323-function_definition-44-47", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
324 [code=transferTo_txorigin3, color=white, fillcolor="#BFE6D3", label="43_ transferTo_txorigin3--identifier\n324_transferTo_txorigin3-44-44", node_type=identifier, shape=box, style="rounded, filled"];
325 [code="address to", color=white, fillcolor="#BFE6D3", label="43_ parameter--parameter\n325_address to-44-44", node_type=parameter, shape=box, style="rounded, filled"];
326 [code=address, color=white, fillcolor="#BFE6D3", label="43_ type_name--type_name\n326_address-44-44", node_type=type_name, shape=box, style="rounded, filled"];
327 [code=address, color=white, fillcolor="#BFE6D3", label="43_ primitive_type--primitive_type\n327_address-44-44", node_type=primitive_type, shape=box, style="rounded, filled"];
328 [code=to, color=white, fillcolor="#BFE6D3", label="43_ to--identifier\n328_to-44-44", node_type=identifier, shape=box, style="rounded, filled"];
329 [code="uint amount", color=white, fillcolor="#BFE6D3", label="43_ parameter--parameter\n329_uint amount-44-44", node_type=parameter, shape=box, style="rounded, filled"];
330 [code=uint, color=white, fillcolor="#BFE6D3", label="43_ type_name--type_name\n330_uint-44-44", node_type=type_name, shape=box, style="rounded, filled"];
331 [code=uint, color=white, fillcolor="#BFE6D3", label="43_ primitive_type--primitive_type\n331_uint-44-44", node_type=primitive_type, shape=box, style="rounded, filled"];
332 [code=amount, color=white, fillcolor="#BFE6D3", label="43_ amount--identifier\n332_amount-44-44", node_type=identifier, shape=box, style="rounded, filled"];
333 [code="address owner_txorigin3", color=white, fillcolor="#BFE6D3", label="43_ parameter--parameter\n333_address owner_txorigin3-44-44", node_type=parameter, shape=box, style="rounded, filled"];
334 [code=address, color=white, fillcolor="#BFE6D3", label="43_ type_name--type_name\n334_address-44-44", node_type=type_name, shape=box, style="rounded, filled"];
335 [code=address, color=white, fillcolor="#BFE6D3", label="43_ primitive_type--primitive_type\n335_address-44-44", node_type=primitive_type, shape=box, style="rounded, filled"];
336 [code=owner_txorigin3, color=white, fillcolor="#BFE6D3", label="43_ owner_txorigin3--identifier\n336_owner_txorigin3-44-44", node_type=identifier, shape=box, style="rounded, filled"];
337 [code=public, color=white, fillcolor="#BFE6D3", label="43_ visibility--visibility\n337_public-44-44", node_type=visibility, shape=box, style="rounded, filled"];
338 [code="{\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="43_ function_body--function_body\n338_{\n  require(tx.origin == owner_txorigin3);\n  to.call.value(amount);\n}-44-47", node_type=function_body, shape=box, style="rounded, filled"];
339 [code="require(tx.origin == owner_txorigin3);", color=white, fillcolor="#BFE6D3", label="44_ require(tx.origin == owner_txorigin3);\n339-expression_statement-45-45", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
340 [code="require(tx.origin == owner_txorigin3)", color=white, fillcolor="#BFE6D3", label="44_ call_expression--call_expression\n340_require(tx.origin == owner_txorigin3)-45-45", node_type=call_expression, shape=box, style="rounded, filled"];
341 [code=require, color=white, fillcolor="#BFE6D3", label="44_ require--identifier\n341_require-45-45", node_type=identifier, shape=box, style="rounded, filled"];
342 [code="tx.origin == owner_txorigin3", color=white, fillcolor="#BFE6D3", label="44_ call_argument--call_argument\n342_tx.origin == owner_txorigin3-45-45", node_type=call_argument, shape=box, style="rounded, filled"];
343 [code="tx.origin == owner_txorigin3", color=white, fillcolor="#BFE6D3", label="44_ binary_expression--binary_expression\n343_tx.origin == owner_txorigin3-45-45", node_type=binary_expression, shape=box, style="rounded, filled"];
344 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="44_ member_expression--member_expression\n344_tx.origin-45-45", node_type=member_expression, shape=box, style="rounded, filled"];
345 [code=tx, color=white, fillcolor="#BFE6D3", label="44_ tx--identifier\n345_tx-45-45", node_type=identifier, shape=box, style="rounded, filled"];
346 [code=origin, color=white, fillcolor="#BFE6D3", label="44_ origin--identifier\n346_origin-45-45", node_type=identifier, shape=box, style="rounded, filled"];
347 [code=owner_txorigin3, color=white, fillcolor="#BFE6D3", label="44_ owner_txorigin3--identifier\n347_owner_txorigin3-45-45", node_type=identifier, shape=box, style="rounded, filled"];
348 [code="to.call.value(amount);", color=white, fillcolor="#BFE6D3", label="45_ to.call.value(amount);\n348-expression_statement-46-46", method="transferTo_txorigin3(address to,uint amount,address owner_txorigin3)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
349 [code="to.call.value(amount)", color=white, fillcolor="#BFE6D3", label="45_ call_expression--call_expression\n349_to.call.value(amount)-46-46", node_type=call_expression, shape=box, style="rounded, filled"];
350 [code="to.call.value", color=white, fillcolor="#BFE6D3", label="45_ member_expression--member_expression\n350_to.call.value-46-46", node_type=member_expression, shape=box, style="rounded, filled"];
351 [code="to.call", color=white, fillcolor="#BFE6D3", label="45_ member_expression--member_expression\n351_to.call-46-46", node_type=member_expression, shape=box, style="rounded, filled"];
352 [code=to, color=white, fillcolor="#BFE6D3", label="45_ to--identifier\n352_to-46-46", node_type=identifier, shape=box, style="rounded, filled"];
353 [code=call, color=white, fillcolor="#BFE6D3", label="45_ call--identifier\n353_call-46-46", node_type=identifier, shape=box, style="rounded, filled"];
354 [code=value, color=white, fillcolor="#BFE6D3", label="45_ value--identifier\n354_value-46-46", node_type=identifier, shape=box, style="rounded, filled"];
355 [code=amount, color=white, fillcolor="#BFE6D3", label="45_ call_argument--call_argument\n355_amount-46-46", node_type=call_argument, shape=box, style="rounded, filled"];
356 [code=amount, color=white, fillcolor="#BFE6D3", label="45_ amount--identifier\n356_amount-46-46", node_type=identifier, shape=box, style="rounded, filled"];
357 [code="uint8 constant DECIMALS = 18;", color=white, fillcolor="#BFE6D3", label="47_ uint8 constant DECIMALS = 18;\n357-new_variable-48-48", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
358 [code=uint8, color=white, fillcolor="#BFE6D3", label="47_ type_name--type_name\n358_uint8-48-48", node_type=type_name, shape=box, style="rounded, filled"];
359 [code=uint8, color=white, fillcolor="#BFE6D3", label="47_ primitive_type--primitive_type\n359_uint8-48-48", node_type=primitive_type, shape=box, style="rounded, filled"];
360 [code=DECIMALS, color=white, fillcolor="#BFE6D3", label="47_ DECIMALS--identifier\n360_DECIMALS-48-48", node_type=identifier, shape=box, style="rounded, filled"];
361 [code=18, color=white, fillcolor="#BFE6D3", label="47_ 18--number_literal\n361_18-48-48", node_type=number_literal, shape=box, style="rounded, filled"];
362 [code="function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}", color=white, fillcolor="#BFE6D3", label="48_ function sendto_txorigin9(address payable receiver, uint amount,address owner_txorigin9) public {\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}\n362-function_definition-49-52", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
363 [code=sendto_txorigin9, color=white, fillcolor="#BFE6D3", label="48_ sendto_txorigin9--identifier\n363_sendto_txorigin9-49-49", node_type=identifier, shape=box, style="rounded, filled"];
364 [code="address payable receiver", color=white, fillcolor="#BFE6D3", label="48_ parameter--parameter\n364_address payable receiver-49-49", node_type=parameter, shape=box, style="rounded, filled"];
365 [code="address payable", color=white, fillcolor="#BFE6D3", label="48_ type_name--type_name\n365_address payable-49-49", node_type=type_name, shape=box, style="rounded, filled"];
366 [code="address payable", color=white, fillcolor="#BFE6D3", label="48_ primitive_type--primitive_type\n366_address payable-49-49", node_type=primitive_type, shape=box, style="rounded, filled"];
367 [code=receiver, color=white, fillcolor="#BFE6D3", label="48_ receiver--identifier\n367_receiver-49-49", node_type=identifier, shape=box, style="rounded, filled"];
368 [code="uint amount", color=white, fillcolor="#BFE6D3", label="48_ parameter--parameter\n368_uint amount-49-49", node_type=parameter, shape=box, style="rounded, filled"];
369 [code=uint, color=white, fillcolor="#BFE6D3", label="48_ type_name--type_name\n369_uint-49-49", node_type=type_name, shape=box, style="rounded, filled"];
370 [code=uint, color=white, fillcolor="#BFE6D3", label="48_ primitive_type--primitive_type\n370_uint-49-49", node_type=primitive_type, shape=box, style="rounded, filled"];
371 [code=amount, color=white, fillcolor="#BFE6D3", label="48_ amount--identifier\n371_amount-49-49", node_type=identifier, shape=box, style="rounded, filled"];
372 [code="address owner_txorigin9", color=white, fillcolor="#BFE6D3", label="48_ parameter--parameter\n372_address owner_txorigin9-49-49", node_type=parameter, shape=box, style="rounded, filled"];
373 [code=address, color=white, fillcolor="#BFE6D3", label="48_ type_name--type_name\n373_address-49-49", node_type=type_name, shape=box, style="rounded, filled"];
374 [code=address, color=white, fillcolor="#BFE6D3", label="48_ primitive_type--primitive_type\n374_address-49-49", node_type=primitive_type, shape=box, style="rounded, filled"];
375 [code=owner_txorigin9, color=white, fillcolor="#BFE6D3", label="48_ owner_txorigin9--identifier\n375_owner_txorigin9-49-49", node_type=identifier, shape=box, style="rounded, filled"];
376 [code=public, color=white, fillcolor="#BFE6D3", label="48_ visibility--visibility\n376_public-49-49", node_type=visibility, shape=box, style="rounded, filled"];
377 [code="{\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}", color=white, fillcolor="#BFE6D3", label="48_ function_body--function_body\n377_{\n	require (tx.origin == owner_txorigin9);\n	receiver.transfer(amount);\n}-49-52", node_type=function_body, shape=box, style="rounded, filled"];
378 [code="require (tx.origin == owner_txorigin9);", color=white, fillcolor="#BFE6D3", label="49_ require (tx.origin == owner_txorigin9);\n378-expression_statement-50-50", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
379 [code="require (tx.origin == owner_txorigin9)", color=white, fillcolor="#BFE6D3", label="49_ call_expression--call_expression\n379_require (tx.origin == owner_txorigin9)-50-50", node_type=call_expression, shape=box, style="rounded, filled"];
380 [code=require, color=white, fillcolor="#BFE6D3", label="49_ require--identifier\n380_require-50-50", node_type=identifier, shape=box, style="rounded, filled"];
381 [code="tx.origin == owner_txorigin9", color=white, fillcolor="#BFE6D3", label="49_ call_argument--call_argument\n381_tx.origin == owner_txorigin9-50-50", node_type=call_argument, shape=box, style="rounded, filled"];
382 [code="tx.origin == owner_txorigin9", color=white, fillcolor="#BFE6D3", label="49_ binary_expression--binary_expression\n382_tx.origin == owner_txorigin9-50-50", node_type=binary_expression, shape=box, style="rounded, filled"];
383 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="49_ member_expression--member_expression\n383_tx.origin-50-50", node_type=member_expression, shape=box, style="rounded, filled"];
384 [code=tx, color=white, fillcolor="#BFE6D3", label="49_ tx--identifier\n384_tx-50-50", node_type=identifier, shape=box, style="rounded, filled"];
385 [code=origin, color=white, fillcolor="#BFE6D3", label="49_ origin--identifier\n385_origin-50-50", node_type=identifier, shape=box, style="rounded, filled"];
386 [code=owner_txorigin9, color=white, fillcolor="#BFE6D3", label="49_ owner_txorigin9--identifier\n386_owner_txorigin9-50-50", node_type=identifier, shape=box, style="rounded, filled"];
387 [code="receiver.transfer(amount);", color=white, fillcolor="#BFE6D3", label="50_ receiver.transfer(amount);\n387-expression_statement-51-51", method="sendto_txorigin9(address payable receiver,uint amount,address owner_txorigin9)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
388 [code="receiver.transfer(amount)", color=white, fillcolor="#BFE6D3", label="50_ call_expression--call_expression\n388_receiver.transfer(amount)-51-51", node_type=call_expression, shape=box, style="rounded, filled"];
389 [code="receiver.transfer", color=white, fillcolor="#BFE6D3", label="50_ member_expression--member_expression\n389_receiver.transfer-51-51", node_type=member_expression, shape=box, style="rounded, filled"];
390 [code=receiver, color=white, fillcolor="#BFE6D3", label="50_ receiver--identifier\n390_receiver-51-51", node_type=identifier, shape=box, style="rounded, filled"];
391 [code=transfer, color=white, fillcolor="#BFE6D3", label="50_ transfer--identifier\n391_transfer-51-51", node_type=identifier, shape=box, style="rounded, filled"];
392 [code=amount, color=white, fillcolor="#BFE6D3", label="50_ call_argument--call_argument\n392_amount-51-51", node_type=call_argument, shape=box, style="rounded, filled"];
393 [code=amount, color=white, fillcolor="#BFE6D3", label="50_ amount--identifier\n393_amount-51-51", node_type=identifier, shape=box, style="rounded, filled"];
394 [code="uint256 private _totalSupply;", color=white, fillcolor="#BFE6D3", label="52_ uint256 private _totalSupply;\n394-new_variable-53-53", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
395 [code=uint256, color=white, fillcolor="#BFE6D3", label="52_ type_name--type_name\n395_uint256-53-53", node_type=type_name, shape=box, style="rounded, filled"];
396 [code=uint256, color=white, fillcolor="#BFE6D3", label="52_ primitive_type--primitive_type\n396_uint256-53-53", node_type=primitive_type, shape=box, style="rounded, filled"];
397 [code=private, color=white, fillcolor="#BFE6D3", label="52_ visibility--visibility\n397_private-53-53", node_type=visibility, shape=box, style="rounded, filled"];
398 [code=_totalSupply, color=white, fillcolor="#BFE6D3", label="52_ _totalSupply--identifier\n398__totalSupply-53-53", node_type=identifier, shape=box, style="rounded, filled"];
399 [code="string private _name;", color=white, fillcolor="#BFE6D3", label="53_ string private _name;\n399-new_variable-54-54", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
400 [code=string, color=white, fillcolor="#BFE6D3", label="53_ type_name--type_name\n400_string-54-54", node_type=type_name, shape=box, style="rounded, filled"];
401 [code=string, color=white, fillcolor="#BFE6D3", label="53_ primitive_type--primitive_type\n401_string-54-54", node_type=primitive_type, shape=box, style="rounded, filled"];
402 [code=private, color=white, fillcolor="#BFE6D3", label="53_ visibility--visibility\n402_private-54-54", node_type=visibility, shape=box, style="rounded, filled"];
403 [code=_name, color=white, fillcolor="#BFE6D3", label="53_ _name--identifier\n403__name-54-54", node_type=identifier, shape=box, style="rounded, filled"];
404 [code="string private _symbol;", color=white, fillcolor="#BFE6D3", label="54_ string private _symbol;\n404-new_variable-55-55", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
405 [code=string, color=white, fillcolor="#BFE6D3", label="54_ type_name--type_name\n405_string-55-55", node_type=type_name, shape=box, style="rounded, filled"];
406 [code=string, color=white, fillcolor="#BFE6D3", label="54_ primitive_type--primitive_type\n406_string-55-55", node_type=primitive_type, shape=box, style="rounded, filled"];
407 [code=private, color=white, fillcolor="#BFE6D3", label="54_ visibility--visibility\n407_private-55-55", node_type=visibility, shape=box, style="rounded, filled"];
408 [code=_symbol, color=white, fillcolor="#BFE6D3", label="54_ _symbol--identifier\n408__symbol-55-55", node_type=identifier, shape=box, style="rounded, filled"];
409 [code="function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}", color=white, fillcolor="#BFE6D3", label="55_ function sendto_txorigin25(address payable receiver, uint amount,address owner_txorigin25) public {\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}\n409-function_definition-56-59", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
410 [code=sendto_txorigin25, color=white, fillcolor="#BFE6D3", label="55_ sendto_txorigin25--identifier\n410_sendto_txorigin25-56-56", node_type=identifier, shape=box, style="rounded, filled"];
411 [code="address payable receiver", color=white, fillcolor="#BFE6D3", label="55_ parameter--parameter\n411_address payable receiver-56-56", node_type=parameter, shape=box, style="rounded, filled"];
412 [code="address payable", color=white, fillcolor="#BFE6D3", label="55_ type_name--type_name\n412_address payable-56-56", node_type=type_name, shape=box, style="rounded, filled"];
413 [code="address payable", color=white, fillcolor="#BFE6D3", label="55_ primitive_type--primitive_type\n413_address payable-56-56", node_type=primitive_type, shape=box, style="rounded, filled"];
414 [code=receiver, color=white, fillcolor="#BFE6D3", label="55_ receiver--identifier\n414_receiver-56-56", node_type=identifier, shape=box, style="rounded, filled"];
415 [code="uint amount", color=white, fillcolor="#BFE6D3", label="55_ parameter--parameter\n415_uint amount-56-56", node_type=parameter, shape=box, style="rounded, filled"];
416 [code=uint, color=white, fillcolor="#BFE6D3", label="55_ type_name--type_name\n416_uint-56-56", node_type=type_name, shape=box, style="rounded, filled"];
417 [code=uint, color=white, fillcolor="#BFE6D3", label="55_ primitive_type--primitive_type\n417_uint-56-56", node_type=primitive_type, shape=box, style="rounded, filled"];
418 [code=amount, color=white, fillcolor="#BFE6D3", label="55_ amount--identifier\n418_amount-56-56", node_type=identifier, shape=box, style="rounded, filled"];
419 [code="address owner_txorigin25", color=white, fillcolor="#BFE6D3", label="55_ parameter--parameter\n419_address owner_txorigin25-56-56", node_type=parameter, shape=box, style="rounded, filled"];
420 [code=address, color=white, fillcolor="#BFE6D3", label="55_ type_name--type_name\n420_address-56-56", node_type=type_name, shape=box, style="rounded, filled"];
421 [code=address, color=white, fillcolor="#BFE6D3", label="55_ primitive_type--primitive_type\n421_address-56-56", node_type=primitive_type, shape=box, style="rounded, filled"];
422 [code=owner_txorigin25, color=white, fillcolor="#BFE6D3", label="55_ owner_txorigin25--identifier\n422_owner_txorigin25-56-56", node_type=identifier, shape=box, style="rounded, filled"];
423 [code=public, color=white, fillcolor="#BFE6D3", label="55_ visibility--visibility\n423_public-56-56", node_type=visibility, shape=box, style="rounded, filled"];
424 [code="{\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}", color=white, fillcolor="#BFE6D3", label="55_ function_body--function_body\n424_{\n	require (tx.origin == owner_txorigin25);\n	receiver.transfer(amount);\n}-56-59", node_type=function_body, shape=box, style="rounded, filled"];
425 [code="require (tx.origin == owner_txorigin25);", color=white, fillcolor="#BFE6D3", label="56_ require (tx.origin == owner_txorigin25);\n425-expression_statement-57-57", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
426 [code="require (tx.origin == owner_txorigin25)", color=white, fillcolor="#BFE6D3", label="56_ call_expression--call_expression\n426_require (tx.origin == owner_txorigin25)-57-57", node_type=call_expression, shape=box, style="rounded, filled"];
427 [code=require, color=white, fillcolor="#BFE6D3", label="56_ require--identifier\n427_require-57-57", node_type=identifier, shape=box, style="rounded, filled"];
428 [code="tx.origin == owner_txorigin25", color=white, fillcolor="#BFE6D3", label="56_ call_argument--call_argument\n428_tx.origin == owner_txorigin25-57-57", node_type=call_argument, shape=box, style="rounded, filled"];
429 [code="tx.origin == owner_txorigin25", color=white, fillcolor="#BFE6D3", label="56_ binary_expression--binary_expression\n429_tx.origin == owner_txorigin25-57-57", node_type=binary_expression, shape=box, style="rounded, filled"];
430 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="56_ member_expression--member_expression\n430_tx.origin-57-57", node_type=member_expression, shape=box, style="rounded, filled"];
431 [code=tx, color=white, fillcolor="#BFE6D3", label="56_ tx--identifier\n431_tx-57-57", node_type=identifier, shape=box, style="rounded, filled"];
432 [code=origin, color=white, fillcolor="#BFE6D3", label="56_ origin--identifier\n432_origin-57-57", node_type=identifier, shape=box, style="rounded, filled"];
433 [code=owner_txorigin25, color=white, fillcolor="#BFE6D3", label="56_ owner_txorigin25--identifier\n433_owner_txorigin25-57-57", node_type=identifier, shape=box, style="rounded, filled"];
434 [code="receiver.transfer(amount);", color=white, fillcolor="#BFE6D3", label="57_ receiver.transfer(amount);\n434-expression_statement-58-58", method="sendto_txorigin25(address payable receiver,uint amount,address owner_txorigin25)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
435 [code="receiver.transfer(amount)", color=white, fillcolor="#BFE6D3", label="57_ call_expression--call_expression\n435_receiver.transfer(amount)-58-58", node_type=call_expression, shape=box, style="rounded, filled"];
436 [code="receiver.transfer", color=white, fillcolor="#BFE6D3", label="57_ member_expression--member_expression\n436_receiver.transfer-58-58", node_type=member_expression, shape=box, style="rounded, filled"];
437 [code=receiver, color=white, fillcolor="#BFE6D3", label="57_ receiver--identifier\n437_receiver-58-58", node_type=identifier, shape=box, style="rounded, filled"];
438 [code=transfer, color=white, fillcolor="#BFE6D3", label="57_ transfer--identifier\n438_transfer-58-58", node_type=identifier, shape=box, style="rounded, filled"];
439 [code=amount, color=white, fillcolor="#BFE6D3", label="57_ call_argument--call_argument\n439_amount-58-58", node_type=call_argument, shape=box, style="rounded, filled"];
440 [code=amount, color=white, fillcolor="#BFE6D3", label="57_ amount--identifier\n440_amount-58-58", node_type=identifier, shape=box, style="rounded, filled"];
441 [code="mapping (address => uint256) private _balances;", color=white, fillcolor="#BFE6D3", label="59_ mapping (address => uint256) private _balances;\n441-new_variable-60-60", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
442 [code="mapping (address => uint256)", color=white, fillcolor="#BFE6D3", label="59_ type_name--type_name\n442_mapping (address => uint256)-60-60", node_type=type_name, shape=box, style="rounded, filled"];
443 [code=address, color=white, fillcolor="#BFE6D3", label="59_ primitive_type--primitive_type\n443_address-60-60", node_type=primitive_type, shape=box, style="rounded, filled"];
444 [code=uint256, color=white, fillcolor="#BFE6D3", label="59_ type_name--type_name\n444_uint256-60-60", node_type=type_name, shape=box, style="rounded, filled"];
445 [code=uint256, color=white, fillcolor="#BFE6D3", label="59_ primitive_type--primitive_type\n445_uint256-60-60", node_type=primitive_type, shape=box, style="rounded, filled"];
446 [code=private, color=white, fillcolor="#BFE6D3", label="59_ visibility--visibility\n446_private-60-60", node_type=visibility, shape=box, style="rounded, filled"];
447 [code=_balances, color=white, fillcolor="#BFE6D3", label="59_ _balances--identifier\n447__balances-60-60", node_type=identifier, shape=box, style="rounded, filled"];
448 [code="function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="60_ function transferTo_txorigin19(address to, uint amount,address owner_txorigin19) public {\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}\n448-function_definition-61-64", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
449 [code=transferTo_txorigin19, color=white, fillcolor="#BFE6D3", label="60_ transferTo_txorigin19--identifier\n449_transferTo_txorigin19-61-61", node_type=identifier, shape=box, style="rounded, filled"];
450 [code="address to", color=white, fillcolor="#BFE6D3", label="60_ parameter--parameter\n450_address to-61-61", node_type=parameter, shape=box, style="rounded, filled"];
451 [code=address, color=white, fillcolor="#BFE6D3", label="60_ type_name--type_name\n451_address-61-61", node_type=type_name, shape=box, style="rounded, filled"];
452 [code=address, color=white, fillcolor="#BFE6D3", label="60_ primitive_type--primitive_type\n452_address-61-61", node_type=primitive_type, shape=box, style="rounded, filled"];
453 [code=to, color=white, fillcolor="#BFE6D3", label="60_ to--identifier\n453_to-61-61", node_type=identifier, shape=box, style="rounded, filled"];
454 [code="uint amount", color=white, fillcolor="#BFE6D3", label="60_ parameter--parameter\n454_uint amount-61-61", node_type=parameter, shape=box, style="rounded, filled"];
455 [code=uint, color=white, fillcolor="#BFE6D3", label="60_ type_name--type_name\n455_uint-61-61", node_type=type_name, shape=box, style="rounded, filled"];
456 [code=uint, color=white, fillcolor="#BFE6D3", label="60_ primitive_type--primitive_type\n456_uint-61-61", node_type=primitive_type, shape=box, style="rounded, filled"];
457 [code=amount, color=white, fillcolor="#BFE6D3", label="60_ amount--identifier\n457_amount-61-61", node_type=identifier, shape=box, style="rounded, filled"];
458 [code="address owner_txorigin19", color=white, fillcolor="#BFE6D3", label="60_ parameter--parameter\n458_address owner_txorigin19-61-61", node_type=parameter, shape=box, style="rounded, filled"];
459 [code=address, color=white, fillcolor="#BFE6D3", label="60_ type_name--type_name\n459_address-61-61", node_type=type_name, shape=box, style="rounded, filled"];
460 [code=address, color=white, fillcolor="#BFE6D3", label="60_ primitive_type--primitive_type\n460_address-61-61", node_type=primitive_type, shape=box, style="rounded, filled"];
461 [code=owner_txorigin19, color=white, fillcolor="#BFE6D3", label="60_ owner_txorigin19--identifier\n461_owner_txorigin19-61-61", node_type=identifier, shape=box, style="rounded, filled"];
462 [code=public, color=white, fillcolor="#BFE6D3", label="60_ visibility--visibility\n462_public-61-61", node_type=visibility, shape=box, style="rounded, filled"];
463 [code="{\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="60_ function_body--function_body\n463_{\n  require(tx.origin == owner_txorigin19);\n  to.call.value(amount);\n}-61-64", node_type=function_body, shape=box, style="rounded, filled"];
464 [code="require(tx.origin == owner_txorigin19);", color=white, fillcolor="#BFE6D3", label="61_ require(tx.origin == owner_txorigin19);\n464-expression_statement-62-62", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
465 [code="require(tx.origin == owner_txorigin19)", color=white, fillcolor="#BFE6D3", label="61_ call_expression--call_expression\n465_require(tx.origin == owner_txorigin19)-62-62", node_type=call_expression, shape=box, style="rounded, filled"];
466 [code=require, color=white, fillcolor="#BFE6D3", label="61_ require--identifier\n466_require-62-62", node_type=identifier, shape=box, style="rounded, filled"];
467 [code="tx.origin == owner_txorigin19", color=white, fillcolor="#BFE6D3", label="61_ call_argument--call_argument\n467_tx.origin == owner_txorigin19-62-62", node_type=call_argument, shape=box, style="rounded, filled"];
468 [code="tx.origin == owner_txorigin19", color=white, fillcolor="#BFE6D3", label="61_ binary_expression--binary_expression\n468_tx.origin == owner_txorigin19-62-62", node_type=binary_expression, shape=box, style="rounded, filled"];
469 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="61_ member_expression--member_expression\n469_tx.origin-62-62", node_type=member_expression, shape=box, style="rounded, filled"];
470 [code=tx, color=white, fillcolor="#BFE6D3", label="61_ tx--identifier\n470_tx-62-62", node_type=identifier, shape=box, style="rounded, filled"];
471 [code=origin, color=white, fillcolor="#BFE6D3", label="61_ origin--identifier\n471_origin-62-62", node_type=identifier, shape=box, style="rounded, filled"];
472 [code=owner_txorigin19, color=white, fillcolor="#BFE6D3", label="61_ owner_txorigin19--identifier\n472_owner_txorigin19-62-62", node_type=identifier, shape=box, style="rounded, filled"];
473 [code="to.call.value(amount);", color=white, fillcolor="#BFE6D3", label="62_ to.call.value(amount);\n473-expression_statement-63-63", method="transferTo_txorigin19(address to,uint amount,address owner_txorigin19)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
474 [code="to.call.value(amount)", color=white, fillcolor="#BFE6D3", label="62_ call_expression--call_expression\n474_to.call.value(amount)-63-63", node_type=call_expression, shape=box, style="rounded, filled"];
475 [code="to.call.value", color=white, fillcolor="#BFE6D3", label="62_ member_expression--member_expression\n475_to.call.value-63-63", node_type=member_expression, shape=box, style="rounded, filled"];
476 [code="to.call", color=white, fillcolor="#BFE6D3", label="62_ member_expression--member_expression\n476_to.call-63-63", node_type=member_expression, shape=box, style="rounded, filled"];
477 [code=to, color=white, fillcolor="#BFE6D3", label="62_ to--identifier\n477_to-63-63", node_type=identifier, shape=box, style="rounded, filled"];
478 [code=call, color=white, fillcolor="#BFE6D3", label="62_ call--identifier\n478_call-63-63", node_type=identifier, shape=box, style="rounded, filled"];
479 [code=value, color=white, fillcolor="#BFE6D3", label="62_ value--identifier\n479_value-63-63", node_type=identifier, shape=box, style="rounded, filled"];
480 [code=amount, color=white, fillcolor="#BFE6D3", label="62_ call_argument--call_argument\n480_amount-63-63", node_type=call_argument, shape=box, style="rounded, filled"];
481 [code=amount, color=white, fillcolor="#BFE6D3", label="62_ amount--identifier\n481_amount-63-63", node_type=identifier, shape=box, style="rounded, filled"];
482 [code="mapping (address => mapping (address => uint256)) private _allowed;", color=white, fillcolor="#BFE6D3", label="64_ mapping (address => mapping (address => uint256)) private _allowed;\n482-new_variable-65-65", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
483 [code="mapping (address => mapping (address => uint256))", color=white, fillcolor="#BFE6D3", label="64_ type_name--type_name\n483_mapping (address => mapping (address => uint256))-65-65", node_type=type_name, shape=box, style="rounded, filled"];
484 [code=address, color=white, fillcolor="#BFE6D3", label="64_ primitive_type--primitive_type\n484_address-65-65", node_type=primitive_type, shape=box, style="rounded, filled"];
485 [code="mapping (address => uint256)", color=white, fillcolor="#BFE6D3", label="64_ type_name--type_name\n485_mapping (address => uint256)-65-65", node_type=type_name, shape=box, style="rounded, filled"];
486 [code=address, color=white, fillcolor="#BFE6D3", label="64_ primitive_type--primitive_type\n486_address-65-65", node_type=primitive_type, shape=box, style="rounded, filled"];
487 [code=uint256, color=white, fillcolor="#BFE6D3", label="64_ type_name--type_name\n487_uint256-65-65", node_type=type_name, shape=box, style="rounded, filled"];
488 [code=uint256, color=white, fillcolor="#BFE6D3", label="64_ primitive_type--primitive_type\n488_uint256-65-65", node_type=primitive_type, shape=box, style="rounded, filled"];
489 [code=private, color=white, fillcolor="#BFE6D3", label="64_ visibility--visibility\n489_private-65-65", node_type=visibility, shape=box, style="rounded, filled"];
490 [code=_allowed, color=white, fillcolor="#BFE6D3", label="64_ _allowed--identifier\n490__allowed-65-65", node_type=identifier, shape=box, style="rounded, filled"];
491 [code="function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }", color=white, fillcolor="#BFE6D3", label="65_ function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n491-function_definition-66-68", method="totalSupply()", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
492 [code=totalSupply, color=white, fillcolor="#BFE6D3", label="65_ totalSupply--identifier\n492_totalSupply-66-66", node_type=identifier, shape=box, style="rounded, filled"];
493 [code=public, color=white, fillcolor="#BFE6D3", label="65_ visibility--visibility\n493_public-66-66", node_type=visibility, shape=box, style="rounded, filled"];
494 [code=view, color=white, fillcolor="#BFE6D3", label="65_ state_mutability--state_mutability\n494_view-66-66", node_type=state_mutability, shape=box, style="rounded, filled"];
495 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="65_ return_type_definition--return_type_definition\n495_returns (uint256)-66-66", node_type=return_type_definition, shape=box, style="rounded, filled"];
496 [code=uint256, color=white, fillcolor="#BFE6D3", label="65_ parameter--parameter\n496_uint256-66-66", node_type=parameter, shape=box, style="rounded, filled"];
497 [code=uint256, color=white, fillcolor="#BFE6D3", label="65_ type_name--type_name\n497_uint256-66-66", node_type=type_name, shape=box, style="rounded, filled"];
498 [code=uint256, color=white, fillcolor="#BFE6D3", label="65_ primitive_type--primitive_type\n498_uint256-66-66", node_type=primitive_type, shape=box, style="rounded, filled"];
499 [code="{\n        return _totalSupply;\n    }", color=white, fillcolor="#BFE6D3", label="65_ function_body--function_body\n499_{\n        return _totalSupply;\n    }-66-68", node_type=function_body, shape=box, style="rounded, filled"];
500 [code="return _totalSupply;", color=white, fillcolor="#BFE6D3", label="66_ return _totalSupply;\n500-return-67-67", method="totalSupply()", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
501 [code=_totalSupply, color=white, fillcolor="#BFE6D3", label="66_ _totalSupply--identifier\n501__totalSupply-67-67", node_type=identifier, shape=box, style="rounded, filled"];
502 [code="function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }", color=white, fillcolor="#BFE6D3", label="68_ function bug_txorigin32(  address owner_txorigin32) public{\n        require(tx.origin == owner_txorigin32);\n    }\n502-function_definition-69-71", method="bug_txorigin32(address owner_txorigin32)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
503 [code=bug_txorigin32, color=white, fillcolor="#BFE6D3", label="68_ bug_txorigin32--identifier\n503_bug_txorigin32-69-69", node_type=identifier, shape=box, style="rounded, filled"];
504 [code="address owner_txorigin32", color=white, fillcolor="#BFE6D3", label="68_ parameter--parameter\n504_address owner_txorigin32-69-69", node_type=parameter, shape=box, style="rounded, filled"];
505 [code=address, color=white, fillcolor="#BFE6D3", label="68_ type_name--type_name\n505_address-69-69", node_type=type_name, shape=box, style="rounded, filled"];
506 [code=address, color=white, fillcolor="#BFE6D3", label="68_ primitive_type--primitive_type\n506_address-69-69", node_type=primitive_type, shape=box, style="rounded, filled"];
507 [code=owner_txorigin32, color=white, fillcolor="#BFE6D3", label="68_ owner_txorigin32--identifier\n507_owner_txorigin32-69-69", node_type=identifier, shape=box, style="rounded, filled"];
508 [code=public, color=white, fillcolor="#BFE6D3", label="68_ visibility--visibility\n508_public-69-69", node_type=visibility, shape=box, style="rounded, filled"];
509 [code="{\n        require(tx.origin == owner_txorigin32);\n    }", color=white, fillcolor="#BFE6D3", label="68_ function_body--function_body\n509_{\n        require(tx.origin == owner_txorigin32);\n    }-69-71", node_type=function_body, shape=box, style="rounded, filled"];
510 [code="require(tx.origin == owner_txorigin32);", color=white, fillcolor="#BFE6D3", label="69_ require(tx.origin == owner_txorigin32);\n510-expression_statement-70-70", method="bug_txorigin32(address owner_txorigin32)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
511 [code="require(tx.origin == owner_txorigin32)", color=white, fillcolor="#BFE6D3", label="69_ call_expression--call_expression\n511_require(tx.origin == owner_txorigin32)-70-70", node_type=call_expression, shape=box, style="rounded, filled"];
512 [code=require, color=white, fillcolor="#BFE6D3", label="69_ require--identifier\n512_require-70-70", node_type=identifier, shape=box, style="rounded, filled"];
513 [code="tx.origin == owner_txorigin32", color=white, fillcolor="#BFE6D3", label="69_ call_argument--call_argument\n513_tx.origin == owner_txorigin32-70-70", node_type=call_argument, shape=box, style="rounded, filled"];
514 [code="tx.origin == owner_txorigin32", color=white, fillcolor="#BFE6D3", label="69_ binary_expression--binary_expression\n514_tx.origin == owner_txorigin32-70-70", node_type=binary_expression, shape=box, style="rounded, filled"];
515 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="69_ member_expression--member_expression\n515_tx.origin-70-70", node_type=member_expression, shape=box, style="rounded, filled"];
516 [code=tx, color=white, fillcolor="#BFE6D3", label="69_ tx--identifier\n516_tx-70-70", node_type=identifier, shape=box, style="rounded, filled"];
517 [code=origin, color=white, fillcolor="#BFE6D3", label="69_ origin--identifier\n517_origin-70-70", node_type=identifier, shape=box, style="rounded, filled"];
518 [code=owner_txorigin32, color=white, fillcolor="#BFE6D3", label="69_ owner_txorigin32--identifier\n518_owner_txorigin32-70-70", node_type=identifier, shape=box, style="rounded, filled"];
519 [code="function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }", color=white, fillcolor="#BFE6D3", label="71_ function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\n519-function_definition-72-74", method="balanceOf(address owner)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
520 [code=balanceOf, color=white, fillcolor="#BFE6D3", label="71_ balanceOf--identifier\n520_balanceOf-72-72", node_type=identifier, shape=box, style="rounded, filled"];
521 [code="address owner", color=white, fillcolor="#BFE6D3", label="71_ parameter--parameter\n521_address owner-72-72", node_type=parameter, shape=box, style="rounded, filled"];
522 [code=address, color=white, fillcolor="#BFE6D3", label="71_ type_name--type_name\n522_address-72-72", node_type=type_name, shape=box, style="rounded, filled"];
523 [code=address, color=white, fillcolor="#BFE6D3", label="71_ primitive_type--primitive_type\n523_address-72-72", node_type=primitive_type, shape=box, style="rounded, filled"];
524 [code=owner, color=white, fillcolor="#BFE6D3", label="71_ owner--identifier\n524_owner-72-72", node_type=identifier, shape=box, style="rounded, filled"];
525 [code=public, color=white, fillcolor="#BFE6D3", label="71_ visibility--visibility\n525_public-72-72", node_type=visibility, shape=box, style="rounded, filled"];
526 [code=view, color=white, fillcolor="#BFE6D3", label="71_ state_mutability--state_mutability\n526_view-72-72", node_type=state_mutability, shape=box, style="rounded, filled"];
527 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="71_ return_type_definition--return_type_definition\n527_returns (uint256)-72-72", node_type=return_type_definition, shape=box, style="rounded, filled"];
528 [code=uint256, color=white, fillcolor="#BFE6D3", label="71_ parameter--parameter\n528_uint256-72-72", node_type=parameter, shape=box, style="rounded, filled"];
529 [code=uint256, color=white, fillcolor="#BFE6D3", label="71_ type_name--type_name\n529_uint256-72-72", node_type=type_name, shape=box, style="rounded, filled"];
530 [code=uint256, color=white, fillcolor="#BFE6D3", label="71_ primitive_type--primitive_type\n530_uint256-72-72", node_type=primitive_type, shape=box, style="rounded, filled"];
531 [code="{\n        return _balances[owner];\n    }", color=white, fillcolor="#BFE6D3", label="71_ function_body--function_body\n531_{\n        return _balances[owner];\n    }-72-74", node_type=function_body, shape=box, style="rounded, filled"];
532 [code="return _balances[owner];", color=white, fillcolor="#BFE6D3", label="72_ return _balances[owner];\n532-return-73-73", method="balanceOf(address owner)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
533 [code="_balances[owner]", color=white, fillcolor="#BFE6D3", label="72_ array_access--array_access\n533__balances[owner]-73-73", node_type=array_access, shape=box, style="rounded, filled"];
534 [code=_balances, color=white, fillcolor="#BFE6D3", label="72_ _balances--identifier\n534__balances-73-73", node_type=identifier, shape=box, style="rounded, filled"];
535 [code=owner, color=white, fillcolor="#BFE6D3", label="72_ owner--identifier\n535_owner-73-73", node_type=identifier, shape=box, style="rounded, filled"];
536 [code="function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }", color=white, fillcolor="#BFE6D3", label="74_ function withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38) public {\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }\n536-function_definition-75-78", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
537 [code=withdrawAll_txorigin38, color=white, fillcolor="#BFE6D3", label="74_ withdrawAll_txorigin38--identifier\n537_withdrawAll_txorigin38-75-75", node_type=identifier, shape=box, style="rounded, filled"];
538 [code="address payable _recipient", color=white, fillcolor="#BFE6D3", label="74_ parameter--parameter\n538_address payable _recipient-75-75", node_type=parameter, shape=box, style="rounded, filled"];
539 [code="address payable", color=white, fillcolor="#BFE6D3", label="74_ type_name--type_name\n539_address payable-75-75", node_type=type_name, shape=box, style="rounded, filled"];
540 [code="address payable", color=white, fillcolor="#BFE6D3", label="74_ primitive_type--primitive_type\n540_address payable-75-75", node_type=primitive_type, shape=box, style="rounded, filled"];
541 [code=_recipient, color=white, fillcolor="#BFE6D3", label="74_ _recipient--identifier\n541__recipient-75-75", node_type=identifier, shape=box, style="rounded, filled"];
542 [code="address owner_txorigin38", color=white, fillcolor="#BFE6D3", label="74_ parameter--parameter\n542_address owner_txorigin38-75-75", node_type=parameter, shape=box, style="rounded, filled"];
543 [code=address, color=white, fillcolor="#BFE6D3", label="74_ type_name--type_name\n543_address-75-75", node_type=type_name, shape=box, style="rounded, filled"];
544 [code=address, color=white, fillcolor="#BFE6D3", label="74_ primitive_type--primitive_type\n544_address-75-75", node_type=primitive_type, shape=box, style="rounded, filled"];
545 [code=owner_txorigin38, color=white, fillcolor="#BFE6D3", label="74_ owner_txorigin38--identifier\n545_owner_txorigin38-75-75", node_type=identifier, shape=box, style="rounded, filled"];
546 [code=public, color=white, fillcolor="#BFE6D3", label="74_ visibility--visibility\n546_public-75-75", node_type=visibility, shape=box, style="rounded, filled"];
547 [code="{\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }", color=white, fillcolor="#BFE6D3", label="74_ function_body--function_body\n547_{\n        require(tx.origin == owner_txorigin38);\n        _recipient.transfer(address(this).balance);\n    }-75-78", node_type=function_body, shape=box, style="rounded, filled"];
548 [code="require(tx.origin == owner_txorigin38);", color=white, fillcolor="#BFE6D3", label="75_ require(tx.origin == owner_txorigin38);\n548-expression_statement-76-76", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
549 [code="require(tx.origin == owner_txorigin38)", color=white, fillcolor="#BFE6D3", label="75_ call_expression--call_expression\n549_require(tx.origin == owner_txorigin38)-76-76", node_type=call_expression, shape=box, style="rounded, filled"];
550 [code=require, color=white, fillcolor="#BFE6D3", label="75_ require--identifier\n550_require-76-76", node_type=identifier, shape=box, style="rounded, filled"];
551 [code="tx.origin == owner_txorigin38", color=white, fillcolor="#BFE6D3", label="75_ call_argument--call_argument\n551_tx.origin == owner_txorigin38-76-76", node_type=call_argument, shape=box, style="rounded, filled"];
552 [code="tx.origin == owner_txorigin38", color=white, fillcolor="#BFE6D3", label="75_ binary_expression--binary_expression\n552_tx.origin == owner_txorigin38-76-76", node_type=binary_expression, shape=box, style="rounded, filled"];
553 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="75_ member_expression--member_expression\n553_tx.origin-76-76", node_type=member_expression, shape=box, style="rounded, filled"];
554 [code=tx, color=white, fillcolor="#BFE6D3", label="75_ tx--identifier\n554_tx-76-76", node_type=identifier, shape=box, style="rounded, filled"];
555 [code=origin, color=white, fillcolor="#BFE6D3", label="75_ origin--identifier\n555_origin-76-76", node_type=identifier, shape=box, style="rounded, filled"];
556 [code=owner_txorigin38, color=white, fillcolor="#BFE6D3", label="75_ owner_txorigin38--identifier\n556_owner_txorigin38-76-76", node_type=identifier, shape=box, style="rounded, filled"];
557 [code="_recipient.transfer(address(this).balance);", color=white, fillcolor="#BFE6D3", label="76_ _recipient.transfer(address(this).balance);\n557-expression_statement-77-77", method="withdrawAll_txorigin38(address payable _recipient,address owner_txorigin38)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
558 [code="_recipient.transfer(address(this).balance)", color=white, fillcolor="#BFE6D3", label="76_ call_expression--call_expression\n558__recipient.transfer(address(this).balance)-77-77", node_type=call_expression, shape=box, style="rounded, filled"];
559 [code="_recipient.transfer", color=white, fillcolor="#BFE6D3", label="76_ member_expression--member_expression\n559__recipient.transfer-77-77", node_type=member_expression, shape=box, style="rounded, filled"];
560 [code=_recipient, color=white, fillcolor="#BFE6D3", label="76_ _recipient--identifier\n560__recipient-77-77", node_type=identifier, shape=box, style="rounded, filled"];
561 [code=transfer, color=white, fillcolor="#BFE6D3", label="76_ transfer--identifier\n561_transfer-77-77", node_type=identifier, shape=box, style="rounded, filled"];
562 [code="address(this).balance", color=white, fillcolor="#BFE6D3", label="76_ call_argument--call_argument\n562_address(this).balance-77-77", node_type=call_argument, shape=box, style="rounded, filled"];
563 [code="address(this).balance", color=white, fillcolor="#BFE6D3", label="76_ member_expression--member_expression\n563_address(this).balance-77-77", node_type=member_expression, shape=box, style="rounded, filled"];
564 [code="address(this)", color=white, fillcolor="#BFE6D3", label="76_ type_cast_expression--type_cast_expression\n564_address(this)-77-77", node_type=type_cast_expression, shape=box, style="rounded, filled"];
565 [code=address, color=white, fillcolor="#BFE6D3", label="76_ primitive_type--primitive_type\n565_address-77-77", node_type=primitive_type, shape=box, style="rounded, filled"];
566 [code=this, color=white, fillcolor="#BFE6D3", label="76_ this--identifier\n566_this-77-77", node_type=identifier, shape=box, style="rounded, filled"];
567 [code=balance, color=white, fillcolor="#BFE6D3", label="76_ balance--identifier\n567_balance-77-77", node_type=identifier, shape=box, style="rounded, filled"];
568 [code="function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }", color=white, fillcolor="#BFE6D3", label="78_ function transfer(address to, uint256 value) public returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n568-function_definition-79-82", method="transfer(address to,uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
569 [code=transfer, color=white, fillcolor="#BFE6D3", label="78_ transfer--identifier\n569_transfer-79-79", node_type=identifier, shape=box, style="rounded, filled"];
570 [code="address to", color=white, fillcolor="#BFE6D3", label="78_ parameter--parameter\n570_address to-79-79", node_type=parameter, shape=box, style="rounded, filled"];
571 [code=address, color=white, fillcolor="#BFE6D3", label="78_ type_name--type_name\n571_address-79-79", node_type=type_name, shape=box, style="rounded, filled"];
572 [code=address, color=white, fillcolor="#BFE6D3", label="78_ primitive_type--primitive_type\n572_address-79-79", node_type=primitive_type, shape=box, style="rounded, filled"];
573 [code=to, color=white, fillcolor="#BFE6D3", label="78_ to--identifier\n573_to-79-79", node_type=identifier, shape=box, style="rounded, filled"];
574 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="78_ parameter--parameter\n574_uint256 value-79-79", node_type=parameter, shape=box, style="rounded, filled"];
575 [code=uint256, color=white, fillcolor="#BFE6D3", label="78_ type_name--type_name\n575_uint256-79-79", node_type=type_name, shape=box, style="rounded, filled"];
576 [code=uint256, color=white, fillcolor="#BFE6D3", label="78_ primitive_type--primitive_type\n576_uint256-79-79", node_type=primitive_type, shape=box, style="rounded, filled"];
577 [code=value, color=white, fillcolor="#BFE6D3", label="78_ value--identifier\n577_value-79-79", node_type=identifier, shape=box, style="rounded, filled"];
578 [code=public, color=white, fillcolor="#BFE6D3", label="78_ visibility--visibility\n578_public-79-79", node_type=visibility, shape=box, style="rounded, filled"];
579 [code="returns (bool)", color=white, fillcolor="#BFE6D3", label="78_ return_type_definition--return_type_definition\n579_returns (bool)-79-79", node_type=return_type_definition, shape=box, style="rounded, filled"];
580 [code=bool, color=white, fillcolor="#BFE6D3", label="78_ parameter--parameter\n580_bool-79-79", node_type=parameter, shape=box, style="rounded, filled"];
581 [code=bool, color=white, fillcolor="#BFE6D3", label="78_ type_name--type_name\n581_bool-79-79", node_type=type_name, shape=box, style="rounded, filled"];
582 [code=bool, color=white, fillcolor="#BFE6D3", label="78_ primitive_type--primitive_type\n582_bool-79-79", node_type=primitive_type, shape=box, style="rounded, filled"];
583 [code="{\n        _transfer(msg.sender, to, value);\n        return true;\n    }", color=white, fillcolor="#BFE6D3", label="78_ function_body--function_body\n583_{\n        _transfer(msg.sender, to, value);\n        return true;\n    }-79-82", node_type=function_body, shape=box, style="rounded, filled"];
584 [code="_transfer(msg.sender, to, value);", color=white, fillcolor="#BFE6D3", label="79_ _transfer(msg.sender, to, value);\n584-expression_statement-80-80", method="transfer(address to,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
585 [code="_transfer(msg.sender, to, value)", color=white, fillcolor="#BFE6D3", label="79_ call_expression--call_expression\n585__transfer(msg.sender, to, value)-80-80", node_type=call_expression, shape=box, style="rounded, filled"];
586 [code=_transfer, color=white, fillcolor="#BFE6D3", label="79_ _transfer--identifier\n586__transfer-80-80", node_type=identifier, shape=box, style="rounded, filled"];
587 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="79_ call_argument--call_argument\n587_msg.sender-80-80", node_type=call_argument, shape=box, style="rounded, filled"];
588 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="79_ member_expression--member_expression\n588_msg.sender-80-80", node_type=member_expression, shape=box, style="rounded, filled"];
589 [code=msg, color=white, fillcolor="#BFE6D3", label="79_ msg--identifier\n589_msg-80-80", node_type=identifier, shape=box, style="rounded, filled"];
590 [code=sender, color=white, fillcolor="#BFE6D3", label="79_ sender--identifier\n590_sender-80-80", node_type=identifier, shape=box, style="rounded, filled"];
591 [code=to, color=white, fillcolor="#BFE6D3", label="79_ call_argument--call_argument\n591_to-80-80", node_type=call_argument, shape=box, style="rounded, filled"];
592 [code=to, color=white, fillcolor="#BFE6D3", label="79_ to--identifier\n592_to-80-80", node_type=identifier, shape=box, style="rounded, filled"];
593 [code=value, color=white, fillcolor="#BFE6D3", label="79_ call_argument--call_argument\n593_value-80-80", node_type=call_argument, shape=box, style="rounded, filled"];
594 [code=value, color=white, fillcolor="#BFE6D3", label="79_ value--identifier\n594_value-80-80", node_type=identifier, shape=box, style="rounded, filled"];
595 [code="return true;", color=white, fillcolor="#BFE6D3", label="80_ return true;\n595-return-81-81", method="transfer(address to,uint256 value)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
596 [code=true, color=white, fillcolor="#BFE6D3", label="80_ boolean_literal--boolean_literal\n596_true-81-81", node_type=boolean_literal, shape=box, style="rounded, filled"];
597 [code=true, color=white, fillcolor="#BFE6D3", label="80_ true--true\n597_true-81-81", node_type=true, shape=box, style="rounded, filled"];
598 [code="function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }", color=white, fillcolor="#BFE6D3", label="82_ function bug_txorigin4(address owner_txorigin4) public{\n        require(tx.origin == owner_txorigin4);\n    }\n598-function_definition-83-85", method="bug_txorigin4(address owner_txorigin4)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
599 [code=bug_txorigin4, color=white, fillcolor="#BFE6D3", label="82_ bug_txorigin4--identifier\n599_bug_txorigin4-83-83", node_type=identifier, shape=box, style="rounded, filled"];
600 [code="address owner_txorigin4", color=white, fillcolor="#BFE6D3", label="82_ parameter--parameter\n600_address owner_txorigin4-83-83", node_type=parameter, shape=box, style="rounded, filled"];
601 [code=address, color=white, fillcolor="#BFE6D3", label="82_ type_name--type_name\n601_address-83-83", node_type=type_name, shape=box, style="rounded, filled"];
602 [code=address, color=white, fillcolor="#BFE6D3", label="82_ primitive_type--primitive_type\n602_address-83-83", node_type=primitive_type, shape=box, style="rounded, filled"];
603 [code=owner_txorigin4, color=white, fillcolor="#BFE6D3", label="82_ owner_txorigin4--identifier\n603_owner_txorigin4-83-83", node_type=identifier, shape=box, style="rounded, filled"];
604 [code=public, color=white, fillcolor="#BFE6D3", label="82_ visibility--visibility\n604_public-83-83", node_type=visibility, shape=box, style="rounded, filled"];
605 [code="{\n        require(tx.origin == owner_txorigin4);\n    }", color=white, fillcolor="#BFE6D3", label="82_ function_body--function_body\n605_{\n        require(tx.origin == owner_txorigin4);\n    }-83-85", node_type=function_body, shape=box, style="rounded, filled"];
606 [code="require(tx.origin == owner_txorigin4);", color=white, fillcolor="#BFE6D3", label="83_ require(tx.origin == owner_txorigin4);\n606-expression_statement-84-84", method="bug_txorigin4(address owner_txorigin4)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
607 [code="require(tx.origin == owner_txorigin4)", color=white, fillcolor="#BFE6D3", label="83_ call_expression--call_expression\n607_require(tx.origin == owner_txorigin4)-84-84", node_type=call_expression, shape=box, style="rounded, filled"];
608 [code=require, color=white, fillcolor="#BFE6D3", label="83_ require--identifier\n608_require-84-84", node_type=identifier, shape=box, style="rounded, filled"];
609 [code="tx.origin == owner_txorigin4", color=white, fillcolor="#BFE6D3", label="83_ call_argument--call_argument\n609_tx.origin == owner_txorigin4-84-84", node_type=call_argument, shape=box, style="rounded, filled"];
610 [code="tx.origin == owner_txorigin4", color=white, fillcolor="#BFE6D3", label="83_ binary_expression--binary_expression\n610_tx.origin == owner_txorigin4-84-84", node_type=binary_expression, shape=box, style="rounded, filled"];
611 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="83_ member_expression--member_expression\n611_tx.origin-84-84", node_type=member_expression, shape=box, style="rounded, filled"];
612 [code=tx, color=white, fillcolor="#BFE6D3", label="83_ tx--identifier\n612_tx-84-84", node_type=identifier, shape=box, style="rounded, filled"];
613 [code=origin, color=white, fillcolor="#BFE6D3", label="83_ origin--identifier\n613_origin-84-84", node_type=identifier, shape=box, style="rounded, filled"];
614 [code=owner_txorigin4, color=white, fillcolor="#BFE6D3", label="83_ owner_txorigin4--identifier\n614_owner_txorigin4-84-84", node_type=identifier, shape=box, style="rounded, filled"];
615 [code="function transferFrom(address from, address to, uint256 value) public returns (bool) {\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }", color=white, fillcolor="#BFE6D3", label="85_ function transferFrom(address from, address to, uint256 value) public returns (bool) {\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }\n615-function_definition-86-90", method="transferFrom(address from,address to,uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
616 [code=transferFrom, color=white, fillcolor="#BFE6D3", label="85_ transferFrom--identifier\n616_transferFrom-86-86", node_type=identifier, shape=box, style="rounded, filled"];
617 [code="address from", color=white, fillcolor="#BFE6D3", label="85_ parameter--parameter\n617_address from-86-86", node_type=parameter, shape=box, style="rounded, filled"];
618 [code=address, color=white, fillcolor="#BFE6D3", label="85_ type_name--type_name\n618_address-86-86", node_type=type_name, shape=box, style="rounded, filled"];
619 [code=address, color=white, fillcolor="#BFE6D3", label="85_ primitive_type--primitive_type\n619_address-86-86", node_type=primitive_type, shape=box, style="rounded, filled"];
620 [code=from, color=white, fillcolor="#BFE6D3", label="85_ from--identifier\n620_from-86-86", node_type=identifier, shape=box, style="rounded, filled"];
621 [code="address to", color=white, fillcolor="#BFE6D3", label="85_ parameter--parameter\n621_address to-86-86", node_type=parameter, shape=box, style="rounded, filled"];
622 [code=address, color=white, fillcolor="#BFE6D3", label="85_ type_name--type_name\n622_address-86-86", node_type=type_name, shape=box, style="rounded, filled"];
623 [code=address, color=white, fillcolor="#BFE6D3", label="85_ primitive_type--primitive_type\n623_address-86-86", node_type=primitive_type, shape=box, style="rounded, filled"];
624 [code=to, color=white, fillcolor="#BFE6D3", label="85_ to--identifier\n624_to-86-86", node_type=identifier, shape=box, style="rounded, filled"];
625 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="85_ parameter--parameter\n625_uint256 value-86-86", node_type=parameter, shape=box, style="rounded, filled"];
626 [code=uint256, color=white, fillcolor="#BFE6D3", label="85_ type_name--type_name\n626_uint256-86-86", node_type=type_name, shape=box, style="rounded, filled"];
627 [code=uint256, color=white, fillcolor="#BFE6D3", label="85_ primitive_type--primitive_type\n627_uint256-86-86", node_type=primitive_type, shape=box, style="rounded, filled"];
628 [code=value, color=white, fillcolor="#BFE6D3", label="85_ value--identifier\n628_value-86-86", node_type=identifier, shape=box, style="rounded, filled"];
629 [code=public, color=white, fillcolor="#BFE6D3", label="85_ visibility--visibility\n629_public-86-86", node_type=visibility, shape=box, style="rounded, filled"];
630 [code="returns (bool)", color=white, fillcolor="#BFE6D3", label="85_ return_type_definition--return_type_definition\n630_returns (bool)-86-86", node_type=return_type_definition, shape=box, style="rounded, filled"];
631 [code=bool, color=white, fillcolor="#BFE6D3", label="85_ parameter--parameter\n631_bool-86-86", node_type=parameter, shape=box, style="rounded, filled"];
632 [code=bool, color=white, fillcolor="#BFE6D3", label="85_ type_name--type_name\n632_bool-86-86", node_type=type_name, shape=box, style="rounded, filled"];
633 [code=bool, color=white, fillcolor="#BFE6D3", label="85_ primitive_type--primitive_type\n633_bool-86-86", node_type=primitive_type, shape=box, style="rounded, filled"];
634 [code="{\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }", color=white, fillcolor="#BFE6D3", label="85_ function_body--function_body\n634_{\n         _transfer(from, to, value);\n         _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n         return true;\n    }-86-90", node_type=function_body, shape=box, style="rounded, filled"];
635 [code="_transfer(from, to, value);", color=white, fillcolor="#BFE6D3", label="86_ _transfer(from, to, value);\n635-expression_statement-87-87", method="transferFrom(address from,address to,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
636 [code="_transfer(from, to, value)", color=white, fillcolor="#BFE6D3", label="86_ call_expression--call_expression\n636__transfer(from, to, value)-87-87", node_type=call_expression, shape=box, style="rounded, filled"];
637 [code=_transfer, color=white, fillcolor="#BFE6D3", label="86_ _transfer--identifier\n637__transfer-87-87", node_type=identifier, shape=box, style="rounded, filled"];
638 [code=from, color=white, fillcolor="#BFE6D3", label="86_ call_argument--call_argument\n638_from-87-87", node_type=call_argument, shape=box, style="rounded, filled"];
639 [code=from, color=white, fillcolor="#BFE6D3", label="86_ from--identifier\n639_from-87-87", node_type=identifier, shape=box, style="rounded, filled"];
640 [code=to, color=white, fillcolor="#BFE6D3", label="86_ call_argument--call_argument\n640_to-87-87", node_type=call_argument, shape=box, style="rounded, filled"];
641 [code=to, color=white, fillcolor="#BFE6D3", label="86_ to--identifier\n641_to-87-87", node_type=identifier, shape=box, style="rounded, filled"];
642 [code=value, color=white, fillcolor="#BFE6D3", label="86_ call_argument--call_argument\n642_value-87-87", node_type=call_argument, shape=box, style="rounded, filled"];
643 [code=value, color=white, fillcolor="#BFE6D3", label="86_ value--identifier\n643_value-87-87", node_type=identifier, shape=box, style="rounded, filled"];
644 [code="_approve(from, msg.sender, _allowed[from][msg.sender].sub(value));", color=white, fillcolor="#BFE6D3", label="87_ _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\n644-expression_statement-88-88", method="transferFrom(address from,address to,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
645 [code="_approve(from, msg.sender, _allowed[from][msg.sender].sub(value))", color=white, fillcolor="#BFE6D3", label="87_ call_expression--call_expression\n645__approve(from, msg.sender, _allowed[from][msg.sender].sub(value))-88-88", node_type=call_expression, shape=box, style="rounded, filled"];
646 [code=_approve, color=white, fillcolor="#BFE6D3", label="87_ _approve--identifier\n646__approve-88-88", node_type=identifier, shape=box, style="rounded, filled"];
647 [code=from, color=white, fillcolor="#BFE6D3", label="87_ call_argument--call_argument\n647_from-88-88", node_type=call_argument, shape=box, style="rounded, filled"];
648 [code=from, color=white, fillcolor="#BFE6D3", label="87_ from--identifier\n648_from-88-88", node_type=identifier, shape=box, style="rounded, filled"];
649 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="87_ call_argument--call_argument\n649_msg.sender-88-88", node_type=call_argument, shape=box, style="rounded, filled"];
650 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="87_ member_expression--member_expression\n650_msg.sender-88-88", node_type=member_expression, shape=box, style="rounded, filled"];
651 [code=msg, color=white, fillcolor="#BFE6D3", label="87_ msg--identifier\n651_msg-88-88", node_type=identifier, shape=box, style="rounded, filled"];
652 [code=sender, color=white, fillcolor="#BFE6D3", label="87_ sender--identifier\n652_sender-88-88", node_type=identifier, shape=box, style="rounded, filled"];
653 [code="_allowed[from][msg.sender].sub(value)", color=white, fillcolor="#BFE6D3", label="87_ call_argument--call_argument\n653__allowed[from][msg.sender].sub(value)-88-88", node_type=call_argument, shape=box, style="rounded, filled"];
654 [code="_allowed[from][msg.sender].sub(value)", color=white, fillcolor="#BFE6D3", label="87_ call_expression--call_expression\n654__allowed[from][msg.sender].sub(value)-88-88", node_type=call_expression, shape=box, style="rounded, filled"];
655 [code="_allowed[from][msg.sender].sub", color=white, fillcolor="#BFE6D3", label="87_ member_expression--member_expression\n655__allowed[from][msg.sender].sub-88-88", node_type=member_expression, shape=box, style="rounded, filled"];
656 [code="_allowed[from][msg.sender]", color=white, fillcolor="#BFE6D3", label="87_ array_access--array_access\n656__allowed[from][msg.sender]-88-88", node_type=array_access, shape=box, style="rounded, filled"];
657 [code="_allowed[from]", color=white, fillcolor="#BFE6D3", label="87_ array_access--array_access\n657__allowed[from]-88-88", node_type=array_access, shape=box, style="rounded, filled"];
658 [code=_allowed, color=white, fillcolor="#BFE6D3", label="87_ _allowed--identifier\n658__allowed-88-88", node_type=identifier, shape=box, style="rounded, filled"];
659 [code=from, color=white, fillcolor="#BFE6D3", label="87_ from--identifier\n659_from-88-88", node_type=identifier, shape=box, style="rounded, filled"];
660 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="87_ member_expression--member_expression\n660_msg.sender-88-88", node_type=member_expression, shape=box, style="rounded, filled"];
661 [code=msg, color=white, fillcolor="#BFE6D3", label="87_ msg--identifier\n661_msg-88-88", node_type=identifier, shape=box, style="rounded, filled"];
662 [code=sender, color=white, fillcolor="#BFE6D3", label="87_ sender--identifier\n662_sender-88-88", node_type=identifier, shape=box, style="rounded, filled"];
663 [code=sub, color=white, fillcolor="#BFE6D3", label="87_ sub--identifier\n663_sub-88-88", node_type=identifier, shape=box, style="rounded, filled"];
664 [code=value, color=white, fillcolor="#BFE6D3", label="87_ call_argument--call_argument\n664_value-88-88", node_type=call_argument, shape=box, style="rounded, filled"];
665 [code=value, color=white, fillcolor="#BFE6D3", label="87_ value--identifier\n665_value-88-88", node_type=identifier, shape=box, style="rounded, filled"];
666 [code="return true;", color=white, fillcolor="#BFE6D3", label="88_ return true;\n666-return-89-89", method="transferFrom(address from,address to,uint256 value)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
667 [code=true, color=white, fillcolor="#BFE6D3", label="88_ boolean_literal--boolean_literal\n667_true-89-89", node_type=boolean_literal, shape=box, style="rounded, filled"];
668 [code=true, color=white, fillcolor="#BFE6D3", label="88_ true--true\n668_true-89-89", node_type=true, shape=box, style="rounded, filled"];
669 [code="function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="90_ function transferTo_txorigin7(address to, uint amount,address owner_txorigin7) public {\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}\n669-function_definition-91-94", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
670 [code=transferTo_txorigin7, color=white, fillcolor="#BFE6D3", label="90_ transferTo_txorigin7--identifier\n670_transferTo_txorigin7-91-91", node_type=identifier, shape=box, style="rounded, filled"];
671 [code="address to", color=white, fillcolor="#BFE6D3", label="90_ parameter--parameter\n671_address to-91-91", node_type=parameter, shape=box, style="rounded, filled"];
672 [code=address, color=white, fillcolor="#BFE6D3", label="90_ type_name--type_name\n672_address-91-91", node_type=type_name, shape=box, style="rounded, filled"];
673 [code=address, color=white, fillcolor="#BFE6D3", label="90_ primitive_type--primitive_type\n673_address-91-91", node_type=primitive_type, shape=box, style="rounded, filled"];
674 [code=to, color=white, fillcolor="#BFE6D3", label="90_ to--identifier\n674_to-91-91", node_type=identifier, shape=box, style="rounded, filled"];
675 [code="uint amount", color=white, fillcolor="#BFE6D3", label="90_ parameter--parameter\n675_uint amount-91-91", node_type=parameter, shape=box, style="rounded, filled"];
676 [code=uint, color=white, fillcolor="#BFE6D3", label="90_ type_name--type_name\n676_uint-91-91", node_type=type_name, shape=box, style="rounded, filled"];
677 [code=uint, color=white, fillcolor="#BFE6D3", label="90_ primitive_type--primitive_type\n677_uint-91-91", node_type=primitive_type, shape=box, style="rounded, filled"];
678 [code=amount, color=white, fillcolor="#BFE6D3", label="90_ amount--identifier\n678_amount-91-91", node_type=identifier, shape=box, style="rounded, filled"];
679 [code="address owner_txorigin7", color=white, fillcolor="#BFE6D3", label="90_ parameter--parameter\n679_address owner_txorigin7-91-91", node_type=parameter, shape=box, style="rounded, filled"];
680 [code=address, color=white, fillcolor="#BFE6D3", label="90_ type_name--type_name\n680_address-91-91", node_type=type_name, shape=box, style="rounded, filled"];
681 [code=address, color=white, fillcolor="#BFE6D3", label="90_ primitive_type--primitive_type\n681_address-91-91", node_type=primitive_type, shape=box, style="rounded, filled"];
682 [code=owner_txorigin7, color=white, fillcolor="#BFE6D3", label="90_ owner_txorigin7--identifier\n682_owner_txorigin7-91-91", node_type=identifier, shape=box, style="rounded, filled"];
683 [code=public, color=white, fillcolor="#BFE6D3", label="90_ visibility--visibility\n683_public-91-91", node_type=visibility, shape=box, style="rounded, filled"];
684 [code="{\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="90_ function_body--function_body\n684_{\n  require(tx.origin == owner_txorigin7);\n  to.call.value(amount);\n}-91-94", node_type=function_body, shape=box, style="rounded, filled"];
685 [code="require(tx.origin == owner_txorigin7);", color=white, fillcolor="#BFE6D3", label="91_ require(tx.origin == owner_txorigin7);\n685-expression_statement-92-92", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
686 [code="require(tx.origin == owner_txorigin7)", color=white, fillcolor="#BFE6D3", label="91_ call_expression--call_expression\n686_require(tx.origin == owner_txorigin7)-92-92", node_type=call_expression, shape=box, style="rounded, filled"];
687 [code=require, color=white, fillcolor="#BFE6D3", label="91_ require--identifier\n687_require-92-92", node_type=identifier, shape=box, style="rounded, filled"];
688 [code="tx.origin == owner_txorigin7", color=white, fillcolor="#BFE6D3", label="91_ call_argument--call_argument\n688_tx.origin == owner_txorigin7-92-92", node_type=call_argument, shape=box, style="rounded, filled"];
689 [code="tx.origin == owner_txorigin7", color=white, fillcolor="#BFE6D3", label="91_ binary_expression--binary_expression\n689_tx.origin == owner_txorigin7-92-92", node_type=binary_expression, shape=box, style="rounded, filled"];
690 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="91_ member_expression--member_expression\n690_tx.origin-92-92", node_type=member_expression, shape=box, style="rounded, filled"];
691 [code=tx, color=white, fillcolor="#BFE6D3", label="91_ tx--identifier\n691_tx-92-92", node_type=identifier, shape=box, style="rounded, filled"];
692 [code=origin, color=white, fillcolor="#BFE6D3", label="91_ origin--identifier\n692_origin-92-92", node_type=identifier, shape=box, style="rounded, filled"];
693 [code=owner_txorigin7, color=white, fillcolor="#BFE6D3", label="91_ owner_txorigin7--identifier\n693_owner_txorigin7-92-92", node_type=identifier, shape=box, style="rounded, filled"];
694 [code="to.call.value(amount);", color=white, fillcolor="#BFE6D3", label="92_ to.call.value(amount);\n694-expression_statement-93-93", method="transferTo_txorigin7(address to,uint amount,address owner_txorigin7)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
695 [code="to.call.value(amount)", color=white, fillcolor="#BFE6D3", label="92_ call_expression--call_expression\n695_to.call.value(amount)-93-93", node_type=call_expression, shape=box, style="rounded, filled"];
696 [code="to.call.value", color=white, fillcolor="#BFE6D3", label="92_ member_expression--member_expression\n696_to.call.value-93-93", node_type=member_expression, shape=box, style="rounded, filled"];
697 [code="to.call", color=white, fillcolor="#BFE6D3", label="92_ member_expression--member_expression\n697_to.call-93-93", node_type=member_expression, shape=box, style="rounded, filled"];
698 [code=to, color=white, fillcolor="#BFE6D3", label="92_ to--identifier\n698_to-93-93", node_type=identifier, shape=box, style="rounded, filled"];
699 [code=call, color=white, fillcolor="#BFE6D3", label="92_ call--identifier\n699_call-93-93", node_type=identifier, shape=box, style="rounded, filled"];
700 [code=value, color=white, fillcolor="#BFE6D3", label="92_ value--identifier\n700_value-93-93", node_type=identifier, shape=box, style="rounded, filled"];
701 [code=amount, color=white, fillcolor="#BFE6D3", label="92_ call_argument--call_argument\n701_amount-93-93", node_type=call_argument, shape=box, style="rounded, filled"];
702 [code=amount, color=white, fillcolor="#BFE6D3", label="92_ amount--identifier\n702_amount-93-93", node_type=identifier, shape=box, style="rounded, filled"];
703 [code="function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }", color=white, fillcolor="#BFE6D3", label="94_ function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n703-function_definition-95-98", method="approve(address spender,uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
704 [code=approve, color=white, fillcolor="#BFE6D3", label="94_ approve--identifier\n704_approve-95-95", node_type=identifier, shape=box, style="rounded, filled"];
705 [code="address spender", color=white, fillcolor="#BFE6D3", label="94_ parameter--parameter\n705_address spender-95-95", node_type=parameter, shape=box, style="rounded, filled"];
706 [code=address, color=white, fillcolor="#BFE6D3", label="94_ type_name--type_name\n706_address-95-95", node_type=type_name, shape=box, style="rounded, filled"];
707 [code=address, color=white, fillcolor="#BFE6D3", label="94_ primitive_type--primitive_type\n707_address-95-95", node_type=primitive_type, shape=box, style="rounded, filled"];
708 [code=spender, color=white, fillcolor="#BFE6D3", label="94_ spender--identifier\n708_spender-95-95", node_type=identifier, shape=box, style="rounded, filled"];
709 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="94_ parameter--parameter\n709_uint256 value-95-95", node_type=parameter, shape=box, style="rounded, filled"];
710 [code=uint256, color=white, fillcolor="#BFE6D3", label="94_ type_name--type_name\n710_uint256-95-95", node_type=type_name, shape=box, style="rounded, filled"];
711 [code=uint256, color=white, fillcolor="#BFE6D3", label="94_ primitive_type--primitive_type\n711_uint256-95-95", node_type=primitive_type, shape=box, style="rounded, filled"];
712 [code=value, color=white, fillcolor="#BFE6D3", label="94_ value--identifier\n712_value-95-95", node_type=identifier, shape=box, style="rounded, filled"];
713 [code=public, color=white, fillcolor="#BFE6D3", label="94_ visibility--visibility\n713_public-95-95", node_type=visibility, shape=box, style="rounded, filled"];
714 [code="returns (bool)", color=white, fillcolor="#BFE6D3", label="94_ return_type_definition--return_type_definition\n714_returns (bool)-95-95", node_type=return_type_definition, shape=box, style="rounded, filled"];
715 [code=bool, color=white, fillcolor="#BFE6D3", label="94_ parameter--parameter\n715_bool-95-95", node_type=parameter, shape=box, style="rounded, filled"];
716 [code=bool, color=white, fillcolor="#BFE6D3", label="94_ type_name--type_name\n716_bool-95-95", node_type=type_name, shape=box, style="rounded, filled"];
717 [code=bool, color=white, fillcolor="#BFE6D3", label="94_ primitive_type--primitive_type\n717_bool-95-95", node_type=primitive_type, shape=box, style="rounded, filled"];
718 [code="{\n        _approve(msg.sender, spender, value);\n        return true;\n    }", color=white, fillcolor="#BFE6D3", label="94_ function_body--function_body\n718_{\n        _approve(msg.sender, spender, value);\n        return true;\n    }-95-98", node_type=function_body, shape=box, style="rounded, filled"];
719 [code="_approve(msg.sender, spender, value);", color=white, fillcolor="#BFE6D3", label="95_ _approve(msg.sender, spender, value);\n719-expression_statement-96-96", method="approve(address spender,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
720 [code="_approve(msg.sender, spender, value)", color=white, fillcolor="#BFE6D3", label="95_ call_expression--call_expression\n720__approve(msg.sender, spender, value)-96-96", node_type=call_expression, shape=box, style="rounded, filled"];
721 [code=_approve, color=white, fillcolor="#BFE6D3", label="95_ _approve--identifier\n721__approve-96-96", node_type=identifier, shape=box, style="rounded, filled"];
722 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="95_ call_argument--call_argument\n722_msg.sender-96-96", node_type=call_argument, shape=box, style="rounded, filled"];
723 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="95_ member_expression--member_expression\n723_msg.sender-96-96", node_type=member_expression, shape=box, style="rounded, filled"];
724 [code=msg, color=white, fillcolor="#BFE6D3", label="95_ msg--identifier\n724_msg-96-96", node_type=identifier, shape=box, style="rounded, filled"];
725 [code=sender, color=white, fillcolor="#BFE6D3", label="95_ sender--identifier\n725_sender-96-96", node_type=identifier, shape=box, style="rounded, filled"];
726 [code=spender, color=white, fillcolor="#BFE6D3", label="95_ call_argument--call_argument\n726_spender-96-96", node_type=call_argument, shape=box, style="rounded, filled"];
727 [code=spender, color=white, fillcolor="#BFE6D3", label="95_ spender--identifier\n727_spender-96-96", node_type=identifier, shape=box, style="rounded, filled"];
728 [code=value, color=white, fillcolor="#BFE6D3", label="95_ call_argument--call_argument\n728_value-96-96", node_type=call_argument, shape=box, style="rounded, filled"];
729 [code=value, color=white, fillcolor="#BFE6D3", label="95_ value--identifier\n729_value-96-96", node_type=identifier, shape=box, style="rounded, filled"];
730 [code="return true;", color=white, fillcolor="#BFE6D3", label="96_ return true;\n730-return-97-97", method="approve(address spender,uint256 value)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
731 [code=true, color=white, fillcolor="#BFE6D3", label="96_ boolean_literal--boolean_literal\n731_true-97-97", node_type=boolean_literal, shape=box, style="rounded, filled"];
732 [code=true, color=white, fillcolor="#BFE6D3", label="96_ true--true\n732_true-97-97", node_type=true, shape=box, style="rounded, filled"];
733 [code="function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="98_ function transferTo_txorigin23(address to, uint amount,address owner_txorigin23) public {\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}\n733-function_definition-99-102", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
734 [code=transferTo_txorigin23, color=white, fillcolor="#BFE6D3", label="98_ transferTo_txorigin23--identifier\n734_transferTo_txorigin23-99-99", node_type=identifier, shape=box, style="rounded, filled"];
735 [code="address to", color=white, fillcolor="#BFE6D3", label="98_ parameter--parameter\n735_address to-99-99", node_type=parameter, shape=box, style="rounded, filled"];
736 [code=address, color=white, fillcolor="#BFE6D3", label="98_ type_name--type_name\n736_address-99-99", node_type=type_name, shape=box, style="rounded, filled"];
737 [code=address, color=white, fillcolor="#BFE6D3", label="98_ primitive_type--primitive_type\n737_address-99-99", node_type=primitive_type, shape=box, style="rounded, filled"];
738 [code=to, color=white, fillcolor="#BFE6D3", label="98_ to--identifier\n738_to-99-99", node_type=identifier, shape=box, style="rounded, filled"];
739 [code="uint amount", color=white, fillcolor="#BFE6D3", label="98_ parameter--parameter\n739_uint amount-99-99", node_type=parameter, shape=box, style="rounded, filled"];
740 [code=uint, color=white, fillcolor="#BFE6D3", label="98_ type_name--type_name\n740_uint-99-99", node_type=type_name, shape=box, style="rounded, filled"];
741 [code=uint, color=white, fillcolor="#BFE6D3", label="98_ primitive_type--primitive_type\n741_uint-99-99", node_type=primitive_type, shape=box, style="rounded, filled"];
742 [code=amount, color=white, fillcolor="#BFE6D3", label="98_ amount--identifier\n742_amount-99-99", node_type=identifier, shape=box, style="rounded, filled"];
743 [code="address owner_txorigin23", color=white, fillcolor="#BFE6D3", label="98_ parameter--parameter\n743_address owner_txorigin23-99-99", node_type=parameter, shape=box, style="rounded, filled"];
744 [code=address, color=white, fillcolor="#BFE6D3", label="98_ type_name--type_name\n744_address-99-99", node_type=type_name, shape=box, style="rounded, filled"];
745 [code=address, color=white, fillcolor="#BFE6D3", label="98_ primitive_type--primitive_type\n745_address-99-99", node_type=primitive_type, shape=box, style="rounded, filled"];
746 [code=owner_txorigin23, color=white, fillcolor="#BFE6D3", label="98_ owner_txorigin23--identifier\n746_owner_txorigin23-99-99", node_type=identifier, shape=box, style="rounded, filled"];
747 [code=public, color=white, fillcolor="#BFE6D3", label="98_ visibility--visibility\n747_public-99-99", node_type=visibility, shape=box, style="rounded, filled"];
748 [code="{\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="98_ function_body--function_body\n748_{\n  require(tx.origin == owner_txorigin23);\n  to.call.value(amount);\n}-99-102", node_type=function_body, shape=box, style="rounded, filled"];
749 [code="require(tx.origin == owner_txorigin23);", color=white, fillcolor="#BFE6D3", label="99_ require(tx.origin == owner_txorigin23);\n749-expression_statement-100-100", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
750 [code="require(tx.origin == owner_txorigin23)", color=white, fillcolor="#BFE6D3", label="99_ call_expression--call_expression\n750_require(tx.origin == owner_txorigin23)-100-100", node_type=call_expression, shape=box, style="rounded, filled"];
751 [code=require, color=white, fillcolor="#BFE6D3", label="99_ require--identifier\n751_require-100-100", node_type=identifier, shape=box, style="rounded, filled"];
752 [code="tx.origin == owner_txorigin23", color=white, fillcolor="#BFE6D3", label="99_ call_argument--call_argument\n752_tx.origin == owner_txorigin23-100-100", node_type=call_argument, shape=box, style="rounded, filled"];
753 [code="tx.origin == owner_txorigin23", color=white, fillcolor="#BFE6D3", label="99_ binary_expression--binary_expression\n753_tx.origin == owner_txorigin23-100-100", node_type=binary_expression, shape=box, style="rounded, filled"];
754 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="99_ member_expression--member_expression\n754_tx.origin-100-100", node_type=member_expression, shape=box, style="rounded, filled"];
755 [code=tx, color=white, fillcolor="#BFE6D3", label="99_ tx--identifier\n755_tx-100-100", node_type=identifier, shape=box, style="rounded, filled"];
756 [code=origin, color=white, fillcolor="#BFE6D3", label="99_ origin--identifier\n756_origin-100-100", node_type=identifier, shape=box, style="rounded, filled"];
757 [code=owner_txorigin23, color=white, fillcolor="#BFE6D3", label="99_ owner_txorigin23--identifier\n757_owner_txorigin23-100-100", node_type=identifier, shape=box, style="rounded, filled"];
758 [code="to.call.value(amount);", color=white, fillcolor="#BFE6D3", label="100_ to.call.value(amount);\n758-expression_statement-101-101", method="transferTo_txorigin23(address to,uint amount,address owner_txorigin23)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
759 [code="to.call.value(amount)", color=white, fillcolor="#BFE6D3", label="100_ call_expression--call_expression\n759_to.call.value(amount)-101-101", node_type=call_expression, shape=box, style="rounded, filled"];
760 [code="to.call.value", color=white, fillcolor="#BFE6D3", label="100_ member_expression--member_expression\n760_to.call.value-101-101", node_type=member_expression, shape=box, style="rounded, filled"];
761 [code="to.call", color=white, fillcolor="#BFE6D3", label="100_ member_expression--member_expression\n761_to.call-101-101", node_type=member_expression, shape=box, style="rounded, filled"];
762 [code=to, color=white, fillcolor="#BFE6D3", label="100_ to--identifier\n762_to-101-101", node_type=identifier, shape=box, style="rounded, filled"];
763 [code=call, color=white, fillcolor="#BFE6D3", label="100_ call--identifier\n763_call-101-101", node_type=identifier, shape=box, style="rounded, filled"];
764 [code=value, color=white, fillcolor="#BFE6D3", label="100_ value--identifier\n764_value-101-101", node_type=identifier, shape=box, style="rounded, filled"];
765 [code=amount, color=white, fillcolor="#BFE6D3", label="100_ call_argument--call_argument\n765_amount-101-101", node_type=call_argument, shape=box, style="rounded, filled"];
766 [code=amount, color=white, fillcolor="#BFE6D3", label="100_ amount--identifier\n766_amount-101-101", node_type=identifier, shape=box, style="rounded, filled"];
767 [code="function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }", color=white, fillcolor="#BFE6D3", label="102_ function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];\n    }\n767-function_definition-103-105", method="allowance(address owner,address spender)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
768 [code=allowance, color=white, fillcolor="#BFE6D3", label="102_ allowance--identifier\n768_allowance-103-103", node_type=identifier, shape=box, style="rounded, filled"];
769 [code="address owner", color=white, fillcolor="#BFE6D3", label="102_ parameter--parameter\n769_address owner-103-103", node_type=parameter, shape=box, style="rounded, filled"];
770 [code=address, color=white, fillcolor="#BFE6D3", label="102_ type_name--type_name\n770_address-103-103", node_type=type_name, shape=box, style="rounded, filled"];
771 [code=address, color=white, fillcolor="#BFE6D3", label="102_ primitive_type--primitive_type\n771_address-103-103", node_type=primitive_type, shape=box, style="rounded, filled"];
772 [code=owner, color=white, fillcolor="#BFE6D3", label="102_ owner--identifier\n772_owner-103-103", node_type=identifier, shape=box, style="rounded, filled"];
773 [code="address spender", color=white, fillcolor="#BFE6D3", label="102_ parameter--parameter\n773_address spender-103-103", node_type=parameter, shape=box, style="rounded, filled"];
774 [code=address, color=white, fillcolor="#BFE6D3", label="102_ type_name--type_name\n774_address-103-103", node_type=type_name, shape=box, style="rounded, filled"];
775 [code=address, color=white, fillcolor="#BFE6D3", label="102_ primitive_type--primitive_type\n775_address-103-103", node_type=primitive_type, shape=box, style="rounded, filled"];
776 [code=spender, color=white, fillcolor="#BFE6D3", label="102_ spender--identifier\n776_spender-103-103", node_type=identifier, shape=box, style="rounded, filled"];
777 [code=public, color=white, fillcolor="#BFE6D3", label="102_ visibility--visibility\n777_public-103-103", node_type=visibility, shape=box, style="rounded, filled"];
778 [code=view, color=white, fillcolor="#BFE6D3", label="102_ state_mutability--state_mutability\n778_view-103-103", node_type=state_mutability, shape=box, style="rounded, filled"];
779 [code="returns (uint256)", color=white, fillcolor="#BFE6D3", label="102_ return_type_definition--return_type_definition\n779_returns (uint256)-103-103", node_type=return_type_definition, shape=box, style="rounded, filled"];
780 [code=uint256, color=white, fillcolor="#BFE6D3", label="102_ parameter--parameter\n780_uint256-103-103", node_type=parameter, shape=box, style="rounded, filled"];
781 [code=uint256, color=white, fillcolor="#BFE6D3", label="102_ type_name--type_name\n781_uint256-103-103", node_type=type_name, shape=box, style="rounded, filled"];
782 [code=uint256, color=white, fillcolor="#BFE6D3", label="102_ primitive_type--primitive_type\n782_uint256-103-103", node_type=primitive_type, shape=box, style="rounded, filled"];
783 [code="{\n        return _allowed[owner][spender];\n    }", color=white, fillcolor="#BFE6D3", label="102_ function_body--function_body\n783_{\n        return _allowed[owner][spender];\n    }-103-105", node_type=function_body, shape=box, style="rounded, filled"];
784 [code="return _allowed[owner][spender];", color=white, fillcolor="#BFE6D3", label="103_ return _allowed[owner][spender];\n784-return-104-104", method="allowance(address owner,address spender)", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
785 [code="_allowed[owner][spender]", color=white, fillcolor="#BFE6D3", label="103_ array_access--array_access\n785__allowed[owner][spender]-104-104", node_type=array_access, shape=box, style="rounded, filled"];
786 [code="_allowed[owner]", color=white, fillcolor="#BFE6D3", label="103_ array_access--array_access\n786__allowed[owner]-104-104", node_type=array_access, shape=box, style="rounded, filled"];
787 [code=_allowed, color=white, fillcolor="#BFE6D3", label="103_ _allowed--identifier\n787__allowed-104-104", node_type=identifier, shape=box, style="rounded, filled"];
788 [code=owner, color=white, fillcolor="#BFE6D3", label="103_ owner--identifier\n788_owner-104-104", node_type=identifier, shape=box, style="rounded, filled"];
789 [code=spender, color=white, fillcolor="#BFE6D3", label="103_ spender--identifier\n789_spender-104-104", node_type=identifier, shape=box, style="rounded, filled"];
790 [code="function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }", color=white, fillcolor="#BFE6D3", label="105_ function withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14) public {\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }\n790-function_definition-106-109", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
791 [code=withdrawAll_txorigin14, color=white, fillcolor="#BFE6D3", label="105_ withdrawAll_txorigin14--identifier\n791_withdrawAll_txorigin14-106-106", node_type=identifier, shape=box, style="rounded, filled"];
792 [code="address payable _recipient", color=white, fillcolor="#BFE6D3", label="105_ parameter--parameter\n792_address payable _recipient-106-106", node_type=parameter, shape=box, style="rounded, filled"];
793 [code="address payable", color=white, fillcolor="#BFE6D3", label="105_ type_name--type_name\n793_address payable-106-106", node_type=type_name, shape=box, style="rounded, filled"];
794 [code="address payable", color=white, fillcolor="#BFE6D3", label="105_ primitive_type--primitive_type\n794_address payable-106-106", node_type=primitive_type, shape=box, style="rounded, filled"];
795 [code=_recipient, color=white, fillcolor="#BFE6D3", label="105_ _recipient--identifier\n795__recipient-106-106", node_type=identifier, shape=box, style="rounded, filled"];
796 [code="address owner_txorigin14", color=white, fillcolor="#BFE6D3", label="105_ parameter--parameter\n796_address owner_txorigin14-106-106", node_type=parameter, shape=box, style="rounded, filled"];
797 [code=address, color=white, fillcolor="#BFE6D3", label="105_ type_name--type_name\n797_address-106-106", node_type=type_name, shape=box, style="rounded, filled"];
798 [code=address, color=white, fillcolor="#BFE6D3", label="105_ primitive_type--primitive_type\n798_address-106-106", node_type=primitive_type, shape=box, style="rounded, filled"];
799 [code=owner_txorigin14, color=white, fillcolor="#BFE6D3", label="105_ owner_txorigin14--identifier\n799_owner_txorigin14-106-106", node_type=identifier, shape=box, style="rounded, filled"];
800 [code=public, color=white, fillcolor="#BFE6D3", label="105_ visibility--visibility\n800_public-106-106", node_type=visibility, shape=box, style="rounded, filled"];
801 [code="{\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }", color=white, fillcolor="#BFE6D3", label="105_ function_body--function_body\n801_{\n        require(tx.origin == owner_txorigin14);\n        _recipient.transfer(address(this).balance);\n    }-106-109", node_type=function_body, shape=box, style="rounded, filled"];
802 [code="require(tx.origin == owner_txorigin14);", color=white, fillcolor="#BFE6D3", label="106_ require(tx.origin == owner_txorigin14);\n802-expression_statement-107-107", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
803 [code="require(tx.origin == owner_txorigin14)", color=white, fillcolor="#BFE6D3", label="106_ call_expression--call_expression\n803_require(tx.origin == owner_txorigin14)-107-107", node_type=call_expression, shape=box, style="rounded, filled"];
804 [code=require, color=white, fillcolor="#BFE6D3", label="106_ require--identifier\n804_require-107-107", node_type=identifier, shape=box, style="rounded, filled"];
805 [code="tx.origin == owner_txorigin14", color=white, fillcolor="#BFE6D3", label="106_ call_argument--call_argument\n805_tx.origin == owner_txorigin14-107-107", node_type=call_argument, shape=box, style="rounded, filled"];
806 [code="tx.origin == owner_txorigin14", color=white, fillcolor="#BFE6D3", label="106_ binary_expression--binary_expression\n806_tx.origin == owner_txorigin14-107-107", node_type=binary_expression, shape=box, style="rounded, filled"];
807 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="106_ member_expression--member_expression\n807_tx.origin-107-107", node_type=member_expression, shape=box, style="rounded, filled"];
808 [code=tx, color=white, fillcolor="#BFE6D3", label="106_ tx--identifier\n808_tx-107-107", node_type=identifier, shape=box, style="rounded, filled"];
809 [code=origin, color=white, fillcolor="#BFE6D3", label="106_ origin--identifier\n809_origin-107-107", node_type=identifier, shape=box, style="rounded, filled"];
810 [code=owner_txorigin14, color=white, fillcolor="#BFE6D3", label="106_ owner_txorigin14--identifier\n810_owner_txorigin14-107-107", node_type=identifier, shape=box, style="rounded, filled"];
811 [code="_recipient.transfer(address(this).balance);", color=white, fillcolor="#BFE6D3", label="107_ _recipient.transfer(address(this).balance);\n811-expression_statement-108-108", method="withdrawAll_txorigin14(address payable _recipient,address owner_txorigin14)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
812 [code="_recipient.transfer(address(this).balance)", color=white, fillcolor="#BFE6D3", label="107_ call_expression--call_expression\n812__recipient.transfer(address(this).balance)-108-108", node_type=call_expression, shape=box, style="rounded, filled"];
813 [code="_recipient.transfer", color=white, fillcolor="#BFE6D3", label="107_ member_expression--member_expression\n813__recipient.transfer-108-108", node_type=member_expression, shape=box, style="rounded, filled"];
814 [code=_recipient, color=white, fillcolor="#BFE6D3", label="107_ _recipient--identifier\n814__recipient-108-108", node_type=identifier, shape=box, style="rounded, filled"];
815 [code=transfer, color=white, fillcolor="#BFE6D3", label="107_ transfer--identifier\n815_transfer-108-108", node_type=identifier, shape=box, style="rounded, filled"];
816 [code="address(this).balance", color=white, fillcolor="#BFE6D3", label="107_ call_argument--call_argument\n816_address(this).balance-108-108", node_type=call_argument, shape=box, style="rounded, filled"];
817 [code="address(this).balance", color=white, fillcolor="#BFE6D3", label="107_ member_expression--member_expression\n817_address(this).balance-108-108", node_type=member_expression, shape=box, style="rounded, filled"];
818 [code="address(this)", color=white, fillcolor="#BFE6D3", label="107_ type_cast_expression--type_cast_expression\n818_address(this)-108-108", node_type=type_cast_expression, shape=box, style="rounded, filled"];
819 [code=address, color=white, fillcolor="#BFE6D3", label="107_ primitive_type--primitive_type\n819_address-108-108", node_type=primitive_type, shape=box, style="rounded, filled"];
820 [code=this, color=white, fillcolor="#BFE6D3", label="107_ this--identifier\n820_this-108-108", node_type=identifier, shape=box, style="rounded, filled"];
821 [code=balance, color=white, fillcolor="#BFE6D3", label="107_ balance--identifier\n821_balance-108-108", node_type=identifier, shape=box, style="rounded, filled"];
822 [code="function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }", color=white, fillcolor="#BFE6D3", label="109_ function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\n822-function_definition-110-112", method="burn(uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
823 [code=burn, color=white, fillcolor="#BFE6D3", label="109_ burn--identifier\n823_burn-110-110", node_type=identifier, shape=box, style="rounded, filled"];
824 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="109_ parameter--parameter\n824_uint256 value-110-110", node_type=parameter, shape=box, style="rounded, filled"];
825 [code=uint256, color=white, fillcolor="#BFE6D3", label="109_ type_name--type_name\n825_uint256-110-110", node_type=type_name, shape=box, style="rounded, filled"];
826 [code=uint256, color=white, fillcolor="#BFE6D3", label="109_ primitive_type--primitive_type\n826_uint256-110-110", node_type=primitive_type, shape=box, style="rounded, filled"];
827 [code=value, color=white, fillcolor="#BFE6D3", label="109_ value--identifier\n827_value-110-110", node_type=identifier, shape=box, style="rounded, filled"];
828 [code=public, color=white, fillcolor="#BFE6D3", label="109_ visibility--visibility\n828_public-110-110", node_type=visibility, shape=box, style="rounded, filled"];
829 [code="{\n        _burn(msg.sender, value);\n    }", color=white, fillcolor="#BFE6D3", label="109_ function_body--function_body\n829_{\n        _burn(msg.sender, value);\n    }-110-112", node_type=function_body, shape=box, style="rounded, filled"];
830 [code="_burn(msg.sender, value);", color=white, fillcolor="#BFE6D3", label="110_ _burn(msg.sender, value);\n830-expression_statement-111-111", method="burn(uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
831 [code="_burn(msg.sender, value)", color=white, fillcolor="#BFE6D3", label="110_ call_expression--call_expression\n831__burn(msg.sender, value)-111-111", node_type=call_expression, shape=box, style="rounded, filled"];
832 [code=_burn, color=white, fillcolor="#BFE6D3", label="110_ _burn--identifier\n832__burn-111-111", node_type=identifier, shape=box, style="rounded, filled"];
833 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="110_ call_argument--call_argument\n833_msg.sender-111-111", node_type=call_argument, shape=box, style="rounded, filled"];
834 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="110_ member_expression--member_expression\n834_msg.sender-111-111", node_type=member_expression, shape=box, style="rounded, filled"];
835 [code=msg, color=white, fillcolor="#BFE6D3", label="110_ msg--identifier\n835_msg-111-111", node_type=identifier, shape=box, style="rounded, filled"];
836 [code=sender, color=white, fillcolor="#BFE6D3", label="110_ sender--identifier\n836_sender-111-111", node_type=identifier, shape=box, style="rounded, filled"];
837 [code=value, color=white, fillcolor="#BFE6D3", label="110_ call_argument--call_argument\n837_value-111-111", node_type=call_argument, shape=box, style="rounded, filled"];
838 [code=value, color=white, fillcolor="#BFE6D3", label="110_ value--identifier\n838_value-111-111", node_type=identifier, shape=box, style="rounded, filled"];
839 [code="function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }", color=white, fillcolor="#BFE6D3", label="112_ function withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30) public {\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }\n839-function_definition-113-116", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
840 [code=withdrawAll_txorigin30, color=white, fillcolor="#BFE6D3", label="112_ withdrawAll_txorigin30--identifier\n840_withdrawAll_txorigin30-113-113", node_type=identifier, shape=box, style="rounded, filled"];
841 [code="address payable _recipient", color=white, fillcolor="#BFE6D3", label="112_ parameter--parameter\n841_address payable _recipient-113-113", node_type=parameter, shape=box, style="rounded, filled"];
842 [code="address payable", color=white, fillcolor="#BFE6D3", label="112_ type_name--type_name\n842_address payable-113-113", node_type=type_name, shape=box, style="rounded, filled"];
843 [code="address payable", color=white, fillcolor="#BFE6D3", label="112_ primitive_type--primitive_type\n843_address payable-113-113", node_type=primitive_type, shape=box, style="rounded, filled"];
844 [code=_recipient, color=white, fillcolor="#BFE6D3", label="112_ _recipient--identifier\n844__recipient-113-113", node_type=identifier, shape=box, style="rounded, filled"];
845 [code="address owner_txorigin30", color=white, fillcolor="#BFE6D3", label="112_ parameter--parameter\n845_address owner_txorigin30-113-113", node_type=parameter, shape=box, style="rounded, filled"];
846 [code=address, color=white, fillcolor="#BFE6D3", label="112_ type_name--type_name\n846_address-113-113", node_type=type_name, shape=box, style="rounded, filled"];
847 [code=address, color=white, fillcolor="#BFE6D3", label="112_ primitive_type--primitive_type\n847_address-113-113", node_type=primitive_type, shape=box, style="rounded, filled"];
848 [code=owner_txorigin30, color=white, fillcolor="#BFE6D3", label="112_ owner_txorigin30--identifier\n848_owner_txorigin30-113-113", node_type=identifier, shape=box, style="rounded, filled"];
849 [code=public, color=white, fillcolor="#BFE6D3", label="112_ visibility--visibility\n849_public-113-113", node_type=visibility, shape=box, style="rounded, filled"];
850 [code="{\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }", color=white, fillcolor="#BFE6D3", label="112_ function_body--function_body\n850_{\n        require(tx.origin == owner_txorigin30);\n        _recipient.transfer(address(this).balance);\n    }-113-116", node_type=function_body, shape=box, style="rounded, filled"];
851 [code="require(tx.origin == owner_txorigin30);", color=white, fillcolor="#BFE6D3", label="113_ require(tx.origin == owner_txorigin30);\n851-expression_statement-114-114", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
852 [code="require(tx.origin == owner_txorigin30)", color=white, fillcolor="#BFE6D3", label="113_ call_expression--call_expression\n852_require(tx.origin == owner_txorigin30)-114-114", node_type=call_expression, shape=box, style="rounded, filled"];
853 [code=require, color=white, fillcolor="#BFE6D3", label="113_ require--identifier\n853_require-114-114", node_type=identifier, shape=box, style="rounded, filled"];
854 [code="tx.origin == owner_txorigin30", color=white, fillcolor="#BFE6D3", label="113_ call_argument--call_argument\n854_tx.origin == owner_txorigin30-114-114", node_type=call_argument, shape=box, style="rounded, filled"];
855 [code="tx.origin == owner_txorigin30", color=white, fillcolor="#BFE6D3", label="113_ binary_expression--binary_expression\n855_tx.origin == owner_txorigin30-114-114", node_type=binary_expression, shape=box, style="rounded, filled"];
856 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="113_ member_expression--member_expression\n856_tx.origin-114-114", node_type=member_expression, shape=box, style="rounded, filled"];
857 [code=tx, color=white, fillcolor="#BFE6D3", label="113_ tx--identifier\n857_tx-114-114", node_type=identifier, shape=box, style="rounded, filled"];
858 [code=origin, color=white, fillcolor="#BFE6D3", label="113_ origin--identifier\n858_origin-114-114", node_type=identifier, shape=box, style="rounded, filled"];
859 [code=owner_txorigin30, color=white, fillcolor="#BFE6D3", label="113_ owner_txorigin30--identifier\n859_owner_txorigin30-114-114", node_type=identifier, shape=box, style="rounded, filled"];
860 [code="_recipient.transfer(address(this).balance);", color=white, fillcolor="#BFE6D3", label="114_ _recipient.transfer(address(this).balance);\n860-expression_statement-115-115", method="withdrawAll_txorigin30(address payable _recipient,address owner_txorigin30)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
861 [code="_recipient.transfer(address(this).balance)", color=white, fillcolor="#BFE6D3", label="114_ call_expression--call_expression\n861__recipient.transfer(address(this).balance)-115-115", node_type=call_expression, shape=box, style="rounded, filled"];
862 [code="_recipient.transfer", color=white, fillcolor="#BFE6D3", label="114_ member_expression--member_expression\n862__recipient.transfer-115-115", node_type=member_expression, shape=box, style="rounded, filled"];
863 [code=_recipient, color=white, fillcolor="#BFE6D3", label="114_ _recipient--identifier\n863__recipient-115-115", node_type=identifier, shape=box, style="rounded, filled"];
864 [code=transfer, color=white, fillcolor="#BFE6D3", label="114_ transfer--identifier\n864_transfer-115-115", node_type=identifier, shape=box, style="rounded, filled"];
865 [code="address(this).balance", color=white, fillcolor="#BFE6D3", label="114_ call_argument--call_argument\n865_address(this).balance-115-115", node_type=call_argument, shape=box, style="rounded, filled"];
866 [code="address(this).balance", color=white, fillcolor="#BFE6D3", label="114_ member_expression--member_expression\n866_address(this).balance-115-115", node_type=member_expression, shape=box, style="rounded, filled"];
867 [code="address(this)", color=white, fillcolor="#BFE6D3", label="114_ type_cast_expression--type_cast_expression\n867_address(this)-115-115", node_type=type_cast_expression, shape=box, style="rounded, filled"];
868 [code=address, color=white, fillcolor="#BFE6D3", label="114_ primitive_type--primitive_type\n868_address-115-115", node_type=primitive_type, shape=box, style="rounded, filled"];
869 [code=this, color=white, fillcolor="#BFE6D3", label="114_ this--identifier\n869_this-115-115", node_type=identifier, shape=box, style="rounded, filled"];
870 [code=balance, color=white, fillcolor="#BFE6D3", label="114_ balance--identifier\n870_balance-115-115", node_type=identifier, shape=box, style="rounded, filled"];
871 [code="function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }", color=white, fillcolor="#BFE6D3", label="116_ function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\n871-function_definition-117-122", method="_mint(address account,uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
872 [code=_mint, color=white, fillcolor="#BFE6D3", label="116_ _mint--identifier\n872__mint-117-117", node_type=identifier, shape=box, style="rounded, filled"];
873 [code="address account", color=white, fillcolor="#BFE6D3", label="116_ parameter--parameter\n873_address account-117-117", node_type=parameter, shape=box, style="rounded, filled"];
874 [code=address, color=white, fillcolor="#BFE6D3", label="116_ type_name--type_name\n874_address-117-117", node_type=type_name, shape=box, style="rounded, filled"];
875 [code=address, color=white, fillcolor="#BFE6D3", label="116_ primitive_type--primitive_type\n875_address-117-117", node_type=primitive_type, shape=box, style="rounded, filled"];
876 [code=account, color=white, fillcolor="#BFE6D3", label="116_ account--identifier\n876_account-117-117", node_type=identifier, shape=box, style="rounded, filled"];
877 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="116_ parameter--parameter\n877_uint256 value-117-117", node_type=parameter, shape=box, style="rounded, filled"];
878 [code=uint256, color=white, fillcolor="#BFE6D3", label="116_ type_name--type_name\n878_uint256-117-117", node_type=type_name, shape=box, style="rounded, filled"];
879 [code=uint256, color=white, fillcolor="#BFE6D3", label="116_ primitive_type--primitive_type\n879_uint256-117-117", node_type=primitive_type, shape=box, style="rounded, filled"];
880 [code=value, color=white, fillcolor="#BFE6D3", label="116_ value--identifier\n880_value-117-117", node_type=identifier, shape=box, style="rounded, filled"];
881 [code=internal, color=white, fillcolor="#BFE6D3", label="116_ visibility--visibility\n881_internal-117-117", node_type=visibility, shape=box, style="rounded, filled"];
882 [code="{\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }", color=white, fillcolor="#BFE6D3", label="116_ function_body--function_body\n882_{\n        require(account != address(0));\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }-117-122", node_type=function_body, shape=box, style="rounded, filled"];
883 [code="require(account != address(0));", color=white, fillcolor="#BFE6D3", label="117_ require(account != address(0));\n883-expression_statement-118-118", method="_mint(address account,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
884 [code="require(account != address(0))", color=white, fillcolor="#BFE6D3", label="117_ call_expression--call_expression\n884_require(account != address(0))-118-118", node_type=call_expression, shape=box, style="rounded, filled"];
885 [code=require, color=white, fillcolor="#BFE6D3", label="117_ require--identifier\n885_require-118-118", node_type=identifier, shape=box, style="rounded, filled"];
886 [code="account != address(0)", color=white, fillcolor="#BFE6D3", label="117_ call_argument--call_argument\n886_account != address(0)-118-118", node_type=call_argument, shape=box, style="rounded, filled"];
887 [code="account != address(0)", color=white, fillcolor="#BFE6D3", label="117_ binary_expression--binary_expression\n887_account != address(0)-118-118", node_type=binary_expression, shape=box, style="rounded, filled"];
888 [code=account, color=white, fillcolor="#BFE6D3", label="117_ account--identifier\n888_account-118-118", node_type=identifier, shape=box, style="rounded, filled"];
889 [code="address(0)", color=white, fillcolor="#BFE6D3", label="117_ type_cast_expression--type_cast_expression\n889_address(0)-118-118", node_type=type_cast_expression, shape=box, style="rounded, filled"];
890 [code=address, color=white, fillcolor="#BFE6D3", label="117_ primitive_type--primitive_type\n890_address-118-118", node_type=primitive_type, shape=box, style="rounded, filled"];
891 [code=0, color=white, fillcolor="#BFE6D3", label="117_ 0--number_literal\n891_0-118-118", node_type=number_literal, shape=box, style="rounded, filled"];
892 [code="_totalSupply = _totalSupply.add(value);", color=white, fillcolor="#BFE6D3", label="118_ _totalSupply = _totalSupply.add(value);\n892-expression_statement-119-119", method="_mint(address account,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
893 [code="_totalSupply = _totalSupply.add(value)", color=white, fillcolor="#BFE6D3", label="118_ assignment_expression--assignment_expression\n893__totalSupply = _totalSupply.add(value)-119-119", node_type=assignment_expression, shape=box, style="rounded, filled"];
894 [code=_totalSupply, color=white, fillcolor="#BFE6D3", label="118_ _totalSupply--identifier\n894__totalSupply-119-119", node_type=identifier, shape=box, style="rounded, filled"];
895 [code="_totalSupply.add(value)", color=white, fillcolor="#BFE6D3", label="118_ call_expression--call_expression\n895__totalSupply.add(value)-119-119", node_type=call_expression, shape=box, style="rounded, filled"];
896 [code="_totalSupply.add", color=white, fillcolor="#BFE6D3", label="118_ member_expression--member_expression\n896__totalSupply.add-119-119", node_type=member_expression, shape=box, style="rounded, filled"];
897 [code=_totalSupply, color=white, fillcolor="#BFE6D3", label="118_ _totalSupply--identifier\n897__totalSupply-119-119", node_type=identifier, shape=box, style="rounded, filled"];
898 [code=add, color=white, fillcolor="#BFE6D3", label="118_ add--identifier\n898_add-119-119", node_type=identifier, shape=box, style="rounded, filled"];
899 [code=value, color=white, fillcolor="#BFE6D3", label="118_ call_argument--call_argument\n899_value-119-119", node_type=call_argument, shape=box, style="rounded, filled"];
900 [code=value, color=white, fillcolor="#BFE6D3", label="118_ value--identifier\n900_value-119-119", node_type=identifier, shape=box, style="rounded, filled"];
901 [code="_balances[account] = _balances[account].add(value);", color=white, fillcolor="#BFE6D3", label="119_ _balances[account] = _balances[account].add(value);\n901-expression_statement-120-120", method="_mint(address account,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
902 [code="_balances[account] = _balances[account].add(value)", color=white, fillcolor="#BFE6D3", label="119_ assignment_expression--assignment_expression\n902__balances[account] = _balances[account].add(value)-120-120", node_type=assignment_expression, shape=box, style="rounded, filled"];
903 [code="_balances[account]", color=white, fillcolor="#BFE6D3", label="119_ array_access--array_access\n903__balances[account]-120-120", node_type=array_access, shape=box, style="rounded, filled"];
904 [code=_balances, color=white, fillcolor="#BFE6D3", label="119_ _balances--identifier\n904__balances-120-120", node_type=identifier, shape=box, style="rounded, filled"];
905 [code=account, color=white, fillcolor="#BFE6D3", label="119_ account--identifier\n905_account-120-120", node_type=identifier, shape=box, style="rounded, filled"];
906 [code="_balances[account].add(value)", color=white, fillcolor="#BFE6D3", label="119_ call_expression--call_expression\n906__balances[account].add(value)-120-120", node_type=call_expression, shape=box, style="rounded, filled"];
907 [code="_balances[account].add", color=white, fillcolor="#BFE6D3", label="119_ member_expression--member_expression\n907__balances[account].add-120-120", node_type=member_expression, shape=box, style="rounded, filled"];
908 [code="_balances[account]", color=white, fillcolor="#BFE6D3", label="119_ array_access--array_access\n908__balances[account]-120-120", node_type=array_access, shape=box, style="rounded, filled"];
909 [code=_balances, color=white, fillcolor="#BFE6D3", label="119_ _balances--identifier\n909__balances-120-120", node_type=identifier, shape=box, style="rounded, filled"];
910 [code=account, color=white, fillcolor="#BFE6D3", label="119_ account--identifier\n910_account-120-120", node_type=identifier, shape=box, style="rounded, filled"];
911 [code=add, color=white, fillcolor="#BFE6D3", label="119_ add--identifier\n911_add-120-120", node_type=identifier, shape=box, style="rounded, filled"];
912 [code=value, color=white, fillcolor="#BFE6D3", label="119_ call_argument--call_argument\n912_value-120-120", node_type=call_argument, shape=box, style="rounded, filled"];
913 [code=value, color=white, fillcolor="#BFE6D3", label="119_ value--identifier\n913_value-120-120", node_type=identifier, shape=box, style="rounded, filled"];
914 [code="emit Transfer(address(0), account, value);", color=white, fillcolor="#BFE6D3", label="120_ emit_statement--emit_statement\n914_emit Transfer(address(0), account, value);-121-121", node_type=emit_statement, shape=box, style="rounded, filled"];
915 [code=Transfer, color=white, fillcolor="#BFE6D3", label="120_ Transfer--identifier\n915_Transfer-121-121", node_type=identifier, shape=box, style="rounded, filled"];
916 [code="address(0)", color=white, fillcolor="#BFE6D3", label="120_ call_argument--call_argument\n916_address(0)-121-121", node_type=call_argument, shape=box, style="rounded, filled"];
917 [code="address(0)", color=white, fillcolor="#BFE6D3", label="120_ type_cast_expression--type_cast_expression\n917_address(0)-121-121", node_type=type_cast_expression, shape=box, style="rounded, filled"];
918 [code=address, color=white, fillcolor="#BFE6D3", label="120_ primitive_type--primitive_type\n918_address-121-121", node_type=primitive_type, shape=box, style="rounded, filled"];
919 [code=0, color=white, fillcolor="#BFE6D3", label="120_ 0--number_literal\n919_0-121-121", node_type=number_literal, shape=box, style="rounded, filled"];
920 [code=account, color=white, fillcolor="#BFE6D3", label="120_ call_argument--call_argument\n920_account-121-121", node_type=call_argument, shape=box, style="rounded, filled"];
921 [code=account, color=white, fillcolor="#BFE6D3", label="120_ account--identifier\n921_account-121-121", node_type=identifier, shape=box, style="rounded, filled"];
922 [code=value, color=white, fillcolor="#BFE6D3", label="120_ call_argument--call_argument\n922_value-121-121", node_type=call_argument, shape=box, style="rounded, filled"];
923 [code=value, color=white, fillcolor="#BFE6D3", label="120_ value--identifier\n923_value-121-121", node_type=identifier, shape=box, style="rounded, filled"];
924 [code="function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }", color=white, fillcolor="#BFE6D3", label="122_ function bug_txorigin8(address owner_txorigin8) public{\n        require(tx.origin == owner_txorigin8);\n    }\n924-function_definition-123-125", method="bug_txorigin8(address owner_txorigin8)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
925 [code=bug_txorigin8, color=white, fillcolor="#BFE6D3", label="122_ bug_txorigin8--identifier\n925_bug_txorigin8-123-123", node_type=identifier, shape=box, style="rounded, filled"];
926 [code="address owner_txorigin8", color=white, fillcolor="#BFE6D3", label="122_ parameter--parameter\n926_address owner_txorigin8-123-123", node_type=parameter, shape=box, style="rounded, filled"];
927 [code=address, color=white, fillcolor="#BFE6D3", label="122_ type_name--type_name\n927_address-123-123", node_type=type_name, shape=box, style="rounded, filled"];
928 [code=address, color=white, fillcolor="#BFE6D3", label="122_ primitive_type--primitive_type\n928_address-123-123", node_type=primitive_type, shape=box, style="rounded, filled"];
929 [code=owner_txorigin8, color=white, fillcolor="#BFE6D3", label="122_ owner_txorigin8--identifier\n929_owner_txorigin8-123-123", node_type=identifier, shape=box, style="rounded, filled"];
930 [code=public, color=white, fillcolor="#BFE6D3", label="122_ visibility--visibility\n930_public-123-123", node_type=visibility, shape=box, style="rounded, filled"];
931 [code="{\n        require(tx.origin == owner_txorigin8);\n    }", color=white, fillcolor="#BFE6D3", label="122_ function_body--function_body\n931_{\n        require(tx.origin == owner_txorigin8);\n    }-123-125", node_type=function_body, shape=box, style="rounded, filled"];
932 [code="require(tx.origin == owner_txorigin8);", color=white, fillcolor="#BFE6D3", label="123_ require(tx.origin == owner_txorigin8);\n932-expression_statement-124-124", method="bug_txorigin8(address owner_txorigin8)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
933 [code="require(tx.origin == owner_txorigin8)", color=white, fillcolor="#BFE6D3", label="123_ call_expression--call_expression\n933_require(tx.origin == owner_txorigin8)-124-124", node_type=call_expression, shape=box, style="rounded, filled"];
934 [code=require, color=white, fillcolor="#BFE6D3", label="123_ require--identifier\n934_require-124-124", node_type=identifier, shape=box, style="rounded, filled"];
935 [code="tx.origin == owner_txorigin8", color=white, fillcolor="#BFE6D3", label="123_ call_argument--call_argument\n935_tx.origin == owner_txorigin8-124-124", node_type=call_argument, shape=box, style="rounded, filled"];
936 [code="tx.origin == owner_txorigin8", color=white, fillcolor="#BFE6D3", label="123_ binary_expression--binary_expression\n936_tx.origin == owner_txorigin8-124-124", node_type=binary_expression, shape=box, style="rounded, filled"];
937 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="123_ member_expression--member_expression\n937_tx.origin-124-124", node_type=member_expression, shape=box, style="rounded, filled"];
938 [code=tx, color=white, fillcolor="#BFE6D3", label="123_ tx--identifier\n938_tx-124-124", node_type=identifier, shape=box, style="rounded, filled"];
939 [code=origin, color=white, fillcolor="#BFE6D3", label="123_ origin--identifier\n939_origin-124-124", node_type=identifier, shape=box, style="rounded, filled"];
940 [code=owner_txorigin8, color=white, fillcolor="#BFE6D3", label="123_ owner_txorigin8--identifier\n940_owner_txorigin8-124-124", node_type=identifier, shape=box, style="rounded, filled"];
941 [code="function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }", color=white, fillcolor="#BFE6D3", label="125_ function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }\n941-function_definition-126-131", method="_transfer(address from,address to,uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
942 [code=_transfer, color=white, fillcolor="#BFE6D3", label="125_ _transfer--identifier\n942__transfer-126-126", node_type=identifier, shape=box, style="rounded, filled"];
943 [code="address from", color=white, fillcolor="#BFE6D3", label="125_ parameter--parameter\n943_address from-126-126", node_type=parameter, shape=box, style="rounded, filled"];
944 [code=address, color=white, fillcolor="#BFE6D3", label="125_ type_name--type_name\n944_address-126-126", node_type=type_name, shape=box, style="rounded, filled"];
945 [code=address, color=white, fillcolor="#BFE6D3", label="125_ primitive_type--primitive_type\n945_address-126-126", node_type=primitive_type, shape=box, style="rounded, filled"];
946 [code=from, color=white, fillcolor="#BFE6D3", label="125_ from--identifier\n946_from-126-126", node_type=identifier, shape=box, style="rounded, filled"];
947 [code="address to", color=white, fillcolor="#BFE6D3", label="125_ parameter--parameter\n947_address to-126-126", node_type=parameter, shape=box, style="rounded, filled"];
948 [code=address, color=white, fillcolor="#BFE6D3", label="125_ type_name--type_name\n948_address-126-126", node_type=type_name, shape=box, style="rounded, filled"];
949 [code=address, color=white, fillcolor="#BFE6D3", label="125_ primitive_type--primitive_type\n949_address-126-126", node_type=primitive_type, shape=box, style="rounded, filled"];
950 [code=to, color=white, fillcolor="#BFE6D3", label="125_ to--identifier\n950_to-126-126", node_type=identifier, shape=box, style="rounded, filled"];
951 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="125_ parameter--parameter\n951_uint256 value-126-126", node_type=parameter, shape=box, style="rounded, filled"];
952 [code=uint256, color=white, fillcolor="#BFE6D3", label="125_ type_name--type_name\n952_uint256-126-126", node_type=type_name, shape=box, style="rounded, filled"];
953 [code=uint256, color=white, fillcolor="#BFE6D3", label="125_ primitive_type--primitive_type\n953_uint256-126-126", node_type=primitive_type, shape=box, style="rounded, filled"];
954 [code=value, color=white, fillcolor="#BFE6D3", label="125_ value--identifier\n954_value-126-126", node_type=identifier, shape=box, style="rounded, filled"];
955 [code=internal, color=white, fillcolor="#BFE6D3", label="125_ visibility--visibility\n955_internal-126-126", node_type=visibility, shape=box, style="rounded, filled"];
956 [code="{\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }", color=white, fillcolor="#BFE6D3", label="125_ function_body--function_body\n956_{\n        require(to != address(0));\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(from, to, value);\n    }-126-131", node_type=function_body, shape=box, style="rounded, filled"];
957 [code="require(to != address(0));", color=white, fillcolor="#BFE6D3", label="126_ require(to != address(0));\n957-expression_statement-127-127", method="_transfer(address from,address to,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
958 [code="require(to != address(0))", color=white, fillcolor="#BFE6D3", label="126_ call_expression--call_expression\n958_require(to != address(0))-127-127", node_type=call_expression, shape=box, style="rounded, filled"];
959 [code=require, color=white, fillcolor="#BFE6D3", label="126_ require--identifier\n959_require-127-127", node_type=identifier, shape=box, style="rounded, filled"];
960 [code="to != address(0)", color=white, fillcolor="#BFE6D3", label="126_ call_argument--call_argument\n960_to != address(0)-127-127", node_type=call_argument, shape=box, style="rounded, filled"];
961 [code="to != address(0)", color=white, fillcolor="#BFE6D3", label="126_ binary_expression--binary_expression\n961_to != address(0)-127-127", node_type=binary_expression, shape=box, style="rounded, filled"];
962 [code=to, color=white, fillcolor="#BFE6D3", label="126_ to--identifier\n962_to-127-127", node_type=identifier, shape=box, style="rounded, filled"];
963 [code="address(0)", color=white, fillcolor="#BFE6D3", label="126_ type_cast_expression--type_cast_expression\n963_address(0)-127-127", node_type=type_cast_expression, shape=box, style="rounded, filled"];
964 [code=address, color=white, fillcolor="#BFE6D3", label="126_ primitive_type--primitive_type\n964_address-127-127", node_type=primitive_type, shape=box, style="rounded, filled"];
965 [code=0, color=white, fillcolor="#BFE6D3", label="126_ 0--number_literal\n965_0-127-127", node_type=number_literal, shape=box, style="rounded, filled"];
966 [code="_balances[from] = _balances[from].sub(value);", color=white, fillcolor="#BFE6D3", label="127_ _balances[from] = _balances[from].sub(value);\n966-expression_statement-128-128", method="_transfer(address from,address to,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
967 [code="_balances[from] = _balances[from].sub(value)", color=white, fillcolor="#BFE6D3", label="127_ assignment_expression--assignment_expression\n967__balances[from] = _balances[from].sub(value)-128-128", node_type=assignment_expression, shape=box, style="rounded, filled"];
968 [code="_balances[from]", color=white, fillcolor="#BFE6D3", label="127_ array_access--array_access\n968__balances[from]-128-128", node_type=array_access, shape=box, style="rounded, filled"];
969 [code=_balances, color=white, fillcolor="#BFE6D3", label="127_ _balances--identifier\n969__balances-128-128", node_type=identifier, shape=box, style="rounded, filled"];
970 [code=from, color=white, fillcolor="#BFE6D3", label="127_ from--identifier\n970_from-128-128", node_type=identifier, shape=box, style="rounded, filled"];
971 [code="_balances[from].sub(value)", color=white, fillcolor="#BFE6D3", label="127_ call_expression--call_expression\n971__balances[from].sub(value)-128-128", node_type=call_expression, shape=box, style="rounded, filled"];
972 [code="_balances[from].sub", color=white, fillcolor="#BFE6D3", label="127_ member_expression--member_expression\n972__balances[from].sub-128-128", node_type=member_expression, shape=box, style="rounded, filled"];
973 [code="_balances[from]", color=white, fillcolor="#BFE6D3", label="127_ array_access--array_access\n973__balances[from]-128-128", node_type=array_access, shape=box, style="rounded, filled"];
974 [code=_balances, color=white, fillcolor="#BFE6D3", label="127_ _balances--identifier\n974__balances-128-128", node_type=identifier, shape=box, style="rounded, filled"];
975 [code=from, color=white, fillcolor="#BFE6D3", label="127_ from--identifier\n975_from-128-128", node_type=identifier, shape=box, style="rounded, filled"];
976 [code=sub, color=white, fillcolor="#BFE6D3", label="127_ sub--identifier\n976_sub-128-128", node_type=identifier, shape=box, style="rounded, filled"];
977 [code=value, color=white, fillcolor="#BFE6D3", label="127_ call_argument--call_argument\n977_value-128-128", node_type=call_argument, shape=box, style="rounded, filled"];
978 [code=value, color=white, fillcolor="#BFE6D3", label="127_ value--identifier\n978_value-128-128", node_type=identifier, shape=box, style="rounded, filled"];
979 [code="_balances[to] = _balances[to].add(value);", color=white, fillcolor="#BFE6D3", label="128_ _balances[to] = _balances[to].add(value);\n979-expression_statement-129-129", method="_transfer(address from,address to,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
980 [code="_balances[to] = _balances[to].add(value)", color=white, fillcolor="#BFE6D3", label="128_ assignment_expression--assignment_expression\n980__balances[to] = _balances[to].add(value)-129-129", node_type=assignment_expression, shape=box, style="rounded, filled"];
981 [code="_balances[to]", color=white, fillcolor="#BFE6D3", label="128_ array_access--array_access\n981__balances[to]-129-129", node_type=array_access, shape=box, style="rounded, filled"];
982 [code=_balances, color=white, fillcolor="#BFE6D3", label="128_ _balances--identifier\n982__balances-129-129", node_type=identifier, shape=box, style="rounded, filled"];
983 [code=to, color=white, fillcolor="#BFE6D3", label="128_ to--identifier\n983_to-129-129", node_type=identifier, shape=box, style="rounded, filled"];
984 [code="_balances[to].add(value)", color=white, fillcolor="#BFE6D3", label="128_ call_expression--call_expression\n984__balances[to].add(value)-129-129", node_type=call_expression, shape=box, style="rounded, filled"];
985 [code="_balances[to].add", color=white, fillcolor="#BFE6D3", label="128_ member_expression--member_expression\n985__balances[to].add-129-129", node_type=member_expression, shape=box, style="rounded, filled"];
986 [code="_balances[to]", color=white, fillcolor="#BFE6D3", label="128_ array_access--array_access\n986__balances[to]-129-129", node_type=array_access, shape=box, style="rounded, filled"];
987 [code=_balances, color=white, fillcolor="#BFE6D3", label="128_ _balances--identifier\n987__balances-129-129", node_type=identifier, shape=box, style="rounded, filled"];
988 [code=to, color=white, fillcolor="#BFE6D3", label="128_ to--identifier\n988_to-129-129", node_type=identifier, shape=box, style="rounded, filled"];
989 [code=add, color=white, fillcolor="#BFE6D3", label="128_ add--identifier\n989_add-129-129", node_type=identifier, shape=box, style="rounded, filled"];
990 [code=value, color=white, fillcolor="#BFE6D3", label="128_ call_argument--call_argument\n990_value-129-129", node_type=call_argument, shape=box, style="rounded, filled"];
991 [code=value, color=white, fillcolor="#BFE6D3", label="128_ value--identifier\n991_value-129-129", node_type=identifier, shape=box, style="rounded, filled"];
992 [code="emit Transfer(from, to, value);", color=white, fillcolor="#BFE6D3", label="129_ emit_statement--emit_statement\n992_emit Transfer(from, to, value);-130-130", node_type=emit_statement, shape=box, style="rounded, filled"];
993 [code=Transfer, color=white, fillcolor="#BFE6D3", label="129_ Transfer--identifier\n993_Transfer-130-130", node_type=identifier, shape=box, style="rounded, filled"];
994 [code=from, color=white, fillcolor="#BFE6D3", label="129_ call_argument--call_argument\n994_from-130-130", node_type=call_argument, shape=box, style="rounded, filled"];
995 [code=from, color=white, fillcolor="#BFE6D3", label="129_ from--identifier\n995_from-130-130", node_type=identifier, shape=box, style="rounded, filled"];
996 [code=to, color=white, fillcolor="#BFE6D3", label="129_ call_argument--call_argument\n996_to-130-130", node_type=call_argument, shape=box, style="rounded, filled"];
997 [code=to, color=white, fillcolor="#BFE6D3", label="129_ to--identifier\n997_to-130-130", node_type=identifier, shape=box, style="rounded, filled"];
998 [code=value, color=white, fillcolor="#BFE6D3", label="129_ call_argument--call_argument\n998_value-130-130", node_type=call_argument, shape=box, style="rounded, filled"];
999 [code=value, color=white, fillcolor="#BFE6D3", label="129_ value--identifier\n999_value-130-130", node_type=identifier, shape=box, style="rounded, filled"];
1000 [code="function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="131_ function transferTo_txorigin39(address to, uint amount,address owner_txorigin39) public {\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}\n1000-function_definition-132-135", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1001 [code=transferTo_txorigin39, color=white, fillcolor="#BFE6D3", label="131_ transferTo_txorigin39--identifier\n1001_transferTo_txorigin39-132-132", node_type=identifier, shape=box, style="rounded, filled"];
1002 [code="address to", color=white, fillcolor="#BFE6D3", label="131_ parameter--parameter\n1002_address to-132-132", node_type=parameter, shape=box, style="rounded, filled"];
1003 [code=address, color=white, fillcolor="#BFE6D3", label="131_ type_name--type_name\n1003_address-132-132", node_type=type_name, shape=box, style="rounded, filled"];
1004 [code=address, color=white, fillcolor="#BFE6D3", label="131_ primitive_type--primitive_type\n1004_address-132-132", node_type=primitive_type, shape=box, style="rounded, filled"];
1005 [code=to, color=white, fillcolor="#BFE6D3", label="131_ to--identifier\n1005_to-132-132", node_type=identifier, shape=box, style="rounded, filled"];
1006 [code="uint amount", color=white, fillcolor="#BFE6D3", label="131_ parameter--parameter\n1006_uint amount-132-132", node_type=parameter, shape=box, style="rounded, filled"];
1007 [code=uint, color=white, fillcolor="#BFE6D3", label="131_ type_name--type_name\n1007_uint-132-132", node_type=type_name, shape=box, style="rounded, filled"];
1008 [code=uint, color=white, fillcolor="#BFE6D3", label="131_ primitive_type--primitive_type\n1008_uint-132-132", node_type=primitive_type, shape=box, style="rounded, filled"];
1009 [code=amount, color=white, fillcolor="#BFE6D3", label="131_ amount--identifier\n1009_amount-132-132", node_type=identifier, shape=box, style="rounded, filled"];
1010 [code="address owner_txorigin39", color=white, fillcolor="#BFE6D3", label="131_ parameter--parameter\n1010_address owner_txorigin39-132-132", node_type=parameter, shape=box, style="rounded, filled"];
1011 [code=address, color=white, fillcolor="#BFE6D3", label="131_ type_name--type_name\n1011_address-132-132", node_type=type_name, shape=box, style="rounded, filled"];
1012 [code=address, color=white, fillcolor="#BFE6D3", label="131_ primitive_type--primitive_type\n1012_address-132-132", node_type=primitive_type, shape=box, style="rounded, filled"];
1013 [code=owner_txorigin39, color=white, fillcolor="#BFE6D3", label="131_ owner_txorigin39--identifier\n1013_owner_txorigin39-132-132", node_type=identifier, shape=box, style="rounded, filled"];
1014 [code=public, color=white, fillcolor="#BFE6D3", label="131_ visibility--visibility\n1014_public-132-132", node_type=visibility, shape=box, style="rounded, filled"];
1015 [code="{\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="131_ function_body--function_body\n1015_{\n  require(tx.origin == owner_txorigin39);\n  to.call.value(amount);\n}-132-135", node_type=function_body, shape=box, style="rounded, filled"];
1016 [code="require(tx.origin == owner_txorigin39);", color=white, fillcolor="#BFE6D3", label="132_ require(tx.origin == owner_txorigin39);\n1016-expression_statement-133-133", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1017 [code="require(tx.origin == owner_txorigin39)", color=white, fillcolor="#BFE6D3", label="132_ call_expression--call_expression\n1017_require(tx.origin == owner_txorigin39)-133-133", node_type=call_expression, shape=box, style="rounded, filled"];
1018 [code=require, color=white, fillcolor="#BFE6D3", label="132_ require--identifier\n1018_require-133-133", node_type=identifier, shape=box, style="rounded, filled"];
1019 [code="tx.origin == owner_txorigin39", color=white, fillcolor="#BFE6D3", label="132_ call_argument--call_argument\n1019_tx.origin == owner_txorigin39-133-133", node_type=call_argument, shape=box, style="rounded, filled"];
1020 [code="tx.origin == owner_txorigin39", color=white, fillcolor="#BFE6D3", label="132_ binary_expression--binary_expression\n1020_tx.origin == owner_txorigin39-133-133", node_type=binary_expression, shape=box, style="rounded, filled"];
1021 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="132_ member_expression--member_expression\n1021_tx.origin-133-133", node_type=member_expression, shape=box, style="rounded, filled"];
1022 [code=tx, color=white, fillcolor="#BFE6D3", label="132_ tx--identifier\n1022_tx-133-133", node_type=identifier, shape=box, style="rounded, filled"];
1023 [code=origin, color=white, fillcolor="#BFE6D3", label="132_ origin--identifier\n1023_origin-133-133", node_type=identifier, shape=box, style="rounded, filled"];
1024 [code=owner_txorigin39, color=white, fillcolor="#BFE6D3", label="132_ owner_txorigin39--identifier\n1024_owner_txorigin39-133-133", node_type=identifier, shape=box, style="rounded, filled"];
1025 [code="to.call.value(amount);", color=white, fillcolor="#BFE6D3", label="133_ to.call.value(amount);\n1025-expression_statement-134-134", method="transferTo_txorigin39(address to,uint amount,address owner_txorigin39)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1026 [code="to.call.value(amount)", color=white, fillcolor="#BFE6D3", label="133_ call_expression--call_expression\n1026_to.call.value(amount)-134-134", node_type=call_expression, shape=box, style="rounded, filled"];
1027 [code="to.call.value", color=white, fillcolor="#BFE6D3", label="133_ member_expression--member_expression\n1027_to.call.value-134-134", node_type=member_expression, shape=box, style="rounded, filled"];
1028 [code="to.call", color=white, fillcolor="#BFE6D3", label="133_ member_expression--member_expression\n1028_to.call-134-134", node_type=member_expression, shape=box, style="rounded, filled"];
1029 [code=to, color=white, fillcolor="#BFE6D3", label="133_ to--identifier\n1029_to-134-134", node_type=identifier, shape=box, style="rounded, filled"];
1030 [code=call, color=white, fillcolor="#BFE6D3", label="133_ call--identifier\n1030_call-134-134", node_type=identifier, shape=box, style="rounded, filled"];
1031 [code=value, color=white, fillcolor="#BFE6D3", label="133_ value--identifier\n1031_value-134-134", node_type=identifier, shape=box, style="rounded, filled"];
1032 [code=amount, color=white, fillcolor="#BFE6D3", label="133_ call_argument--call_argument\n1032_amount-134-134", node_type=call_argument, shape=box, style="rounded, filled"];
1033 [code=amount, color=white, fillcolor="#BFE6D3", label="133_ amount--identifier\n1033_amount-134-134", node_type=identifier, shape=box, style="rounded, filled"];
1034 [code="function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }", color=white, fillcolor="#BFE6D3", label="135_ function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n1034-function_definition-136-141", method="_approve(address owner,address spender,uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1035 [code=_approve, color=white, fillcolor="#BFE6D3", label="135_ _approve--identifier\n1035__approve-136-136", node_type=identifier, shape=box, style="rounded, filled"];
1036 [code="address owner", color=white, fillcolor="#BFE6D3", label="135_ parameter--parameter\n1036_address owner-136-136", node_type=parameter, shape=box, style="rounded, filled"];
1037 [code=address, color=white, fillcolor="#BFE6D3", label="135_ type_name--type_name\n1037_address-136-136", node_type=type_name, shape=box, style="rounded, filled"];
1038 [code=address, color=white, fillcolor="#BFE6D3", label="135_ primitive_type--primitive_type\n1038_address-136-136", node_type=primitive_type, shape=box, style="rounded, filled"];
1039 [code=owner, color=white, fillcolor="#BFE6D3", label="135_ owner--identifier\n1039_owner-136-136", node_type=identifier, shape=box, style="rounded, filled"];
1040 [code="address spender", color=white, fillcolor="#BFE6D3", label="135_ parameter--parameter\n1040_address spender-136-136", node_type=parameter, shape=box, style="rounded, filled"];
1041 [code=address, color=white, fillcolor="#BFE6D3", label="135_ type_name--type_name\n1041_address-136-136", node_type=type_name, shape=box, style="rounded, filled"];
1042 [code=address, color=white, fillcolor="#BFE6D3", label="135_ primitive_type--primitive_type\n1042_address-136-136", node_type=primitive_type, shape=box, style="rounded, filled"];
1043 [code=spender, color=white, fillcolor="#BFE6D3", label="135_ spender--identifier\n1043_spender-136-136", node_type=identifier, shape=box, style="rounded, filled"];
1044 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="135_ parameter--parameter\n1044_uint256 value-136-136", node_type=parameter, shape=box, style="rounded, filled"];
1045 [code=uint256, color=white, fillcolor="#BFE6D3", label="135_ type_name--type_name\n1045_uint256-136-136", node_type=type_name, shape=box, style="rounded, filled"];
1046 [code=uint256, color=white, fillcolor="#BFE6D3", label="135_ primitive_type--primitive_type\n1046_uint256-136-136", node_type=primitive_type, shape=box, style="rounded, filled"];
1047 [code=value, color=white, fillcolor="#BFE6D3", label="135_ value--identifier\n1047_value-136-136", node_type=identifier, shape=box, style="rounded, filled"];
1048 [code=internal, color=white, fillcolor="#BFE6D3", label="135_ visibility--visibility\n1048_internal-136-136", node_type=visibility, shape=box, style="rounded, filled"];
1049 [code="{\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }", color=white, fillcolor="#BFE6D3", label="135_ function_body--function_body\n1049_{\n        require(spender != address(0));\n        require(owner != address(0));\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }-136-141", node_type=function_body, shape=box, style="rounded, filled"];
1050 [code="require(spender != address(0));", color=white, fillcolor="#BFE6D3", label="136_ require(spender != address(0));\n1050-expression_statement-137-137", method="_approve(address owner,address spender,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1051 [code="require(spender != address(0))", color=white, fillcolor="#BFE6D3", label="136_ call_expression--call_expression\n1051_require(spender != address(0))-137-137", node_type=call_expression, shape=box, style="rounded, filled"];
1052 [code=require, color=white, fillcolor="#BFE6D3", label="136_ require--identifier\n1052_require-137-137", node_type=identifier, shape=box, style="rounded, filled"];
1053 [code="spender != address(0)", color=white, fillcolor="#BFE6D3", label="136_ call_argument--call_argument\n1053_spender != address(0)-137-137", node_type=call_argument, shape=box, style="rounded, filled"];
1054 [code="spender != address(0)", color=white, fillcolor="#BFE6D3", label="136_ binary_expression--binary_expression\n1054_spender != address(0)-137-137", node_type=binary_expression, shape=box, style="rounded, filled"];
1055 [code=spender, color=white, fillcolor="#BFE6D3", label="136_ spender--identifier\n1055_spender-137-137", node_type=identifier, shape=box, style="rounded, filled"];
1056 [code="address(0)", color=white, fillcolor="#BFE6D3", label="136_ type_cast_expression--type_cast_expression\n1056_address(0)-137-137", node_type=type_cast_expression, shape=box, style="rounded, filled"];
1057 [code=address, color=white, fillcolor="#BFE6D3", label="136_ primitive_type--primitive_type\n1057_address-137-137", node_type=primitive_type, shape=box, style="rounded, filled"];
1058 [code=0, color=white, fillcolor="#BFE6D3", label="136_ 0--number_literal\n1058_0-137-137", node_type=number_literal, shape=box, style="rounded, filled"];
1059 [code="require(owner != address(0));", color=white, fillcolor="#BFE6D3", label="137_ require(owner != address(0));\n1059-expression_statement-138-138", method="_approve(address owner,address spender,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1060 [code="require(owner != address(0))", color=white, fillcolor="#BFE6D3", label="137_ call_expression--call_expression\n1060_require(owner != address(0))-138-138", node_type=call_expression, shape=box, style="rounded, filled"];
1061 [code=require, color=white, fillcolor="#BFE6D3", label="137_ require--identifier\n1061_require-138-138", node_type=identifier, shape=box, style="rounded, filled"];
1062 [code="owner != address(0)", color=white, fillcolor="#BFE6D3", label="137_ call_argument--call_argument\n1062_owner != address(0)-138-138", node_type=call_argument, shape=box, style="rounded, filled"];
1063 [code="owner != address(0)", color=white, fillcolor="#BFE6D3", label="137_ binary_expression--binary_expression\n1063_owner != address(0)-138-138", node_type=binary_expression, shape=box, style="rounded, filled"];
1064 [code=owner, color=white, fillcolor="#BFE6D3", label="137_ owner--identifier\n1064_owner-138-138", node_type=identifier, shape=box, style="rounded, filled"];
1065 [code="address(0)", color=white, fillcolor="#BFE6D3", label="137_ type_cast_expression--type_cast_expression\n1065_address(0)-138-138", node_type=type_cast_expression, shape=box, style="rounded, filled"];
1066 [code=address, color=white, fillcolor="#BFE6D3", label="137_ primitive_type--primitive_type\n1066_address-138-138", node_type=primitive_type, shape=box, style="rounded, filled"];
1067 [code=0, color=white, fillcolor="#BFE6D3", label="137_ 0--number_literal\n1067_0-138-138", node_type=number_literal, shape=box, style="rounded, filled"];
1068 [code="_allowed[owner][spender] = value;", color=white, fillcolor="#BFE6D3", label="138_ _allowed[owner][spender] = value;\n1068-expression_statement-139-139", method="_approve(address owner,address spender,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1069 [code="_allowed[owner][spender] = value", color=white, fillcolor="#BFE6D3", label="138_ assignment_expression--assignment_expression\n1069__allowed[owner][spender] = value-139-139", node_type=assignment_expression, shape=box, style="rounded, filled"];
1070 [code="_allowed[owner][spender]", color=white, fillcolor="#BFE6D3", label="138_ array_access--array_access\n1070__allowed[owner][spender]-139-139", node_type=array_access, shape=box, style="rounded, filled"];
1071 [code="_allowed[owner]", color=white, fillcolor="#BFE6D3", label="138_ array_access--array_access\n1071__allowed[owner]-139-139", node_type=array_access, shape=box, style="rounded, filled"];
1072 [code=_allowed, color=white, fillcolor="#BFE6D3", label="138_ _allowed--identifier\n1072__allowed-139-139", node_type=identifier, shape=box, style="rounded, filled"];
1073 [code=owner, color=white, fillcolor="#BFE6D3", label="138_ owner--identifier\n1073_owner-139-139", node_type=identifier, shape=box, style="rounded, filled"];
1074 [code=spender, color=white, fillcolor="#BFE6D3", label="138_ spender--identifier\n1074_spender-139-139", node_type=identifier, shape=box, style="rounded, filled"];
1075 [code=value, color=white, fillcolor="#BFE6D3", label="138_ value--identifier\n1075_value-139-139", node_type=identifier, shape=box, style="rounded, filled"];
1076 [code="emit Approval(owner, spender, value);", color=white, fillcolor="#BFE6D3", label="139_ emit_statement--emit_statement\n1076_emit Approval(owner, spender, value);-140-140", node_type=emit_statement, shape=box, style="rounded, filled"];
1077 [code=Approval, color=white, fillcolor="#BFE6D3", label="139_ Approval--identifier\n1077_Approval-140-140", node_type=identifier, shape=box, style="rounded, filled"];
1078 [code=owner, color=white, fillcolor="#BFE6D3", label="139_ call_argument--call_argument\n1078_owner-140-140", node_type=call_argument, shape=box, style="rounded, filled"];
1079 [code=owner, color=white, fillcolor="#BFE6D3", label="139_ owner--identifier\n1079_owner-140-140", node_type=identifier, shape=box, style="rounded, filled"];
1080 [code=spender, color=white, fillcolor="#BFE6D3", label="139_ call_argument--call_argument\n1080_spender-140-140", node_type=call_argument, shape=box, style="rounded, filled"];
1081 [code=spender, color=white, fillcolor="#BFE6D3", label="139_ spender--identifier\n1081_spender-140-140", node_type=identifier, shape=box, style="rounded, filled"];
1082 [code=value, color=white, fillcolor="#BFE6D3", label="139_ call_argument--call_argument\n1082_value-140-140", node_type=call_argument, shape=box, style="rounded, filled"];
1083 [code=value, color=white, fillcolor="#BFE6D3", label="139_ value--identifier\n1083_value-140-140", node_type=identifier, shape=box, style="rounded, filled"];
1084 [code="function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }", color=white, fillcolor="#BFE6D3", label="141_ function bug_txorigin36(  address owner_txorigin36) public{\n        require(tx.origin == owner_txorigin36);\n    }\n1084-function_definition-142-144", method="bug_txorigin36(address owner_txorigin36)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1085 [code=bug_txorigin36, color=white, fillcolor="#BFE6D3", label="141_ bug_txorigin36--identifier\n1085_bug_txorigin36-142-142", node_type=identifier, shape=box, style="rounded, filled"];
1086 [code="address owner_txorigin36", color=white, fillcolor="#BFE6D3", label="141_ parameter--parameter\n1086_address owner_txorigin36-142-142", node_type=parameter, shape=box, style="rounded, filled"];
1087 [code=address, color=white, fillcolor="#BFE6D3", label="141_ type_name--type_name\n1087_address-142-142", node_type=type_name, shape=box, style="rounded, filled"];
1088 [code=address, color=white, fillcolor="#BFE6D3", label="141_ primitive_type--primitive_type\n1088_address-142-142", node_type=primitive_type, shape=box, style="rounded, filled"];
1089 [code=owner_txorigin36, color=white, fillcolor="#BFE6D3", label="141_ owner_txorigin36--identifier\n1089_owner_txorigin36-142-142", node_type=identifier, shape=box, style="rounded, filled"];
1090 [code=public, color=white, fillcolor="#BFE6D3", label="141_ visibility--visibility\n1090_public-142-142", node_type=visibility, shape=box, style="rounded, filled"];
1091 [code="{\n        require(tx.origin == owner_txorigin36);\n    }", color=white, fillcolor="#BFE6D3", label="141_ function_body--function_body\n1091_{\n        require(tx.origin == owner_txorigin36);\n    }-142-144", node_type=function_body, shape=box, style="rounded, filled"];
1092 [code="require(tx.origin == owner_txorigin36);", color=white, fillcolor="#BFE6D3", label="142_ require(tx.origin == owner_txorigin36);\n1092-expression_statement-143-143", method="bug_txorigin36(address owner_txorigin36)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1093 [code="require(tx.origin == owner_txorigin36)", color=white, fillcolor="#BFE6D3", label="142_ call_expression--call_expression\n1093_require(tx.origin == owner_txorigin36)-143-143", node_type=call_expression, shape=box, style="rounded, filled"];
1094 [code=require, color=white, fillcolor="#BFE6D3", label="142_ require--identifier\n1094_require-143-143", node_type=identifier, shape=box, style="rounded, filled"];
1095 [code="tx.origin == owner_txorigin36", color=white, fillcolor="#BFE6D3", label="142_ call_argument--call_argument\n1095_tx.origin == owner_txorigin36-143-143", node_type=call_argument, shape=box, style="rounded, filled"];
1096 [code="tx.origin == owner_txorigin36", color=white, fillcolor="#BFE6D3", label="142_ binary_expression--binary_expression\n1096_tx.origin == owner_txorigin36-143-143", node_type=binary_expression, shape=box, style="rounded, filled"];
1097 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="142_ member_expression--member_expression\n1097_tx.origin-143-143", node_type=member_expression, shape=box, style="rounded, filled"];
1098 [code=tx, color=white, fillcolor="#BFE6D3", label="142_ tx--identifier\n1098_tx-143-143", node_type=identifier, shape=box, style="rounded, filled"];
1099 [code=origin, color=white, fillcolor="#BFE6D3", label="142_ origin--identifier\n1099_origin-143-143", node_type=identifier, shape=box, style="rounded, filled"];
1100 [code=owner_txorigin36, color=white, fillcolor="#BFE6D3", label="142_ owner_txorigin36--identifier\n1100_owner_txorigin36-143-143", node_type=identifier, shape=box, style="rounded, filled"];
1101 [code="function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }", color=white, fillcolor="#BFE6D3", label="144_ function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n1101-function_definition-145-150", method="_burn(address account,uint256 value)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1102 [code=_burn, color=white, fillcolor="#BFE6D3", label="144_ _burn--identifier\n1102__burn-145-145", node_type=identifier, shape=box, style="rounded, filled"];
1103 [code="address account", color=white, fillcolor="#BFE6D3", label="144_ parameter--parameter\n1103_address account-145-145", node_type=parameter, shape=box, style="rounded, filled"];
1104 [code=address, color=white, fillcolor="#BFE6D3", label="144_ type_name--type_name\n1104_address-145-145", node_type=type_name, shape=box, style="rounded, filled"];
1105 [code=address, color=white, fillcolor="#BFE6D3", label="144_ primitive_type--primitive_type\n1105_address-145-145", node_type=primitive_type, shape=box, style="rounded, filled"];
1106 [code=account, color=white, fillcolor="#BFE6D3", label="144_ account--identifier\n1106_account-145-145", node_type=identifier, shape=box, style="rounded, filled"];
1107 [code="uint256 value", color=white, fillcolor="#BFE6D3", label="144_ parameter--parameter\n1107_uint256 value-145-145", node_type=parameter, shape=box, style="rounded, filled"];
1108 [code=uint256, color=white, fillcolor="#BFE6D3", label="144_ type_name--type_name\n1108_uint256-145-145", node_type=type_name, shape=box, style="rounded, filled"];
1109 [code=uint256, color=white, fillcolor="#BFE6D3", label="144_ primitive_type--primitive_type\n1109_uint256-145-145", node_type=primitive_type, shape=box, style="rounded, filled"];
1110 [code=value, color=white, fillcolor="#BFE6D3", label="144_ value--identifier\n1110_value-145-145", node_type=identifier, shape=box, style="rounded, filled"];
1111 [code=internal, color=white, fillcolor="#BFE6D3", label="144_ visibility--visibility\n1111_internal-145-145", node_type=visibility, shape=box, style="rounded, filled"];
1112 [code="{\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }", color=white, fillcolor="#BFE6D3", label="144_ function_body--function_body\n1112_{\n        require(account != address(0));\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }-145-150", node_type=function_body, shape=box, style="rounded, filled"];
1113 [code="require(account != address(0));", color=white, fillcolor="#BFE6D3", label="145_ require(account != address(0));\n1113-expression_statement-146-146", method="_burn(address account,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1114 [code="require(account != address(0))", color=white, fillcolor="#BFE6D3", label="145_ call_expression--call_expression\n1114_require(account != address(0))-146-146", node_type=call_expression, shape=box, style="rounded, filled"];
1115 [code=require, color=white, fillcolor="#BFE6D3", label="145_ require--identifier\n1115_require-146-146", node_type=identifier, shape=box, style="rounded, filled"];
1116 [code="account != address(0)", color=white, fillcolor="#BFE6D3", label="145_ call_argument--call_argument\n1116_account != address(0)-146-146", node_type=call_argument, shape=box, style="rounded, filled"];
1117 [code="account != address(0)", color=white, fillcolor="#BFE6D3", label="145_ binary_expression--binary_expression\n1117_account != address(0)-146-146", node_type=binary_expression, shape=box, style="rounded, filled"];
1118 [code=account, color=white, fillcolor="#BFE6D3", label="145_ account--identifier\n1118_account-146-146", node_type=identifier, shape=box, style="rounded, filled"];
1119 [code="address(0)", color=white, fillcolor="#BFE6D3", label="145_ type_cast_expression--type_cast_expression\n1119_address(0)-146-146", node_type=type_cast_expression, shape=box, style="rounded, filled"];
1120 [code=address, color=white, fillcolor="#BFE6D3", label="145_ primitive_type--primitive_type\n1120_address-146-146", node_type=primitive_type, shape=box, style="rounded, filled"];
1121 [code=0, color=white, fillcolor="#BFE6D3", label="145_ 0--number_literal\n1121_0-146-146", node_type=number_literal, shape=box, style="rounded, filled"];
1122 [code="_totalSupply = _totalSupply.sub(value);", color=white, fillcolor="#BFE6D3", label="146_ _totalSupply = _totalSupply.sub(value);\n1122-expression_statement-147-147", method="_burn(address account,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1123 [code="_totalSupply = _totalSupply.sub(value)", color=white, fillcolor="#BFE6D3", label="146_ assignment_expression--assignment_expression\n1123__totalSupply = _totalSupply.sub(value)-147-147", node_type=assignment_expression, shape=box, style="rounded, filled"];
1124 [code=_totalSupply, color=white, fillcolor="#BFE6D3", label="146_ _totalSupply--identifier\n1124__totalSupply-147-147", node_type=identifier, shape=box, style="rounded, filled"];
1125 [code="_totalSupply.sub(value)", color=white, fillcolor="#BFE6D3", label="146_ call_expression--call_expression\n1125__totalSupply.sub(value)-147-147", node_type=call_expression, shape=box, style="rounded, filled"];
1126 [code="_totalSupply.sub", color=white, fillcolor="#BFE6D3", label="146_ member_expression--member_expression\n1126__totalSupply.sub-147-147", node_type=member_expression, shape=box, style="rounded, filled"];
1127 [code=_totalSupply, color=white, fillcolor="#BFE6D3", label="146_ _totalSupply--identifier\n1127__totalSupply-147-147", node_type=identifier, shape=box, style="rounded, filled"];
1128 [code=sub, color=white, fillcolor="#BFE6D3", label="146_ sub--identifier\n1128_sub-147-147", node_type=identifier, shape=box, style="rounded, filled"];
1129 [code=value, color=white, fillcolor="#BFE6D3", label="146_ call_argument--call_argument\n1129_value-147-147", node_type=call_argument, shape=box, style="rounded, filled"];
1130 [code=value, color=white, fillcolor="#BFE6D3", label="146_ value--identifier\n1130_value-147-147", node_type=identifier, shape=box, style="rounded, filled"];
1131 [code="_balances[account] = _balances[account].sub(value);", color=white, fillcolor="#BFE6D3", label="147_ _balances[account] = _balances[account].sub(value);\n1131-expression_statement-148-148", method="_burn(address account,uint256 value)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1132 [code="_balances[account] = _balances[account].sub(value)", color=white, fillcolor="#BFE6D3", label="147_ assignment_expression--assignment_expression\n1132__balances[account] = _balances[account].sub(value)-148-148", node_type=assignment_expression, shape=box, style="rounded, filled"];
1133 [code="_balances[account]", color=white, fillcolor="#BFE6D3", label="147_ array_access--array_access\n1133__balances[account]-148-148", node_type=array_access, shape=box, style="rounded, filled"];
1134 [code=_balances, color=white, fillcolor="#BFE6D3", label="147_ _balances--identifier\n1134__balances-148-148", node_type=identifier, shape=box, style="rounded, filled"];
1135 [code=account, color=white, fillcolor="#BFE6D3", label="147_ account--identifier\n1135_account-148-148", node_type=identifier, shape=box, style="rounded, filled"];
1136 [code="_balances[account].sub(value)", color=white, fillcolor="#BFE6D3", label="147_ call_expression--call_expression\n1136__balances[account].sub(value)-148-148", node_type=call_expression, shape=box, style="rounded, filled"];
1137 [code="_balances[account].sub", color=white, fillcolor="#BFE6D3", label="147_ member_expression--member_expression\n1137__balances[account].sub-148-148", node_type=member_expression, shape=box, style="rounded, filled"];
1138 [code="_balances[account]", color=white, fillcolor="#BFE6D3", label="147_ array_access--array_access\n1138__balances[account]-148-148", node_type=array_access, shape=box, style="rounded, filled"];
1139 [code=_balances, color=white, fillcolor="#BFE6D3", label="147_ _balances--identifier\n1139__balances-148-148", node_type=identifier, shape=box, style="rounded, filled"];
1140 [code=account, color=white, fillcolor="#BFE6D3", label="147_ account--identifier\n1140_account-148-148", node_type=identifier, shape=box, style="rounded, filled"];
1141 [code=sub, color=white, fillcolor="#BFE6D3", label="147_ sub--identifier\n1141_sub-148-148", node_type=identifier, shape=box, style="rounded, filled"];
1142 [code=value, color=white, fillcolor="#BFE6D3", label="147_ call_argument--call_argument\n1142_value-148-148", node_type=call_argument, shape=box, style="rounded, filled"];
1143 [code=value, color=white, fillcolor="#BFE6D3", label="147_ value--identifier\n1143_value-148-148", node_type=identifier, shape=box, style="rounded, filled"];
1144 [code="emit Transfer(account, address(0), value);", color=white, fillcolor="#BFE6D3", label="148_ emit_statement--emit_statement\n1144_emit Transfer(account, address(0), value);-149-149", node_type=emit_statement, shape=box, style="rounded, filled"];
1145 [code=Transfer, color=white, fillcolor="#BFE6D3", label="148_ Transfer--identifier\n1145_Transfer-149-149", node_type=identifier, shape=box, style="rounded, filled"];
1146 [code=account, color=white, fillcolor="#BFE6D3", label="148_ call_argument--call_argument\n1146_account-149-149", node_type=call_argument, shape=box, style="rounded, filled"];
1147 [code=account, color=white, fillcolor="#BFE6D3", label="148_ account--identifier\n1147_account-149-149", node_type=identifier, shape=box, style="rounded, filled"];
1148 [code="address(0)", color=white, fillcolor="#BFE6D3", label="148_ call_argument--call_argument\n1148_address(0)-149-149", node_type=call_argument, shape=box, style="rounded, filled"];
1149 [code="address(0)", color=white, fillcolor="#BFE6D3", label="148_ type_cast_expression--type_cast_expression\n1149_address(0)-149-149", node_type=type_cast_expression, shape=box, style="rounded, filled"];
1150 [code=address, color=white, fillcolor="#BFE6D3", label="148_ primitive_type--primitive_type\n1150_address-149-149", node_type=primitive_type, shape=box, style="rounded, filled"];
1151 [code=0, color=white, fillcolor="#BFE6D3", label="148_ 0--number_literal\n1151_0-149-149", node_type=number_literal, shape=box, style="rounded, filled"];
1152 [code=value, color=white, fillcolor="#BFE6D3", label="148_ call_argument--call_argument\n1152_value-149-149", node_type=call_argument, shape=box, style="rounded, filled"];
1153 [code=value, color=white, fillcolor="#BFE6D3", label="148_ value--identifier\n1153_value-149-149", node_type=identifier, shape=box, style="rounded, filled"];
1154 [code="function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="150_ function transferTo_txorigin35(address to, uint amount,address owner_txorigin35) public {\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}\n1154-function_definition-151-154", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1155 [code=transferTo_txorigin35, color=white, fillcolor="#BFE6D3", label="150_ transferTo_txorigin35--identifier\n1155_transferTo_txorigin35-151-151", node_type=identifier, shape=box, style="rounded, filled"];
1156 [code="address to", color=white, fillcolor="#BFE6D3", label="150_ parameter--parameter\n1156_address to-151-151", node_type=parameter, shape=box, style="rounded, filled"];
1157 [code=address, color=white, fillcolor="#BFE6D3", label="150_ type_name--type_name\n1157_address-151-151", node_type=type_name, shape=box, style="rounded, filled"];
1158 [code=address, color=white, fillcolor="#BFE6D3", label="150_ primitive_type--primitive_type\n1158_address-151-151", node_type=primitive_type, shape=box, style="rounded, filled"];
1159 [code=to, color=white, fillcolor="#BFE6D3", label="150_ to--identifier\n1159_to-151-151", node_type=identifier, shape=box, style="rounded, filled"];
1160 [code="uint amount", color=white, fillcolor="#BFE6D3", label="150_ parameter--parameter\n1160_uint amount-151-151", node_type=parameter, shape=box, style="rounded, filled"];
1161 [code=uint, color=white, fillcolor="#BFE6D3", label="150_ type_name--type_name\n1161_uint-151-151", node_type=type_name, shape=box, style="rounded, filled"];
1162 [code=uint, color=white, fillcolor="#BFE6D3", label="150_ primitive_type--primitive_type\n1162_uint-151-151", node_type=primitive_type, shape=box, style="rounded, filled"];
1163 [code=amount, color=white, fillcolor="#BFE6D3", label="150_ amount--identifier\n1163_amount-151-151", node_type=identifier, shape=box, style="rounded, filled"];
1164 [code="address owner_txorigin35", color=white, fillcolor="#BFE6D3", label="150_ parameter--parameter\n1164_address owner_txorigin35-151-151", node_type=parameter, shape=box, style="rounded, filled"];
1165 [code=address, color=white, fillcolor="#BFE6D3", label="150_ type_name--type_name\n1165_address-151-151", node_type=type_name, shape=box, style="rounded, filled"];
1166 [code=address, color=white, fillcolor="#BFE6D3", label="150_ primitive_type--primitive_type\n1166_address-151-151", node_type=primitive_type, shape=box, style="rounded, filled"];
1167 [code=owner_txorigin35, color=white, fillcolor="#BFE6D3", label="150_ owner_txorigin35--identifier\n1167_owner_txorigin35-151-151", node_type=identifier, shape=box, style="rounded, filled"];
1168 [code=public, color=white, fillcolor="#BFE6D3", label="150_ visibility--visibility\n1168_public-151-151", node_type=visibility, shape=box, style="rounded, filled"];
1169 [code="{\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="150_ function_body--function_body\n1169_{\n  require(tx.origin == owner_txorigin35);\n  to.call.value(amount);\n}-151-154", node_type=function_body, shape=box, style="rounded, filled"];
1170 [code="require(tx.origin == owner_txorigin35);", color=white, fillcolor="#BFE6D3", label="151_ require(tx.origin == owner_txorigin35);\n1170-expression_statement-152-152", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1171 [code="require(tx.origin == owner_txorigin35)", color=white, fillcolor="#BFE6D3", label="151_ call_expression--call_expression\n1171_require(tx.origin == owner_txorigin35)-152-152", node_type=call_expression, shape=box, style="rounded, filled"];
1172 [code=require, color=white, fillcolor="#BFE6D3", label="151_ require--identifier\n1172_require-152-152", node_type=identifier, shape=box, style="rounded, filled"];
1173 [code="tx.origin == owner_txorigin35", color=white, fillcolor="#BFE6D3", label="151_ call_argument--call_argument\n1173_tx.origin == owner_txorigin35-152-152", node_type=call_argument, shape=box, style="rounded, filled"];
1174 [code="tx.origin == owner_txorigin35", color=white, fillcolor="#BFE6D3", label="151_ binary_expression--binary_expression\n1174_tx.origin == owner_txorigin35-152-152", node_type=binary_expression, shape=box, style="rounded, filled"];
1175 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="151_ member_expression--member_expression\n1175_tx.origin-152-152", node_type=member_expression, shape=box, style="rounded, filled"];
1176 [code=tx, color=white, fillcolor="#BFE6D3", label="151_ tx--identifier\n1176_tx-152-152", node_type=identifier, shape=box, style="rounded, filled"];
1177 [code=origin, color=white, fillcolor="#BFE6D3", label="151_ origin--identifier\n1177_origin-152-152", node_type=identifier, shape=box, style="rounded, filled"];
1178 [code=owner_txorigin35, color=white, fillcolor="#BFE6D3", label="151_ owner_txorigin35--identifier\n1178_owner_txorigin35-152-152", node_type=identifier, shape=box, style="rounded, filled"];
1179 [code="to.call.value(amount);", color=white, fillcolor="#BFE6D3", label="152_ to.call.value(amount);\n1179-expression_statement-153-153", method="transferTo_txorigin35(address to,uint amount,address owner_txorigin35)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1180 [code="to.call.value(amount)", color=white, fillcolor="#BFE6D3", label="152_ call_expression--call_expression\n1180_to.call.value(amount)-153-153", node_type=call_expression, shape=box, style="rounded, filled"];
1181 [code="to.call.value", color=white, fillcolor="#BFE6D3", label="152_ member_expression--member_expression\n1181_to.call.value-153-153", node_type=member_expression, shape=box, style="rounded, filled"];
1182 [code="to.call", color=white, fillcolor="#BFE6D3", label="152_ member_expression--member_expression\n1182_to.call-153-153", node_type=member_expression, shape=box, style="rounded, filled"];
1183 [code=to, color=white, fillcolor="#BFE6D3", label="152_ to--identifier\n1183_to-153-153", node_type=identifier, shape=box, style="rounded, filled"];
1184 [code=call, color=white, fillcolor="#BFE6D3", label="152_ call--identifier\n1184_call-153-153", node_type=identifier, shape=box, style="rounded, filled"];
1185 [code=value, color=white, fillcolor="#BFE6D3", label="152_ value--identifier\n1185_value-153-153", node_type=identifier, shape=box, style="rounded, filled"];
1186 [code=amount, color=white, fillcolor="#BFE6D3", label="152_ call_argument--call_argument\n1186_amount-153-153", node_type=call_argument, shape=box, style="rounded, filled"];
1187 [code=amount, color=white, fillcolor="#BFE6D3", label="152_ amount--identifier\n1187_amount-153-153", node_type=identifier, shape=box, style="rounded, filled"];
1188 [code="contract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n  function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n  uint8 private _decimals;\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\nfunction bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n    function name() public view returns (string memory) {\n        return _name;\n    }\nfunction sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\nfunction transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\nfunction transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n}", color=white, fillcolor="#BFE6D3", label="155_ contract_declaration--contract_declaration\n1188_contract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n  function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n  uint8 private _decimals;\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\nfunction bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n    function name() public view returns (string memory) {\n        return _name;\n    }\nfunction sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\nfunction transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\nfunction transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n}-156-193", node_type=contract_declaration, shape=box, style="rounded, filled"];
1189 [code=ERC20Detailed, color=white, fillcolor="#BFE6D3", label="155_ ERC20Detailed--identifier\n1189_ERC20Detailed-156-156", node_type=identifier, shape=box, style="rounded, filled"];
1190 [code=IERC20, color=white, fillcolor="#BFE6D3", label="155_ inheritance_specifier--inheritance_specifier\n1190_IERC20-156-156", node_type=inheritance_specifier, shape=box, style="rounded, filled"];
1191 [code=IERC20, color=white, fillcolor="#BFE6D3", label="155_ user_defined_type--user_defined_type\n1191_IERC20-156-156", node_type=user_defined_type, shape=box, style="rounded, filled"];
1192 [code=IERC20, color=white, fillcolor="#BFE6D3", label="155_ IERC20--identifier\n1192_IERC20-156-156", node_type=identifier, shape=box, style="rounded, filled"];
1193 [code="{\n    string private _name;\n    string private _symbol;\n  function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n  uint8 private _decimals;\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\nfunction bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n    function name() public view returns (string memory) {\n        return _name;\n    }\nfunction sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\nfunction transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\nfunction transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n}", color=white, fillcolor="#BFE6D3", label="155_ contract_body--contract_body\n1193_{\n    string private _name;\n    string private _symbol;\n  function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n  uint8 private _decimals;\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\nfunction bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n    function name() public view returns (string memory) {\n        return _name;\n    }\nfunction sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\nfunction transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\nfunction transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n}-156-193", node_type=contract_body, shape=box, style="rounded, filled"];
1194 [code="string private _name;", color=white, fillcolor="#BFE6D3", label="156_ string private _name;\n1194-new_variable-157-157", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
1195 [code=string, color=white, fillcolor="#BFE6D3", label="156_ type_name--type_name\n1195_string-157-157", node_type=type_name, shape=box, style="rounded, filled"];
1196 [code=string, color=white, fillcolor="#BFE6D3", label="156_ primitive_type--primitive_type\n1196_string-157-157", node_type=primitive_type, shape=box, style="rounded, filled"];
1197 [code=private, color=white, fillcolor="#BFE6D3", label="156_ visibility--visibility\n1197_private-157-157", node_type=visibility, shape=box, style="rounded, filled"];
1198 [code=_name, color=white, fillcolor="#BFE6D3", label="156_ _name--identifier\n1198__name-157-157", node_type=identifier, shape=box, style="rounded, filled"];
1199 [code="string private _symbol;", color=white, fillcolor="#BFE6D3", label="157_ string private _symbol;\n1199-new_variable-158-158", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
1200 [code=string, color=white, fillcolor="#BFE6D3", label="157_ type_name--type_name\n1200_string-158-158", node_type=type_name, shape=box, style="rounded, filled"];
1201 [code=string, color=white, fillcolor="#BFE6D3", label="157_ primitive_type--primitive_type\n1201_string-158-158", node_type=primitive_type, shape=box, style="rounded, filled"];
1202 [code=private, color=white, fillcolor="#BFE6D3", label="157_ visibility--visibility\n1202_private-158-158", node_type=visibility, shape=box, style="rounded, filled"];
1203 [code=_symbol, color=white, fillcolor="#BFE6D3", label="157_ _symbol--identifier\n1203__symbol-158-158", node_type=identifier, shape=box, style="rounded, filled"];
1204 [code="function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }", color=white, fillcolor="#BFE6D3", label="158_ function withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26) public {\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }\n1204-function_definition-159-162", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1205 [code=withdrawAll_txorigin26, color=white, fillcolor="#BFE6D3", label="158_ withdrawAll_txorigin26--identifier\n1205_withdrawAll_txorigin26-159-159", node_type=identifier, shape=box, style="rounded, filled"];
1206 [code="address payable _recipient", color=white, fillcolor="#BFE6D3", label="158_ parameter--parameter\n1206_address payable _recipient-159-159", node_type=parameter, shape=box, style="rounded, filled"];
1207 [code="address payable", color=white, fillcolor="#BFE6D3", label="158_ type_name--type_name\n1207_address payable-159-159", node_type=type_name, shape=box, style="rounded, filled"];
1208 [code="address payable", color=white, fillcolor="#BFE6D3", label="158_ primitive_type--primitive_type\n1208_address payable-159-159", node_type=primitive_type, shape=box, style="rounded, filled"];
1209 [code=_recipient, color=white, fillcolor="#BFE6D3", label="158_ _recipient--identifier\n1209__recipient-159-159", node_type=identifier, shape=box, style="rounded, filled"];
1210 [code="address owner_txorigin26", color=white, fillcolor="#BFE6D3", label="158_ parameter--parameter\n1210_address owner_txorigin26-159-159", node_type=parameter, shape=box, style="rounded, filled"];
1211 [code=address, color=white, fillcolor="#BFE6D3", label="158_ type_name--type_name\n1211_address-159-159", node_type=type_name, shape=box, style="rounded, filled"];
1212 [code=address, color=white, fillcolor="#BFE6D3", label="158_ primitive_type--primitive_type\n1212_address-159-159", node_type=primitive_type, shape=box, style="rounded, filled"];
1213 [code=owner_txorigin26, color=white, fillcolor="#BFE6D3", label="158_ owner_txorigin26--identifier\n1213_owner_txorigin26-159-159", node_type=identifier, shape=box, style="rounded, filled"];
1214 [code=public, color=white, fillcolor="#BFE6D3", label="158_ visibility--visibility\n1214_public-159-159", node_type=visibility, shape=box, style="rounded, filled"];
1215 [code="{\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }", color=white, fillcolor="#BFE6D3", label="158_ function_body--function_body\n1215_{\n        require(tx.origin == owner_txorigin26);\n        _recipient.transfer(address(this).balance);\n    }-159-162", node_type=function_body, shape=box, style="rounded, filled"];
1216 [code="require(tx.origin == owner_txorigin26);", color=white, fillcolor="#BFE6D3", label="159_ require(tx.origin == owner_txorigin26);\n1216-expression_statement-160-160", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1217 [code="require(tx.origin == owner_txorigin26)", color=white, fillcolor="#BFE6D3", label="159_ call_expression--call_expression\n1217_require(tx.origin == owner_txorigin26)-160-160", node_type=call_expression, shape=box, style="rounded, filled"];
1218 [code=require, color=white, fillcolor="#BFE6D3", label="159_ require--identifier\n1218_require-160-160", node_type=identifier, shape=box, style="rounded, filled"];
1219 [code="tx.origin == owner_txorigin26", color=white, fillcolor="#BFE6D3", label="159_ call_argument--call_argument\n1219_tx.origin == owner_txorigin26-160-160", node_type=call_argument, shape=box, style="rounded, filled"];
1220 [code="tx.origin == owner_txorigin26", color=white, fillcolor="#BFE6D3", label="159_ binary_expression--binary_expression\n1220_tx.origin == owner_txorigin26-160-160", node_type=binary_expression, shape=box, style="rounded, filled"];
1221 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="159_ member_expression--member_expression\n1221_tx.origin-160-160", node_type=member_expression, shape=box, style="rounded, filled"];
1222 [code=tx, color=white, fillcolor="#BFE6D3", label="159_ tx--identifier\n1222_tx-160-160", node_type=identifier, shape=box, style="rounded, filled"];
1223 [code=origin, color=white, fillcolor="#BFE6D3", label="159_ origin--identifier\n1223_origin-160-160", node_type=identifier, shape=box, style="rounded, filled"];
1224 [code=owner_txorigin26, color=white, fillcolor="#BFE6D3", label="159_ owner_txorigin26--identifier\n1224_owner_txorigin26-160-160", node_type=identifier, shape=box, style="rounded, filled"];
1225 [code="_recipient.transfer(address(this).balance);", color=white, fillcolor="#BFE6D3", label="160_ _recipient.transfer(address(this).balance);\n1225-expression_statement-161-161", method="withdrawAll_txorigin26(address payable _recipient,address owner_txorigin26)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1226 [code="_recipient.transfer(address(this).balance)", color=white, fillcolor="#BFE6D3", label="160_ call_expression--call_expression\n1226__recipient.transfer(address(this).balance)-161-161", node_type=call_expression, shape=box, style="rounded, filled"];
1227 [code="_recipient.transfer", color=white, fillcolor="#BFE6D3", label="160_ member_expression--member_expression\n1227__recipient.transfer-161-161", node_type=member_expression, shape=box, style="rounded, filled"];
1228 [code=_recipient, color=white, fillcolor="#BFE6D3", label="160_ _recipient--identifier\n1228__recipient-161-161", node_type=identifier, shape=box, style="rounded, filled"];
1229 [code=transfer, color=white, fillcolor="#BFE6D3", label="160_ transfer--identifier\n1229_transfer-161-161", node_type=identifier, shape=box, style="rounded, filled"];
1230 [code="address(this).balance", color=white, fillcolor="#BFE6D3", label="160_ call_argument--call_argument\n1230_address(this).balance-161-161", node_type=call_argument, shape=box, style="rounded, filled"];
1231 [code="address(this).balance", color=white, fillcolor="#BFE6D3", label="160_ member_expression--member_expression\n1231_address(this).balance-161-161", node_type=member_expression, shape=box, style="rounded, filled"];
1232 [code="address(this)", color=white, fillcolor="#BFE6D3", label="160_ type_cast_expression--type_cast_expression\n1232_address(this)-161-161", node_type=type_cast_expression, shape=box, style="rounded, filled"];
1233 [code=address, color=white, fillcolor="#BFE6D3", label="160_ primitive_type--primitive_type\n1233_address-161-161", node_type=primitive_type, shape=box, style="rounded, filled"];
1234 [code=this, color=white, fillcolor="#BFE6D3", label="160_ this--identifier\n1234_this-161-161", node_type=identifier, shape=box, style="rounded, filled"];
1235 [code=balance, color=white, fillcolor="#BFE6D3", label="160_ balance--identifier\n1235_balance-161-161", node_type=identifier, shape=box, style="rounded, filled"];
1236 [code="uint8 private _decimals;", color=white, fillcolor="#BFE6D3", label="162_ uint8 private _decimals;\n1236-new_variable-163-163", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
1237 [code=uint8, color=white, fillcolor="#BFE6D3", label="162_ type_name--type_name\n1237_uint8-163-163", node_type=type_name, shape=box, style="rounded, filled"];
1238 [code=uint8, color=white, fillcolor="#BFE6D3", label="162_ primitive_type--primitive_type\n1238_uint8-163-163", node_type=primitive_type, shape=box, style="rounded, filled"];
1239 [code=private, color=white, fillcolor="#BFE6D3", label="162_ visibility--visibility\n1239_private-163-163", node_type=visibility, shape=box, style="rounded, filled"];
1240 [code=_decimals, color=white, fillcolor="#BFE6D3", label="162_ _decimals--identifier\n1240__decimals-163-163", node_type=identifier, shape=box, style="rounded, filled"];
1241 [code="constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }", color=white, fillcolor="#BFE6D3", label="163_ constructor_definition--constructor_definition\n1241_constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }-164-168", node_type=constructor_definition, shape=box, style="rounded, filled"];
1242 [code="string memory name", color=white, fillcolor="#BFE6D3", label="163_ parameter--parameter\n1242_string memory name-164-164", node_type=parameter, shape=box, style="rounded, filled"];
1243 [code=string, color=white, fillcolor="#BFE6D3", label="163_ type_name--type_name\n1243_string-164-164", node_type=type_name, shape=box, style="rounded, filled"];
1244 [code=string, color=white, fillcolor="#BFE6D3", label="163_ primitive_type--primitive_type\n1244_string-164-164", node_type=primitive_type, shape=box, style="rounded, filled"];
1245 [code=name, color=white, fillcolor="#BFE6D3", label="163_ name--identifier\n1245_name-164-164", node_type=identifier, shape=box, style="rounded, filled"];
1246 [code="string memory symbol", color=white, fillcolor="#BFE6D3", label="163_ parameter--parameter\n1246_string memory symbol-164-164", node_type=parameter, shape=box, style="rounded, filled"];
1247 [code=string, color=white, fillcolor="#BFE6D3", label="163_ type_name--type_name\n1247_string-164-164", node_type=type_name, shape=box, style="rounded, filled"];
1248 [code=string, color=white, fillcolor="#BFE6D3", label="163_ primitive_type--primitive_type\n1248_string-164-164", node_type=primitive_type, shape=box, style="rounded, filled"];
1249 [code=symbol, color=white, fillcolor="#BFE6D3", label="163_ symbol--identifier\n1249_symbol-164-164", node_type=identifier, shape=box, style="rounded, filled"];
1250 [code="uint8 decimals", color=white, fillcolor="#BFE6D3", label="163_ parameter--parameter\n1250_uint8 decimals-164-164", node_type=parameter, shape=box, style="rounded, filled"];
1251 [code=uint8, color=white, fillcolor="#BFE6D3", label="163_ type_name--type_name\n1251_uint8-164-164", node_type=type_name, shape=box, style="rounded, filled"];
1252 [code=uint8, color=white, fillcolor="#BFE6D3", label="163_ primitive_type--primitive_type\n1252_uint8-164-164", node_type=primitive_type, shape=box, style="rounded, filled"];
1253 [code=decimals, color=white, fillcolor="#BFE6D3", label="163_ decimals--identifier\n1253_decimals-164-164", node_type=identifier, shape=box, style="rounded, filled"];
1254 [code="{\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }", color=white, fillcolor="#BFE6D3", label="163_ function_body--function_body\n1254_{\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }-164-168", node_type=function_body, shape=box, style="rounded, filled"];
1255 [code="_name = name;", color=white, fillcolor="#BFE6D3", label="164_ _name = name;\n1255-expression_statement-165-165", method="", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1256 [code="_name = name", color=white, fillcolor="#BFE6D3", label="164_ assignment_expression--assignment_expression\n1256__name = name-165-165", node_type=assignment_expression, shape=box, style="rounded, filled"];
1257 [code=_name, color=white, fillcolor="#BFE6D3", label="164_ _name--identifier\n1257__name-165-165", node_type=identifier, shape=box, style="rounded, filled"];
1258 [code=name, color=white, fillcolor="#BFE6D3", label="164_ name--identifier\n1258_name-165-165", node_type=identifier, shape=box, style="rounded, filled"];
1259 [code="_symbol = symbol;", color=white, fillcolor="#BFE6D3", label="165_ _symbol = symbol;\n1259-expression_statement-166-166", method="", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1260 [code="_symbol = symbol", color=white, fillcolor="#BFE6D3", label="165_ assignment_expression--assignment_expression\n1260__symbol = symbol-166-166", node_type=assignment_expression, shape=box, style="rounded, filled"];
1261 [code=_symbol, color=white, fillcolor="#BFE6D3", label="165_ _symbol--identifier\n1261__symbol-166-166", node_type=identifier, shape=box, style="rounded, filled"];
1262 [code=symbol, color=white, fillcolor="#BFE6D3", label="165_ symbol--identifier\n1262_symbol-166-166", node_type=identifier, shape=box, style="rounded, filled"];
1263 [code="_decimals = decimals;", color=white, fillcolor="#BFE6D3", label="166_ _decimals = decimals;\n1263-expression_statement-167-167", method="", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1264 [code="_decimals = decimals", color=white, fillcolor="#BFE6D3", label="166_ assignment_expression--assignment_expression\n1264__decimals = decimals-167-167", node_type=assignment_expression, shape=box, style="rounded, filled"];
1265 [code=_decimals, color=white, fillcolor="#BFE6D3", label="166_ _decimals--identifier\n1265__decimals-167-167", node_type=identifier, shape=box, style="rounded, filled"];
1266 [code=decimals, color=white, fillcolor="#BFE6D3", label="166_ decimals--identifier\n1266_decimals-167-167", node_type=identifier, shape=box, style="rounded, filled"];
1267 [code="function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }", color=white, fillcolor="#BFE6D3", label="168_ function bug_txorigin40(address owner_txorigin40) public{\n        require(tx.origin == owner_txorigin40);\n    }\n1267-function_definition-169-171", method="bug_txorigin40(address owner_txorigin40)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1268 [code=bug_txorigin40, color=white, fillcolor="#BFE6D3", label="168_ bug_txorigin40--identifier\n1268_bug_txorigin40-169-169", node_type=identifier, shape=box, style="rounded, filled"];
1269 [code="address owner_txorigin40", color=white, fillcolor="#BFE6D3", label="168_ parameter--parameter\n1269_address owner_txorigin40-169-169", node_type=parameter, shape=box, style="rounded, filled"];
1270 [code=address, color=white, fillcolor="#BFE6D3", label="168_ type_name--type_name\n1270_address-169-169", node_type=type_name, shape=box, style="rounded, filled"];
1271 [code=address, color=white, fillcolor="#BFE6D3", label="168_ primitive_type--primitive_type\n1271_address-169-169", node_type=primitive_type, shape=box, style="rounded, filled"];
1272 [code=owner_txorigin40, color=white, fillcolor="#BFE6D3", label="168_ owner_txorigin40--identifier\n1272_owner_txorigin40-169-169", node_type=identifier, shape=box, style="rounded, filled"];
1273 [code=public, color=white, fillcolor="#BFE6D3", label="168_ visibility--visibility\n1273_public-169-169", node_type=visibility, shape=box, style="rounded, filled"];
1274 [code="{\n        require(tx.origin == owner_txorigin40);\n    }", color=white, fillcolor="#BFE6D3", label="168_ function_body--function_body\n1274_{\n        require(tx.origin == owner_txorigin40);\n    }-169-171", node_type=function_body, shape=box, style="rounded, filled"];
1275 [code="require(tx.origin == owner_txorigin40);", color=white, fillcolor="#BFE6D3", label="169_ require(tx.origin == owner_txorigin40);\n1275-expression_statement-170-170", method="bug_txorigin40(address owner_txorigin40)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1276 [code="require(tx.origin == owner_txorigin40)", color=white, fillcolor="#BFE6D3", label="169_ call_expression--call_expression\n1276_require(tx.origin == owner_txorigin40)-170-170", node_type=call_expression, shape=box, style="rounded, filled"];
1277 [code=require, color=white, fillcolor="#BFE6D3", label="169_ require--identifier\n1277_require-170-170", node_type=identifier, shape=box, style="rounded, filled"];
1278 [code="tx.origin == owner_txorigin40", color=white, fillcolor="#BFE6D3", label="169_ call_argument--call_argument\n1278_tx.origin == owner_txorigin40-170-170", node_type=call_argument, shape=box, style="rounded, filled"];
1279 [code="tx.origin == owner_txorigin40", color=white, fillcolor="#BFE6D3", label="169_ binary_expression--binary_expression\n1279_tx.origin == owner_txorigin40-170-170", node_type=binary_expression, shape=box, style="rounded, filled"];
1280 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="169_ member_expression--member_expression\n1280_tx.origin-170-170", node_type=member_expression, shape=box, style="rounded, filled"];
1281 [code=tx, color=white, fillcolor="#BFE6D3", label="169_ tx--identifier\n1281_tx-170-170", node_type=identifier, shape=box, style="rounded, filled"];
1282 [code=origin, color=white, fillcolor="#BFE6D3", label="169_ origin--identifier\n1282_origin-170-170", node_type=identifier, shape=box, style="rounded, filled"];
1283 [code=owner_txorigin40, color=white, fillcolor="#BFE6D3", label="169_ owner_txorigin40--identifier\n1283_owner_txorigin40-170-170", node_type=identifier, shape=box, style="rounded, filled"];
1284 [code="function name() public view returns (string memory) {\n        return _name;\n    }", color=white, fillcolor="#BFE6D3", label="171_ function name() public view returns (string memory) {\n        return _name;\n    }\n1284-function_definition-172-174", method="name()", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1285 [code=name, color=white, fillcolor="#BFE6D3", label="171_ name--identifier\n1285_name-172-172", node_type=identifier, shape=box, style="rounded, filled"];
1286 [code=public, color=white, fillcolor="#BFE6D3", label="171_ visibility--visibility\n1286_public-172-172", node_type=visibility, shape=box, style="rounded, filled"];
1287 [code=view, color=white, fillcolor="#BFE6D3", label="171_ state_mutability--state_mutability\n1287_view-172-172", node_type=state_mutability, shape=box, style="rounded, filled"];
1288 [code="returns (string memory)", color=white, fillcolor="#BFE6D3", label="171_ return_type_definition--return_type_definition\n1288_returns (string memory)-172-172", node_type=return_type_definition, shape=box, style="rounded, filled"];
1289 [code="string memory", color=white, fillcolor="#BFE6D3", label="171_ parameter--parameter\n1289_string memory-172-172", node_type=parameter, shape=box, style="rounded, filled"];
1290 [code=string, color=white, fillcolor="#BFE6D3", label="171_ type_name--type_name\n1290_string-172-172", node_type=type_name, shape=box, style="rounded, filled"];
1291 [code=string, color=white, fillcolor="#BFE6D3", label="171_ primitive_type--primitive_type\n1291_string-172-172", node_type=primitive_type, shape=box, style="rounded, filled"];
1292 [code="{\n        return _name;\n    }", color=white, fillcolor="#BFE6D3", label="171_ function_body--function_body\n1292_{\n        return _name;\n    }-172-174", node_type=function_body, shape=box, style="rounded, filled"];
1293 [code="return _name;", color=white, fillcolor="#BFE6D3", label="172_ return _name;\n1293-return-173-173", method="name()", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
1294 [code=_name, color=white, fillcolor="#BFE6D3", label="172_ _name--identifier\n1294__name-173-173", node_type=identifier, shape=box, style="rounded, filled"];
1295 [code="function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}", color=white, fillcolor="#BFE6D3", label="174_ function sendto_txorigin33(address payable receiver, uint amount,address owner_txorigin33) public {\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}\n1295-function_definition-175-178", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1296 [code=sendto_txorigin33, color=white, fillcolor="#BFE6D3", label="174_ sendto_txorigin33--identifier\n1296_sendto_txorigin33-175-175", node_type=identifier, shape=box, style="rounded, filled"];
1297 [code="address payable receiver", color=white, fillcolor="#BFE6D3", label="174_ parameter--parameter\n1297_address payable receiver-175-175", node_type=parameter, shape=box, style="rounded, filled"];
1298 [code="address payable", color=white, fillcolor="#BFE6D3", label="174_ type_name--type_name\n1298_address payable-175-175", node_type=type_name, shape=box, style="rounded, filled"];
1299 [code="address payable", color=white, fillcolor="#BFE6D3", label="174_ primitive_type--primitive_type\n1299_address payable-175-175", node_type=primitive_type, shape=box, style="rounded, filled"];
1300 [code=receiver, color=white, fillcolor="#BFE6D3", label="174_ receiver--identifier\n1300_receiver-175-175", node_type=identifier, shape=box, style="rounded, filled"];
1301 [code="uint amount", color=white, fillcolor="#BFE6D3", label="174_ parameter--parameter\n1301_uint amount-175-175", node_type=parameter, shape=box, style="rounded, filled"];
1302 [code=uint, color=white, fillcolor="#BFE6D3", label="174_ type_name--type_name\n1302_uint-175-175", node_type=type_name, shape=box, style="rounded, filled"];
1303 [code=uint, color=white, fillcolor="#BFE6D3", label="174_ primitive_type--primitive_type\n1303_uint-175-175", node_type=primitive_type, shape=box, style="rounded, filled"];
1304 [code=amount, color=white, fillcolor="#BFE6D3", label="174_ amount--identifier\n1304_amount-175-175", node_type=identifier, shape=box, style="rounded, filled"];
1305 [code="address owner_txorigin33", color=white, fillcolor="#BFE6D3", label="174_ parameter--parameter\n1305_address owner_txorigin33-175-175", node_type=parameter, shape=box, style="rounded, filled"];
1306 [code=address, color=white, fillcolor="#BFE6D3", label="174_ type_name--type_name\n1306_address-175-175", node_type=type_name, shape=box, style="rounded, filled"];
1307 [code=address, color=white, fillcolor="#BFE6D3", label="174_ primitive_type--primitive_type\n1307_address-175-175", node_type=primitive_type, shape=box, style="rounded, filled"];
1308 [code=owner_txorigin33, color=white, fillcolor="#BFE6D3", label="174_ owner_txorigin33--identifier\n1308_owner_txorigin33-175-175", node_type=identifier, shape=box, style="rounded, filled"];
1309 [code=public, color=white, fillcolor="#BFE6D3", label="174_ visibility--visibility\n1309_public-175-175", node_type=visibility, shape=box, style="rounded, filled"];
1310 [code="{\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}", color=white, fillcolor="#BFE6D3", label="174_ function_body--function_body\n1310_{\n	require (tx.origin == owner_txorigin33);\n	receiver.transfer(amount);\n}-175-178", node_type=function_body, shape=box, style="rounded, filled"];
1311 [code="require (tx.origin == owner_txorigin33);", color=white, fillcolor="#BFE6D3", label="175_ require (tx.origin == owner_txorigin33);\n1311-expression_statement-176-176", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1312 [code="require (tx.origin == owner_txorigin33)", color=white, fillcolor="#BFE6D3", label="175_ call_expression--call_expression\n1312_require (tx.origin == owner_txorigin33)-176-176", node_type=call_expression, shape=box, style="rounded, filled"];
1313 [code=require, color=white, fillcolor="#BFE6D3", label="175_ require--identifier\n1313_require-176-176", node_type=identifier, shape=box, style="rounded, filled"];
1314 [code="tx.origin == owner_txorigin33", color=white, fillcolor="#BFE6D3", label="175_ call_argument--call_argument\n1314_tx.origin == owner_txorigin33-176-176", node_type=call_argument, shape=box, style="rounded, filled"];
1315 [code="tx.origin == owner_txorigin33", color=white, fillcolor="#BFE6D3", label="175_ binary_expression--binary_expression\n1315_tx.origin == owner_txorigin33-176-176", node_type=binary_expression, shape=box, style="rounded, filled"];
1316 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="175_ member_expression--member_expression\n1316_tx.origin-176-176", node_type=member_expression, shape=box, style="rounded, filled"];
1317 [code=tx, color=white, fillcolor="#BFE6D3", label="175_ tx--identifier\n1317_tx-176-176", node_type=identifier, shape=box, style="rounded, filled"];
1318 [code=origin, color=white, fillcolor="#BFE6D3", label="175_ origin--identifier\n1318_origin-176-176", node_type=identifier, shape=box, style="rounded, filled"];
1319 [code=owner_txorigin33, color=white, fillcolor="#BFE6D3", label="175_ owner_txorigin33--identifier\n1319_owner_txorigin33-176-176", node_type=identifier, shape=box, style="rounded, filled"];
1320 [code="receiver.transfer(amount);", color=white, fillcolor="#BFE6D3", label="176_ receiver.transfer(amount);\n1320-expression_statement-177-177", method="sendto_txorigin33(address payable receiver,uint amount,address owner_txorigin33)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1321 [code="receiver.transfer(amount)", color=white, fillcolor="#BFE6D3", label="176_ call_expression--call_expression\n1321_receiver.transfer(amount)-177-177", node_type=call_expression, shape=box, style="rounded, filled"];
1322 [code="receiver.transfer", color=white, fillcolor="#BFE6D3", label="176_ member_expression--member_expression\n1322_receiver.transfer-177-177", node_type=member_expression, shape=box, style="rounded, filled"];
1323 [code=receiver, color=white, fillcolor="#BFE6D3", label="176_ receiver--identifier\n1323_receiver-177-177", node_type=identifier, shape=box, style="rounded, filled"];
1324 [code=transfer, color=white, fillcolor="#BFE6D3", label="176_ transfer--identifier\n1324_transfer-177-177", node_type=identifier, shape=box, style="rounded, filled"];
1325 [code=amount, color=white, fillcolor="#BFE6D3", label="176_ call_argument--call_argument\n1325_amount-177-177", node_type=call_argument, shape=box, style="rounded, filled"];
1326 [code=amount, color=white, fillcolor="#BFE6D3", label="176_ amount--identifier\n1326_amount-177-177", node_type=identifier, shape=box, style="rounded, filled"];
1327 [code="function symbol() public view returns (string memory) {\n        return _symbol;\n    }", color=white, fillcolor="#BFE6D3", label="178_ function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n1327-function_definition-179-181", method="symbol()", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1328 [code=symbol, color=white, fillcolor="#BFE6D3", label="178_ symbol--identifier\n1328_symbol-179-179", node_type=identifier, shape=box, style="rounded, filled"];
1329 [code=public, color=white, fillcolor="#BFE6D3", label="178_ visibility--visibility\n1329_public-179-179", node_type=visibility, shape=box, style="rounded, filled"];
1330 [code=view, color=white, fillcolor="#BFE6D3", label="178_ state_mutability--state_mutability\n1330_view-179-179", node_type=state_mutability, shape=box, style="rounded, filled"];
1331 [code="returns (string memory)", color=white, fillcolor="#BFE6D3", label="178_ return_type_definition--return_type_definition\n1331_returns (string memory)-179-179", node_type=return_type_definition, shape=box, style="rounded, filled"];
1332 [code="string memory", color=white, fillcolor="#BFE6D3", label="178_ parameter--parameter\n1332_string memory-179-179", node_type=parameter, shape=box, style="rounded, filled"];
1333 [code=string, color=white, fillcolor="#BFE6D3", label="178_ type_name--type_name\n1333_string-179-179", node_type=type_name, shape=box, style="rounded, filled"];
1334 [code=string, color=white, fillcolor="#BFE6D3", label="178_ primitive_type--primitive_type\n1334_string-179-179", node_type=primitive_type, shape=box, style="rounded, filled"];
1335 [code="{\n        return _symbol;\n    }", color=white, fillcolor="#BFE6D3", label="178_ function_body--function_body\n1335_{\n        return _symbol;\n    }-179-181", node_type=function_body, shape=box, style="rounded, filled"];
1336 [code="return _symbol;", color=white, fillcolor="#BFE6D3", label="179_ return _symbol;\n1336-return-180-180", method="symbol()", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
1337 [code=_symbol, color=white, fillcolor="#BFE6D3", label="179_ _symbol--identifier\n1337__symbol-180-180", node_type=identifier, shape=box, style="rounded, filled"];
1338 [code="function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="181_ function transferTo_txorigin27(address to, uint amount,address owner_txorigin27) public {\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}\n1338-function_definition-182-185", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1339 [code=transferTo_txorigin27, color=white, fillcolor="#BFE6D3", label="181_ transferTo_txorigin27--identifier\n1339_transferTo_txorigin27-182-182", node_type=identifier, shape=box, style="rounded, filled"];
1340 [code="address to", color=white, fillcolor="#BFE6D3", label="181_ parameter--parameter\n1340_address to-182-182", node_type=parameter, shape=box, style="rounded, filled"];
1341 [code=address, color=white, fillcolor="#BFE6D3", label="181_ type_name--type_name\n1341_address-182-182", node_type=type_name, shape=box, style="rounded, filled"];
1342 [code=address, color=white, fillcolor="#BFE6D3", label="181_ primitive_type--primitive_type\n1342_address-182-182", node_type=primitive_type, shape=box, style="rounded, filled"];
1343 [code=to, color=white, fillcolor="#BFE6D3", label="181_ to--identifier\n1343_to-182-182", node_type=identifier, shape=box, style="rounded, filled"];
1344 [code="uint amount", color=white, fillcolor="#BFE6D3", label="181_ parameter--parameter\n1344_uint amount-182-182", node_type=parameter, shape=box, style="rounded, filled"];
1345 [code=uint, color=white, fillcolor="#BFE6D3", label="181_ type_name--type_name\n1345_uint-182-182", node_type=type_name, shape=box, style="rounded, filled"];
1346 [code=uint, color=white, fillcolor="#BFE6D3", label="181_ primitive_type--primitive_type\n1346_uint-182-182", node_type=primitive_type, shape=box, style="rounded, filled"];
1347 [code=amount, color=white, fillcolor="#BFE6D3", label="181_ amount--identifier\n1347_amount-182-182", node_type=identifier, shape=box, style="rounded, filled"];
1348 [code="address owner_txorigin27", color=white, fillcolor="#BFE6D3", label="181_ parameter--parameter\n1348_address owner_txorigin27-182-182", node_type=parameter, shape=box, style="rounded, filled"];
1349 [code=address, color=white, fillcolor="#BFE6D3", label="181_ type_name--type_name\n1349_address-182-182", node_type=type_name, shape=box, style="rounded, filled"];
1350 [code=address, color=white, fillcolor="#BFE6D3", label="181_ primitive_type--primitive_type\n1350_address-182-182", node_type=primitive_type, shape=box, style="rounded, filled"];
1351 [code=owner_txorigin27, color=white, fillcolor="#BFE6D3", label="181_ owner_txorigin27--identifier\n1351_owner_txorigin27-182-182", node_type=identifier, shape=box, style="rounded, filled"];
1352 [code=public, color=white, fillcolor="#BFE6D3", label="181_ visibility--visibility\n1352_public-182-182", node_type=visibility, shape=box, style="rounded, filled"];
1353 [code="{\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="181_ function_body--function_body\n1353_{\n  require(tx.origin == owner_txorigin27);\n  to.call.value(amount);\n}-182-185", node_type=function_body, shape=box, style="rounded, filled"];
1354 [code="require(tx.origin == owner_txorigin27);", color=white, fillcolor="#BFE6D3", label="182_ require(tx.origin == owner_txorigin27);\n1354-expression_statement-183-183", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1355 [code="require(tx.origin == owner_txorigin27)", color=white, fillcolor="#BFE6D3", label="182_ call_expression--call_expression\n1355_require(tx.origin == owner_txorigin27)-183-183", node_type=call_expression, shape=box, style="rounded, filled"];
1356 [code=require, color=white, fillcolor="#BFE6D3", label="182_ require--identifier\n1356_require-183-183", node_type=identifier, shape=box, style="rounded, filled"];
1357 [code="tx.origin == owner_txorigin27", color=white, fillcolor="#BFE6D3", label="182_ call_argument--call_argument\n1357_tx.origin == owner_txorigin27-183-183", node_type=call_argument, shape=box, style="rounded, filled"];
1358 [code="tx.origin == owner_txorigin27", color=white, fillcolor="#BFE6D3", label="182_ binary_expression--binary_expression\n1358_tx.origin == owner_txorigin27-183-183", node_type=binary_expression, shape=box, style="rounded, filled"];
1359 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="182_ member_expression--member_expression\n1359_tx.origin-183-183", node_type=member_expression, shape=box, style="rounded, filled"];
1360 [code=tx, color=white, fillcolor="#BFE6D3", label="182_ tx--identifier\n1360_tx-183-183", node_type=identifier, shape=box, style="rounded, filled"];
1361 [code=origin, color=white, fillcolor="#BFE6D3", label="182_ origin--identifier\n1361_origin-183-183", node_type=identifier, shape=box, style="rounded, filled"];
1362 [code=owner_txorigin27, color=white, fillcolor="#BFE6D3", label="182_ owner_txorigin27--identifier\n1362_owner_txorigin27-183-183", node_type=identifier, shape=box, style="rounded, filled"];
1363 [code="to.call.value(amount);", color=white, fillcolor="#BFE6D3", label="183_ to.call.value(amount);\n1363-expression_statement-184-184", method="transferTo_txorigin27(address to,uint amount,address owner_txorigin27)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1364 [code="to.call.value(amount)", color=white, fillcolor="#BFE6D3", label="183_ call_expression--call_expression\n1364_to.call.value(amount)-184-184", node_type=call_expression, shape=box, style="rounded, filled"];
1365 [code="to.call.value", color=white, fillcolor="#BFE6D3", label="183_ member_expression--member_expression\n1365_to.call.value-184-184", node_type=member_expression, shape=box, style="rounded, filled"];
1366 [code="to.call", color=white, fillcolor="#BFE6D3", label="183_ member_expression--member_expression\n1366_to.call-184-184", node_type=member_expression, shape=box, style="rounded, filled"];
1367 [code=to, color=white, fillcolor="#BFE6D3", label="183_ to--identifier\n1367_to-184-184", node_type=identifier, shape=box, style="rounded, filled"];
1368 [code=call, color=white, fillcolor="#BFE6D3", label="183_ call--identifier\n1368_call-184-184", node_type=identifier, shape=box, style="rounded, filled"];
1369 [code=value, color=white, fillcolor="#BFE6D3", label="183_ value--identifier\n1369_value-184-184", node_type=identifier, shape=box, style="rounded, filled"];
1370 [code=amount, color=white, fillcolor="#BFE6D3", label="183_ call_argument--call_argument\n1370_amount-184-184", node_type=call_argument, shape=box, style="rounded, filled"];
1371 [code=amount, color=white, fillcolor="#BFE6D3", label="183_ amount--identifier\n1371_amount-184-184", node_type=identifier, shape=box, style="rounded, filled"];
1372 [code="function decimals() public view returns (uint8) {\n        return _decimals;\n    }", color=white, fillcolor="#BFE6D3", label="185_ function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n1372-function_definition-186-188", method="decimals()", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1373 [code=decimals, color=white, fillcolor="#BFE6D3", label="185_ decimals--identifier\n1373_decimals-186-186", node_type=identifier, shape=box, style="rounded, filled"];
1374 [code=public, color=white, fillcolor="#BFE6D3", label="185_ visibility--visibility\n1374_public-186-186", node_type=visibility, shape=box, style="rounded, filled"];
1375 [code=view, color=white, fillcolor="#BFE6D3", label="185_ state_mutability--state_mutability\n1375_view-186-186", node_type=state_mutability, shape=box, style="rounded, filled"];
1376 [code="returns (uint8)", color=white, fillcolor="#BFE6D3", label="185_ return_type_definition--return_type_definition\n1376_returns (uint8)-186-186", node_type=return_type_definition, shape=box, style="rounded, filled"];
1377 [code=uint8, color=white, fillcolor="#BFE6D3", label="185_ parameter--parameter\n1377_uint8-186-186", node_type=parameter, shape=box, style="rounded, filled"];
1378 [code=uint8, color=white, fillcolor="#BFE6D3", label="185_ type_name--type_name\n1378_uint8-186-186", node_type=type_name, shape=box, style="rounded, filled"];
1379 [code=uint8, color=white, fillcolor="#BFE6D3", label="185_ primitive_type--primitive_type\n1379_uint8-186-186", node_type=primitive_type, shape=box, style="rounded, filled"];
1380 [code="{\n        return _decimals;\n    }", color=white, fillcolor="#BFE6D3", label="185_ function_body--function_body\n1380_{\n        return _decimals;\n    }-186-188", node_type=function_body, shape=box, style="rounded, filled"];
1381 [code="return _decimals;", color=white, fillcolor="#BFE6D3", label="186_ return _decimals;\n1381-return-187-187", method="decimals()", node_type=return_statement, shape=box, style="rounded, filled", type_label=return];
1382 [code=_decimals, color=white, fillcolor="#BFE6D3", label="186_ _decimals--identifier\n1382__decimals-187-187", node_type=identifier, shape=box, style="rounded, filled"];
1383 [code="function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="188_ function transferTo_txorigin31(address to, uint amount,address owner_txorigin31) public {\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}\n1383-function_definition-189-192", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1384 [code=transferTo_txorigin31, color=white, fillcolor="#BFE6D3", label="188_ transferTo_txorigin31--identifier\n1384_transferTo_txorigin31-189-189", node_type=identifier, shape=box, style="rounded, filled"];
1385 [code="address to", color=white, fillcolor="#BFE6D3", label="188_ parameter--parameter\n1385_address to-189-189", node_type=parameter, shape=box, style="rounded, filled"];
1386 [code=address, color=white, fillcolor="#BFE6D3", label="188_ type_name--type_name\n1386_address-189-189", node_type=type_name, shape=box, style="rounded, filled"];
1387 [code=address, color=white, fillcolor="#BFE6D3", label="188_ primitive_type--primitive_type\n1387_address-189-189", node_type=primitive_type, shape=box, style="rounded, filled"];
1388 [code=to, color=white, fillcolor="#BFE6D3", label="188_ to--identifier\n1388_to-189-189", node_type=identifier, shape=box, style="rounded, filled"];
1389 [code="uint amount", color=white, fillcolor="#BFE6D3", label="188_ parameter--parameter\n1389_uint amount-189-189", node_type=parameter, shape=box, style="rounded, filled"];
1390 [code=uint, color=white, fillcolor="#BFE6D3", label="188_ type_name--type_name\n1390_uint-189-189", node_type=type_name, shape=box, style="rounded, filled"];
1391 [code=uint, color=white, fillcolor="#BFE6D3", label="188_ primitive_type--primitive_type\n1391_uint-189-189", node_type=primitive_type, shape=box, style="rounded, filled"];
1392 [code=amount, color=white, fillcolor="#BFE6D3", label="188_ amount--identifier\n1392_amount-189-189", node_type=identifier, shape=box, style="rounded, filled"];
1393 [code="address owner_txorigin31", color=white, fillcolor="#BFE6D3", label="188_ parameter--parameter\n1393_address owner_txorigin31-189-189", node_type=parameter, shape=box, style="rounded, filled"];
1394 [code=address, color=white, fillcolor="#BFE6D3", label="188_ type_name--type_name\n1394_address-189-189", node_type=type_name, shape=box, style="rounded, filled"];
1395 [code=address, color=white, fillcolor="#BFE6D3", label="188_ primitive_type--primitive_type\n1395_address-189-189", node_type=primitive_type, shape=box, style="rounded, filled"];
1396 [code=owner_txorigin31, color=white, fillcolor="#BFE6D3", label="188_ owner_txorigin31--identifier\n1396_owner_txorigin31-189-189", node_type=identifier, shape=box, style="rounded, filled"];
1397 [code=public, color=white, fillcolor="#BFE6D3", label="188_ visibility--visibility\n1397_public-189-189", node_type=visibility, shape=box, style="rounded, filled"];
1398 [code="{\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}", color=white, fillcolor="#BFE6D3", label="188_ function_body--function_body\n1398_{\n  require(tx.origin == owner_txorigin31);\n  to.call.value(amount);\n}-189-192", node_type=function_body, shape=box, style="rounded, filled"];
1399 [code="require(tx.origin == owner_txorigin31);", color=white, fillcolor="#BFE6D3", label="189_ require(tx.origin == owner_txorigin31);\n1399-expression_statement-190-190", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1400 [code="require(tx.origin == owner_txorigin31)", color=white, fillcolor="#BFE6D3", label="189_ call_expression--call_expression\n1400_require(tx.origin == owner_txorigin31)-190-190", node_type=call_expression, shape=box, style="rounded, filled"];
1401 [code=require, color=white, fillcolor="#BFE6D3", label="189_ require--identifier\n1401_require-190-190", node_type=identifier, shape=box, style="rounded, filled"];
1402 [code="tx.origin == owner_txorigin31", color=white, fillcolor="#BFE6D3", label="189_ call_argument--call_argument\n1402_tx.origin == owner_txorigin31-190-190", node_type=call_argument, shape=box, style="rounded, filled"];
1403 [code="tx.origin == owner_txorigin31", color=white, fillcolor="#BFE6D3", label="189_ binary_expression--binary_expression\n1403_tx.origin == owner_txorigin31-190-190", node_type=binary_expression, shape=box, style="rounded, filled"];
1404 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="189_ member_expression--member_expression\n1404_tx.origin-190-190", node_type=member_expression, shape=box, style="rounded, filled"];
1405 [code=tx, color=white, fillcolor="#BFE6D3", label="189_ tx--identifier\n1405_tx-190-190", node_type=identifier, shape=box, style="rounded, filled"];
1406 [code=origin, color=white, fillcolor="#BFE6D3", label="189_ origin--identifier\n1406_origin-190-190", node_type=identifier, shape=box, style="rounded, filled"];
1407 [code=owner_txorigin31, color=white, fillcolor="#BFE6D3", label="189_ owner_txorigin31--identifier\n1407_owner_txorigin31-190-190", node_type=identifier, shape=box, style="rounded, filled"];
1408 [code="to.call.value(amount);", color=white, fillcolor="#BFE6D3", label="190_ to.call.value(amount);\n1408-expression_statement-191-191", method="transferTo_txorigin31(address to,uint amount,address owner_txorigin31)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1409 [code="to.call.value(amount)", color=white, fillcolor="#BFE6D3", label="190_ call_expression--call_expression\n1409_to.call.value(amount)-191-191", node_type=call_expression, shape=box, style="rounded, filled"];
1410 [code="to.call.value", color=white, fillcolor="#BFE6D3", label="190_ member_expression--member_expression\n1410_to.call.value-191-191", node_type=member_expression, shape=box, style="rounded, filled"];
1411 [code="to.call", color=white, fillcolor="#BFE6D3", label="190_ member_expression--member_expression\n1411_to.call-191-191", node_type=member_expression, shape=box, style="rounded, filled"];
1412 [code=to, color=white, fillcolor="#BFE6D3", label="190_ to--identifier\n1412_to-191-191", node_type=identifier, shape=box, style="rounded, filled"];
1413 [code=call, color=white, fillcolor="#BFE6D3", label="190_ call--identifier\n1413_call-191-191", node_type=identifier, shape=box, style="rounded, filled"];
1414 [code=value, color=white, fillcolor="#BFE6D3", label="190_ value--identifier\n1414_value-191-191", node_type=identifier, shape=box, style="rounded, filled"];
1415 [code=amount, color=white, fillcolor="#BFE6D3", label="190_ call_argument--call_argument\n1415_amount-191-191", node_type=call_argument, shape=box, style="rounded, filled"];
1416 [code=amount, color=white, fillcolor="#BFE6D3", label="190_ amount--identifier\n1416_amount-191-191", node_type=identifier, shape=box, style="rounded, filled"];
1417 [code="contract SaveWon is ERC20, ERC20Detailed {\n  function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n  uint8 public constant DECIMALS = 18;\n    uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));\n    constructor () public ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\nfunction sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n}", color=white, fillcolor="#BFE6D3", label="193_ contract_declaration--contract_declaration\n1417_contract SaveWon is ERC20, ERC20Detailed {\n  function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n  uint8 public constant DECIMALS = 18;\n    uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));\n    constructor () public ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\nfunction sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n}-194-207", node_type=contract_declaration, shape=box, style="rounded, filled"];
1418 [code=SaveWon, color=white, fillcolor="#BFE6D3", label="193_ SaveWon--identifier\n1418_SaveWon-194-194", node_type=identifier, shape=box, style="rounded, filled"];
1419 [code=ERC20, color=white, fillcolor="#BFE6D3", label="193_ inheritance_specifier--inheritance_specifier\n1419_ERC20-194-194", node_type=inheritance_specifier, shape=box, style="rounded, filled"];
1420 [code=ERC20, color=white, fillcolor="#BFE6D3", label="193_ user_defined_type--user_defined_type\n1420_ERC20-194-194", node_type=user_defined_type, shape=box, style="rounded, filled"];
1421 [code=ERC20, color=white, fillcolor="#BFE6D3", label="193_ ERC20--identifier\n1421_ERC20-194-194", node_type=identifier, shape=box, style="rounded, filled"];
1422 [code=ERC20Detailed, color=white, fillcolor="#BFE6D3", label="193_ inheritance_specifier--inheritance_specifier\n1422_ERC20Detailed-194-194", node_type=inheritance_specifier, shape=box, style="rounded, filled"];
1423 [code=ERC20Detailed, color=white, fillcolor="#BFE6D3", label="193_ user_defined_type--user_defined_type\n1423_ERC20Detailed-194-194", node_type=user_defined_type, shape=box, style="rounded, filled"];
1424 [code=ERC20Detailed, color=white, fillcolor="#BFE6D3", label="193_ ERC20Detailed--identifier\n1424_ERC20Detailed-194-194", node_type=identifier, shape=box, style="rounded, filled"];
1425 [code="{\n  function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n  uint8 public constant DECIMALS = 18;\n    uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));\n    constructor () public ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\nfunction sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n}", color=white, fillcolor="#BFE6D3", label="193_ contract_body--contract_body\n1425_{\n  function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n  uint8 public constant DECIMALS = 18;\n    uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));\n    constructor () public ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\nfunction sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n}-194-207", node_type=contract_body, shape=box, style="rounded, filled"];
1426 [code="function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }", color=white, fillcolor="#BFE6D3", label="194_ function bug_txorigin20(address owner_txorigin20) public{\n        require(tx.origin == owner_txorigin20);\n    }\n1426-function_definition-195-197", method="bug_txorigin20(address owner_txorigin20)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1427 [code=bug_txorigin20, color=white, fillcolor="#BFE6D3", label="194_ bug_txorigin20--identifier\n1427_bug_txorigin20-195-195", node_type=identifier, shape=box, style="rounded, filled"];
1428 [code="address owner_txorigin20", color=white, fillcolor="#BFE6D3", label="194_ parameter--parameter\n1428_address owner_txorigin20-195-195", node_type=parameter, shape=box, style="rounded, filled"];
1429 [code=address, color=white, fillcolor="#BFE6D3", label="194_ type_name--type_name\n1429_address-195-195", node_type=type_name, shape=box, style="rounded, filled"];
1430 [code=address, color=white, fillcolor="#BFE6D3", label="194_ primitive_type--primitive_type\n1430_address-195-195", node_type=primitive_type, shape=box, style="rounded, filled"];
1431 [code=owner_txorigin20, color=white, fillcolor="#BFE6D3", label="194_ owner_txorigin20--identifier\n1431_owner_txorigin20-195-195", node_type=identifier, shape=box, style="rounded, filled"];
1432 [code=public, color=white, fillcolor="#BFE6D3", label="194_ visibility--visibility\n1432_public-195-195", node_type=visibility, shape=box, style="rounded, filled"];
1433 [code="{\n        require(tx.origin == owner_txorigin20);\n    }", color=white, fillcolor="#BFE6D3", label="194_ function_body--function_body\n1433_{\n        require(tx.origin == owner_txorigin20);\n    }-195-197", node_type=function_body, shape=box, style="rounded, filled"];
1434 [code="require(tx.origin == owner_txorigin20);", color=white, fillcolor="#BFE6D3", label="195_ require(tx.origin == owner_txorigin20);\n1434-expression_statement-196-196", method="bug_txorigin20(address owner_txorigin20)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1435 [code="require(tx.origin == owner_txorigin20)", color=white, fillcolor="#BFE6D3", label="195_ call_expression--call_expression\n1435_require(tx.origin == owner_txorigin20)-196-196", node_type=call_expression, shape=box, style="rounded, filled"];
1436 [code=require, color=white, fillcolor="#BFE6D3", label="195_ require--identifier\n1436_require-196-196", node_type=identifier, shape=box, style="rounded, filled"];
1437 [code="tx.origin == owner_txorigin20", color=white, fillcolor="#BFE6D3", label="195_ call_argument--call_argument\n1437_tx.origin == owner_txorigin20-196-196", node_type=call_argument, shape=box, style="rounded, filled"];
1438 [code="tx.origin == owner_txorigin20", color=white, fillcolor="#BFE6D3", label="195_ binary_expression--binary_expression\n1438_tx.origin == owner_txorigin20-196-196", node_type=binary_expression, shape=box, style="rounded, filled"];
1439 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="195_ member_expression--member_expression\n1439_tx.origin-196-196", node_type=member_expression, shape=box, style="rounded, filled"];
1440 [code=tx, color=white, fillcolor="#BFE6D3", label="195_ tx--identifier\n1440_tx-196-196", node_type=identifier, shape=box, style="rounded, filled"];
1441 [code=origin, color=white, fillcolor="#BFE6D3", label="195_ origin--identifier\n1441_origin-196-196", node_type=identifier, shape=box, style="rounded, filled"];
1442 [code=owner_txorigin20, color=white, fillcolor="#BFE6D3", label="195_ owner_txorigin20--identifier\n1442_owner_txorigin20-196-196", node_type=identifier, shape=box, style="rounded, filled"];
1443 [code="uint8 public constant DECIMALS = 18;", color=white, fillcolor="#BFE6D3", label="197_ uint8 public constant DECIMALS = 18;\n1443-new_variable-198-198", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
1444 [code=uint8, color=white, fillcolor="#BFE6D3", label="197_ type_name--type_name\n1444_uint8-198-198", node_type=type_name, shape=box, style="rounded, filled"];
1445 [code=uint8, color=white, fillcolor="#BFE6D3", label="197_ primitive_type--primitive_type\n1445_uint8-198-198", node_type=primitive_type, shape=box, style="rounded, filled"];
1446 [code=public, color=white, fillcolor="#BFE6D3", label="197_ visibility--visibility\n1446_public-198-198", node_type=visibility, shape=box, style="rounded, filled"];
1447 [code=DECIMALS, color=white, fillcolor="#BFE6D3", label="197_ DECIMALS--identifier\n1447_DECIMALS-198-198", node_type=identifier, shape=box, style="rounded, filled"];
1448 [code=18, color=white, fillcolor="#BFE6D3", label="197_ 18--number_literal\n1448_18-198-198", node_type=number_literal, shape=box, style="rounded, filled"];
1449 [code="uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));", color=white, fillcolor="#BFE6D3", label="198_ uint256 public constant INITIAL_SUPPLY = 50000000000 * (10 ** uint256(DECIMALS));\n1449-new_variable-199-199", method="", node_type=state_variable_declaration, shape=box, style="rounded, filled", type_label=new_variable];
1450 [code=uint256, color=white, fillcolor="#BFE6D3", label="198_ type_name--type_name\n1450_uint256-199-199", node_type=type_name, shape=box, style="rounded, filled"];
1451 [code=uint256, color=white, fillcolor="#BFE6D3", label="198_ primitive_type--primitive_type\n1451_uint256-199-199", node_type=primitive_type, shape=box, style="rounded, filled"];
1452 [code=public, color=white, fillcolor="#BFE6D3", label="198_ visibility--visibility\n1452_public-199-199", node_type=visibility, shape=box, style="rounded, filled"];
1453 [code=INITIAL_SUPPLY, color=white, fillcolor="#BFE6D3", label="198_ INITIAL_SUPPLY--identifier\n1453_INITIAL_SUPPLY-199-199", node_type=identifier, shape=box, style="rounded, filled"];
1454 [code="50000000000 * (10 ** uint256(DECIMALS))", color=white, fillcolor="#BFE6D3", label="198_ binary_expression--binary_expression\n1454_50000000000 * (10 ** uint256(DECIMALS))-199-199", node_type=binary_expression, shape=box, style="rounded, filled"];
1455 [code=50000000000, color=white, fillcolor="#BFE6D3", label="198_ 50000000000--number_literal\n1455_50000000000-199-199", node_type=number_literal, shape=box, style="rounded, filled"];
1456 [code="(10 ** uint256(DECIMALS))", color=white, fillcolor="#BFE6D3", label="198_ parenthesized_expression--parenthesized_expression\n1456_(10 ** uint256(DECIMALS))-199-199", node_type=parenthesized_expression, shape=box, style="rounded, filled"];
1457 [code="10 ** uint256(DECIMALS)", color=white, fillcolor="#BFE6D3", label="198_ binary_expression--binary_expression\n1457_10 ** uint256(DECIMALS)-199-199", node_type=binary_expression, shape=box, style="rounded, filled"];
1458 [code=10, color=white, fillcolor="#BFE6D3", label="198_ 10--number_literal\n1458_10-199-199", node_type=number_literal, shape=box, style="rounded, filled"];
1459 [code="uint256(DECIMALS)", color=white, fillcolor="#BFE6D3", label="198_ type_cast_expression--type_cast_expression\n1459_uint256(DECIMALS)-199-199", node_type=type_cast_expression, shape=box, style="rounded, filled"];
1460 [code=uint256, color=white, fillcolor="#BFE6D3", label="198_ primitive_type--primitive_type\n1460_uint256-199-199", node_type=primitive_type, shape=box, style="rounded, filled"];
1461 [code=DECIMALS, color=white, fillcolor="#BFE6D3", label="198_ DECIMALS--identifier\n1461_DECIMALS-199-199", node_type=identifier, shape=box, style="rounded, filled"];
1462 [code="constructor () public ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }", color=white, fillcolor="#BFE6D3", label="199_ constructor_definition--constructor_definition\n1462_constructor () public ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }-200-202", node_type=constructor_definition, shape=box, style="rounded, filled"];
1463 [code="ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS)", color=white, fillcolor="#BFE6D3", label="199_ ERC20Detailed(\"SaveWon\", \"SVW\", DECIMALS)\n1463-expression_statement-200-200", method="", node_type=modifier_invocation, shape=box, style="rounded, filled", type_label=expression_statement];
1464 [code=ERC20Detailed, color=white, fillcolor="#BFE6D3", label="199_ ERC20Detailed--identifier\n1464_ERC20Detailed-200-200", node_type=identifier, shape=box, style="rounded, filled"];
1465 [code="SaveWon", color=white, fillcolor="#BFE6D3", label="199_ call_argument--call_argument\n1465_\"SaveWon\"-200-200", node_type=call_argument, shape=box, style="rounded, filled"];
1466 [code="SaveWon", color=white, fillcolor="#BFE6D3", label="199_ string_literal--string_literal\n1466_\"SaveWon\"-200-200", node_type=string_literal, shape=box, style="rounded, filled"];
1467 [code="SaveWon", color=white, fillcolor="#BFE6D3", label="199_ \"SaveWon\"--string\n1467_\"SaveWon\"-200-200", node_type=string, shape=box, style="rounded, filled"];
1468 [code="SVW", color=white, fillcolor="#BFE6D3", label="199_ call_argument--call_argument\n1468_\"SVW\"-200-200", node_type=call_argument, shape=box, style="rounded, filled"];
1469 [code="SVW", color=white, fillcolor="#BFE6D3", label="199_ string_literal--string_literal\n1469_\"SVW\"-200-200", node_type=string_literal, shape=box, style="rounded, filled"];
1470 [code="SVW", color=white, fillcolor="#BFE6D3", label="199_ \"SVW\"--string\n1470_\"SVW\"-200-200", node_type=string, shape=box, style="rounded, filled"];
1471 [code=DECIMALS, color=white, fillcolor="#BFE6D3", label="199_ call_argument--call_argument\n1471_DECIMALS-200-200", node_type=call_argument, shape=box, style="rounded, filled"];
1472 [code=DECIMALS, color=white, fillcolor="#BFE6D3", label="199_ DECIMALS--identifier\n1472_DECIMALS-200-200", node_type=identifier, shape=box, style="rounded, filled"];
1473 [code="{\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }", color=white, fillcolor="#BFE6D3", label="199_ function_body--function_body\n1473_{\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }-200-202", node_type=function_body, shape=box, style="rounded, filled"];
1474 [code="_mint(msg.sender, INITIAL_SUPPLY);", color=white, fillcolor="#BFE6D3", label="200_ _mint(msg.sender, INITIAL_SUPPLY);\n1474-expression_statement-201-201", method="", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1475 [code="_mint(msg.sender, INITIAL_SUPPLY)", color=white, fillcolor="#BFE6D3", label="200_ call_expression--call_expression\n1475__mint(msg.sender, INITIAL_SUPPLY)-201-201", node_type=call_expression, shape=box, style="rounded, filled"];
1476 [code=_mint, color=white, fillcolor="#BFE6D3", label="200_ _mint--identifier\n1476__mint-201-201", node_type=identifier, shape=box, style="rounded, filled"];
1477 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="200_ call_argument--call_argument\n1477_msg.sender-201-201", node_type=call_argument, shape=box, style="rounded, filled"];
1478 [code="msg.sender", color=white, fillcolor="#BFE6D3", label="200_ member_expression--member_expression\n1478_msg.sender-201-201", node_type=member_expression, shape=box, style="rounded, filled"];
1479 [code=msg, color=white, fillcolor="#BFE6D3", label="200_ msg--identifier\n1479_msg-201-201", node_type=identifier, shape=box, style="rounded, filled"];
1480 [code=sender, color=white, fillcolor="#BFE6D3", label="200_ sender--identifier\n1480_sender-201-201", node_type=identifier, shape=box, style="rounded, filled"];
1481 [code=INITIAL_SUPPLY, color=white, fillcolor="#BFE6D3", label="200_ call_argument--call_argument\n1481_INITIAL_SUPPLY-201-201", node_type=call_argument, shape=box, style="rounded, filled"];
1482 [code=INITIAL_SUPPLY, color=white, fillcolor="#BFE6D3", label="200_ INITIAL_SUPPLY--identifier\n1482_INITIAL_SUPPLY-201-201", node_type=identifier, shape=box, style="rounded, filled"];
1483 [code="function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}", color=white, fillcolor="#BFE6D3", label="202_ function sendto_txorigin13(address payable receiver, uint amount,address owner_txorigin13) public {\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}\n1483-function_definition-203-206", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", node_type=function_definition, shape=box, style="rounded, filled", type_label=function_definition];
1484 [code=sendto_txorigin13, color=white, fillcolor="#BFE6D3", label="202_ sendto_txorigin13--identifier\n1484_sendto_txorigin13-203-203", node_type=identifier, shape=box, style="rounded, filled"];
1485 [code="address payable receiver", color=white, fillcolor="#BFE6D3", label="202_ parameter--parameter\n1485_address payable receiver-203-203", node_type=parameter, shape=box, style="rounded, filled"];
1486 [code="address payable", color=white, fillcolor="#BFE6D3", label="202_ type_name--type_name\n1486_address payable-203-203", node_type=type_name, shape=box, style="rounded, filled"];
1487 [code="address payable", color=white, fillcolor="#BFE6D3", label="202_ primitive_type--primitive_type\n1487_address payable-203-203", node_type=primitive_type, shape=box, style="rounded, filled"];
1488 [code=receiver, color=white, fillcolor="#BFE6D3", label="202_ receiver--identifier\n1488_receiver-203-203", node_type=identifier, shape=box, style="rounded, filled"];
1489 [code="uint amount", color=white, fillcolor="#BFE6D3", label="202_ parameter--parameter\n1489_uint amount-203-203", node_type=parameter, shape=box, style="rounded, filled"];
1490 [code=uint, color=white, fillcolor="#BFE6D3", label="202_ type_name--type_name\n1490_uint-203-203", node_type=type_name, shape=box, style="rounded, filled"];
1491 [code=uint, color=white, fillcolor="#BFE6D3", label="202_ primitive_type--primitive_type\n1491_uint-203-203", node_type=primitive_type, shape=box, style="rounded, filled"];
1492 [code=amount, color=white, fillcolor="#BFE6D3", label="202_ amount--identifier\n1492_amount-203-203", node_type=identifier, shape=box, style="rounded, filled"];
1493 [code="address owner_txorigin13", color=white, fillcolor="#BFE6D3", label="202_ parameter--parameter\n1493_address owner_txorigin13-203-203", node_type=parameter, shape=box, style="rounded, filled"];
1494 [code=address, color=white, fillcolor="#BFE6D3", label="202_ type_name--type_name\n1494_address-203-203", node_type=type_name, shape=box, style="rounded, filled"];
1495 [code=address, color=white, fillcolor="#BFE6D3", label="202_ primitive_type--primitive_type\n1495_address-203-203", node_type=primitive_type, shape=box, style="rounded, filled"];
1496 [code=owner_txorigin13, color=white, fillcolor="#BFE6D3", label="202_ owner_txorigin13--identifier\n1496_owner_txorigin13-203-203", node_type=identifier, shape=box, style="rounded, filled"];
1497 [code=public, color=white, fillcolor="#BFE6D3", label="202_ visibility--visibility\n1497_public-203-203", node_type=visibility, shape=box, style="rounded, filled"];
1498 [code="{\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}", color=white, fillcolor="#BFE6D3", label="202_ function_body--function_body\n1498_{\n	require (tx.origin == owner_txorigin13);\n	receiver.transfer(amount);\n}-203-206", node_type=function_body, shape=box, style="rounded, filled"];
1499 [code="require (tx.origin == owner_txorigin13);", color=white, fillcolor="#BFE6D3", label="203_ require (tx.origin == owner_txorigin13);\n1499-expression_statement-204-204", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1500 [code="require (tx.origin == owner_txorigin13)", color=white, fillcolor="#BFE6D3", label="203_ call_expression--call_expression\n1500_require (tx.origin == owner_txorigin13)-204-204", node_type=call_expression, shape=box, style="rounded, filled"];
1501 [code=require, color=white, fillcolor="#BFE6D3", label="203_ require--identifier\n1501_require-204-204", node_type=identifier, shape=box, style="rounded, filled"];
1502 [code="tx.origin == owner_txorigin13", color=white, fillcolor="#BFE6D3", label="203_ call_argument--call_argument\n1502_tx.origin == owner_txorigin13-204-204", node_type=call_argument, shape=box, style="rounded, filled"];
1503 [code="tx.origin == owner_txorigin13", color=white, fillcolor="#BFE6D3", label="203_ binary_expression--binary_expression\n1503_tx.origin == owner_txorigin13-204-204", node_type=binary_expression, shape=box, style="rounded, filled"];
1504 [code="tx.origin", color=white, fillcolor="#BFE6D3", label="203_ member_expression--member_expression\n1504_tx.origin-204-204", node_type=member_expression, shape=box, style="rounded, filled"];
1505 [code=tx, color=white, fillcolor="#BFE6D3", label="203_ tx--identifier\n1505_tx-204-204", node_type=identifier, shape=box, style="rounded, filled"];
1506 [code=origin, color=white, fillcolor="#BFE6D3", label="203_ origin--identifier\n1506_origin-204-204", node_type=identifier, shape=box, style="rounded, filled"];
1507 [code=owner_txorigin13, color=white, fillcolor="#BFE6D3", label="203_ owner_txorigin13--identifier\n1507_owner_txorigin13-204-204", node_type=identifier, shape=box, style="rounded, filled"];
1508 [code="receiver.transfer(amount);", color=white, fillcolor="#BFE6D3", label="204_ receiver.transfer(amount);\n1508-expression_statement-205-205", method="sendto_txorigin13(address payable receiver,uint amount,address owner_txorigin13)", node_type=expression_statement, shape=box, style="rounded, filled", type_label=expression_statement];
1509 [code="receiver.transfer(amount)", color=white, fillcolor="#BFE6D3", label="204_ call_expression--call_expression\n1509_receiver.transfer(amount)-205-205", node_type=call_expression, shape=box, style="rounded, filled"];
1510 [code="receiver.transfer", color=white, fillcolor="#BFE6D3", label="204_ member_expression--member_expression\n1510_receiver.transfer-205-205", node_type=member_expression, shape=box, style="rounded, filled"];
1511 [code=receiver, color=white, fillcolor="#BFE6D3", label="204_ receiver--identifier\n1511_receiver-205-205", node_type=identifier, shape=box, style="rounded, filled"];
1512 [code=transfer, color=white, fillcolor="#BFE6D3", label="204_ transfer--identifier\n1512_transfer-205-205", node_type=identifier, shape=box, style="rounded, filled"];
1513 [code=amount, color=white, fillcolor="#BFE6D3", label="204_ call_argument--call_argument\n1513_amount-205-205", node_type=call_argument, shape=box, style="rounded, filled"];
1514 [code=amount, color=white, fillcolor="#BFE6D3", label="204_ amount--identifier\n1514_amount-205-205", node_type=identifier, shape=box, style="rounded, filled"];
1540 [code="if (a == 0) {\n            return 0;\n        }", label="3_ end_if", method="mul(uint256 a,uint256 b)", type_label=end_if];
2;
5 -> 6  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
5 -> 10  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
5 -> 186  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
5 -> 312  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
5 -> 1188  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
5 -> 1417  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
6 -> 7  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
7 -> 8  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
7 -> 9  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 11  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 12  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
12 -> 13  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
12 -> 56  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
12 -> 90  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
12 -> 124  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
12 -> 158  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
13 -> 14  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
13 -> 15  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
13 -> 19  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
13 -> 23  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
13 -> 24  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
13 -> 25  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
13 -> 29  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
13 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
15 -> 16  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
15 -> 18  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
16 -> 17  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 20  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 22  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 21  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
25 -> 26  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
26 -> 27  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
27 -> 28  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
29 -> 30  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
29 -> 37  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
29 -> 45  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
29 -> 54  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
30 -> 31  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
30 -> 34  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
30 -> 35  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
30 -> 1540  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
31 -> 32  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
31 -> 33  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
34 -> 35  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
35 -> 36  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
35 -> 1540  [color=red, controlflow_type=end_if, edge_type=CFG_edge, key=0, label=end_if];
35 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
37 -> 38  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
37 -> 42  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
37 -> 45  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
38 -> 39  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
38 -> 41  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
39 -> 40  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
42 -> 43  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
42 -> 44  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
45 -> 46  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
45 -> 54  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
46 -> 47  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
46 -> 48  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
48 -> 49  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
49 -> 50  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
49 -> 53  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
50 -> 51  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
50 -> 52  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
54 -> 55  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
54 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
56 -> 57  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
56 -> 58  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
56 -> 62  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
56 -> 66  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
56 -> 67  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
56 -> 68  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
56 -> 72  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
56 -> 73  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
58 -> 59  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
58 -> 61  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
59 -> 60  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
62 -> 63  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
62 -> 65  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
63 -> 64  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
68 -> 69  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
69 -> 70  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
70 -> 71  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
72 -> 73  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
72 -> 80  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
72 -> 88  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
73 -> 74  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
73 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
74 -> 75  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
74 -> 76  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
76 -> 77  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
77 -> 78  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
77 -> 79  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
80 -> 81  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
80 -> 85  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
80 -> 88  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
81 -> 82  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
81 -> 84  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
82 -> 83  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
85 -> 86  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
85 -> 87  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
88 -> 89  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
88 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
90 -> 91  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
90 -> 92  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
90 -> 96  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
90 -> 100  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
90 -> 101  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
90 -> 102  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
90 -> 106  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
90 -> 107  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
92 -> 93  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
92 -> 95  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
93 -> 94  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
96 -> 97  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
96 -> 99  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
97 -> 98  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
102 -> 103  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
103 -> 104  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
104 -> 105  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
106 -> 107  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
106 -> 114  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
106 -> 122  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
107 -> 108  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
107 -> 114  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
108 -> 109  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
108 -> 110  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
110 -> 111  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
111 -> 112  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
111 -> 113  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
114 -> 115  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
114 -> 119  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
114 -> 122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
115 -> 116  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
115 -> 118  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
116 -> 117  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
119 -> 120  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
119 -> 121  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
122 -> 123  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
122 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
124 -> 125  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
124 -> 126  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
124 -> 130  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
124 -> 134  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
124 -> 135  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
124 -> 136  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
124 -> 140  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
124 -> 141  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
126 -> 127  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
126 -> 129  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
127 -> 128  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
130 -> 131  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
130 -> 133  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
131 -> 132  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
136 -> 137  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
137 -> 138  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
138 -> 139  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
140 -> 141  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
140 -> 149  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
140 -> 156  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
141 -> 142  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
141 -> 146  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
141 -> 149  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
142 -> 143  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
142 -> 145  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
143 -> 144  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
146 -> 147  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
146 -> 148  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
149 -> 150  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
149 -> 156  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
150 -> 151  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
150 -> 152  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
152 -> 153  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
153 -> 154  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
153 -> 155  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
156 -> 157  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
156 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
158 -> 159  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
158 -> 160  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
158 -> 164  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
158 -> 168  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
158 -> 169  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
158 -> 170  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
158 -> 174  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
158 -> 175  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
160 -> 161  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
160 -> 163  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
161 -> 162  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
164 -> 165  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
164 -> 167  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
165 -> 166  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
170 -> 171  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
171 -> 172  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
172 -> 173  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
174 -> 175  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
174 -> 182  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
175 -> 176  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
175 -> 182  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
176 -> 177  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
176 -> 178  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
178 -> 179  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
179 -> 180  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
179 -> 181  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
182 -> 183  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
182 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
183 -> 184  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
183 -> 185  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
186 -> 187  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
186 -> 188  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
188 -> 189  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
188 -> 197  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
188 -> 209  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
188 -> 224  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
188 -> 243  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
188 -> 258  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
188 -> 274  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
188 -> 288  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
188 -> 302  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
189 -> 190  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
189 -> 191  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
189 -> 192  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
189 -> 193  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
193 -> 194  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
194 -> 195  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
195 -> 196  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
197 -> 198  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
197 -> 199  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
197 -> 203  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
197 -> 204  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
197 -> 205  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
199 -> 200  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
199 -> 202  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
200 -> 201  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
205 -> 206  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
206 -> 207  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
207 -> 208  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
209 -> 210  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
209 -> 211  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
209 -> 215  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
209 -> 219  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
209 -> 220  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
211 -> 212  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
211 -> 214  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
212 -> 213  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
215 -> 216  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
215 -> 218  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
216 -> 217  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
220 -> 221  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
221 -> 222  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
222 -> 223  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
224 -> 225  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
224 -> 226  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
224 -> 230  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
224 -> 234  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
224 -> 238  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
224 -> 239  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
226 -> 227  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
226 -> 229  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
227 -> 228  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
230 -> 231  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
230 -> 233  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
231 -> 232  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
234 -> 235  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
234 -> 237  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
235 -> 236  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
239 -> 240  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
240 -> 241  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
241 -> 242  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
243 -> 244  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
243 -> 245  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
243 -> 249  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
243 -> 253  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
243 -> 254  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
245 -> 246  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
245 -> 248  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
246 -> 247  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
249 -> 250  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
249 -> 252  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
250 -> 251  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
254 -> 255  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
255 -> 256  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
256 -> 257  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
258 -> 259  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
258 -> 260  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
258 -> 264  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
258 -> 268  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
258 -> 269  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
258 -> 270  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
260 -> 261  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
260 -> 263  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
261 -> 262  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
264 -> 265  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
264 -> 267  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
265 -> 266  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
270 -> 271  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
271 -> 272  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
272 -> 273  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
274 -> 275  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
274 -> 276  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
274 -> 280  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
274 -> 284  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
276 -> 277  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
276 -> 279  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
277 -> 278  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
280 -> 281  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
280 -> 283  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
281 -> 282  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
284 -> 285  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
284 -> 287  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
285 -> 286  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
288 -> 289  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
288 -> 290  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
288 -> 294  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
288 -> 298  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
290 -> 291  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
290 -> 293  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
291 -> 292  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
294 -> 295  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
294 -> 297  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
295 -> 296  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
298 -> 299  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
298 -> 301  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
299 -> 300  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
302 -> 303  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
302 -> 304  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
302 -> 308  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
304 -> 305  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
304 -> 307  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
305 -> 306  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
308 -> 309  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
308 -> 311  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
309 -> 310  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
312 -> 313  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
312 -> 314  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
312 -> 317  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
314 -> 315  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
315 -> 316  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 318  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 323  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 357  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 362  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 394  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 399  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 404  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 409  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 441  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 448  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 482  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 491  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 502  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 519  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 536  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 568  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 598  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 615  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 669  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 703  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 733  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 767  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 790  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 822  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 839  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 871  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 924  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 941  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 1000  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 1034  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 1084  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 1101  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
317 -> 1154  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
318 -> 319  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
318 -> 321  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
319 -> 320  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
321 -> 322  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
323 -> 324  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
323 -> 325  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
323 -> 329  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
323 -> 333  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
323 -> 337  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
323 -> 338  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
323 -> 339  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
325 -> 326  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
325 -> 328  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
326 -> 327  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
329 -> 330  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
329 -> 332  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
330 -> 331  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
333 -> 334  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
333 -> 336  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
334 -> 335  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
338 -> 339  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
338 -> 348  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
339 -> 340  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
339 -> 348  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
340 -> 341  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
340 -> 342  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
342 -> 343  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
343 -> 344  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
343 -> 347  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
344 -> 345  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
344 -> 346  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
348 -> 349  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
349 -> 350  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
349 -> 355  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
350 -> 351  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
350 -> 354  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
351 -> 352  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
351 -> 353  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
355 -> 356  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
357 -> 358  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
357 -> 360  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
357 -> 361  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
358 -> 359  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
362 -> 363  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
362 -> 364  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
362 -> 368  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
362 -> 372  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
362 -> 376  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
362 -> 377  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
362 -> 378  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
364 -> 365  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
364 -> 367  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
365 -> 366  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
368 -> 369  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
368 -> 371  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
369 -> 370  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
372 -> 373  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
372 -> 375  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
373 -> 374  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
377 -> 378  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
377 -> 387  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
378 -> 379  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
378 -> 387  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
379 -> 380  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
379 -> 381  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
381 -> 382  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
382 -> 383  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
382 -> 386  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
383 -> 384  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
383 -> 385  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
387 -> 388  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
388 -> 389  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
388 -> 392  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
389 -> 390  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
389 -> 391  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
392 -> 393  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
394 -> 395  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
394 -> 397  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
394 -> 398  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
394 -> 399  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
395 -> 396  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
399 -> 400  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
399 -> 402  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
399 -> 403  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
399 -> 404  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
400 -> 401  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
404 -> 405  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
404 -> 407  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
404 -> 408  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
405 -> 406  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
409 -> 410  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
409 -> 411  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
409 -> 415  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
409 -> 419  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
409 -> 423  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
409 -> 424  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
409 -> 425  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
411 -> 412  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
411 -> 414  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
412 -> 413  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
415 -> 416  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
415 -> 418  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
416 -> 417  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
419 -> 420  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
419 -> 422  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
420 -> 421  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
424 -> 425  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
424 -> 434  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
425 -> 426  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
425 -> 434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
426 -> 427  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
426 -> 428  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
428 -> 429  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
429 -> 430  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
429 -> 433  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
430 -> 431  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
430 -> 432  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
434 -> 435  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
435 -> 436  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
435 -> 439  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
436 -> 437  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
436 -> 438  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
439 -> 440  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
441 -> 442  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
441 -> 446  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
441 -> 447  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
442 -> 443  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
442 -> 444  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
444 -> 445  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
448 -> 449  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
448 -> 450  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
448 -> 454  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
448 -> 458  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
448 -> 462  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
448 -> 463  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
448 -> 464  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
450 -> 451  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
450 -> 453  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
451 -> 452  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
454 -> 455  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
454 -> 457  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
455 -> 456  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
458 -> 459  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
458 -> 461  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
459 -> 460  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
463 -> 464  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
463 -> 473  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
464 -> 465  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
464 -> 473  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
465 -> 466  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
465 -> 467  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
467 -> 468  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
468 -> 469  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
468 -> 472  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
469 -> 470  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
469 -> 471  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
473 -> 474  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
474 -> 475  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
474 -> 480  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
475 -> 476  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
475 -> 479  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
476 -> 477  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
476 -> 478  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
480 -> 481  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
482 -> 483  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
482 -> 489  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
482 -> 490  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
483 -> 484  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
483 -> 485  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
485 -> 486  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
485 -> 487  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
487 -> 488  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
491 -> 492  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
491 -> 493  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
491 -> 494  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
491 -> 495  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
491 -> 499  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
491 -> 500  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
495 -> 496  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
496 -> 497  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
497 -> 498  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
499 -> 500  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
500 -> 501  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
500 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
502 -> 503  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
502 -> 504  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
502 -> 508  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
502 -> 509  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
502 -> 510  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
504 -> 505  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
504 -> 507  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
505 -> 506  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
509 -> 510  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
510 -> 511  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
511 -> 512  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
511 -> 513  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
513 -> 514  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
514 -> 515  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
514 -> 518  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
515 -> 516  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
515 -> 517  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
519 -> 520  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
519 -> 521  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
519 -> 525  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
519 -> 526  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
519 -> 527  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
519 -> 531  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
519 -> 532  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
521 -> 522  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
521 -> 524  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
522 -> 523  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
527 -> 528  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
528 -> 529  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
529 -> 530  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
531 -> 532  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
532 -> 533  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
532 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
533 -> 534  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
533 -> 535  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
536 -> 537  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
536 -> 538  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
536 -> 542  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
536 -> 546  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
536 -> 547  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
536 -> 548  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
538 -> 539  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
538 -> 541  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
539 -> 540  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
542 -> 543  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
542 -> 545  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
543 -> 544  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
547 -> 548  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
547 -> 557  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
548 -> 549  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
548 -> 557  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
549 -> 550  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
549 -> 551  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
551 -> 552  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
552 -> 553  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
552 -> 556  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
553 -> 554  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
553 -> 555  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
557 -> 558  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
558 -> 559  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
558 -> 562  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
559 -> 560  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
559 -> 561  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
562 -> 563  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
563 -> 564  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
563 -> 567  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
564 -> 565  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
564 -> 566  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
568 -> 569  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
568 -> 570  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
568 -> 574  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
568 -> 578  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
568 -> 579  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
568 -> 583  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
568 -> 584  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
570 -> 571  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
570 -> 573  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
571 -> 572  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
574 -> 575  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
574 -> 577  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
575 -> 576  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
579 -> 580  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
580 -> 581  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
581 -> 582  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
583 -> 584  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
583 -> 595  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
584 -> 585  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
584 -> 595  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
585 -> 586  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
585 -> 587  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
585 -> 591  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
585 -> 593  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
587 -> 588  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
588 -> 589  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
588 -> 590  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
591 -> 592  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
593 -> 594  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
595 -> 596  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
595 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
596 -> 597  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
598 -> 599  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
598 -> 600  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
598 -> 604  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
598 -> 605  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
598 -> 606  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
600 -> 601  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
600 -> 603  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
601 -> 602  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
605 -> 606  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
606 -> 607  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
607 -> 608  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
607 -> 609  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
609 -> 610  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
610 -> 611  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
610 -> 614  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
611 -> 612  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
611 -> 613  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
615 -> 616  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
615 -> 617  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
615 -> 621  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
615 -> 625  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
615 -> 629  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
615 -> 630  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
615 -> 634  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
615 -> 635  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
617 -> 618  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
617 -> 620  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
618 -> 619  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
621 -> 622  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
621 -> 624  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
622 -> 623  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
625 -> 626  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
625 -> 628  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
626 -> 627  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
630 -> 631  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
631 -> 632  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
632 -> 633  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
634 -> 635  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
634 -> 644  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
634 -> 666  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
635 -> 636  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
635 -> 644  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
636 -> 637  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
636 -> 638  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
636 -> 640  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
636 -> 642  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
638 -> 639  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
640 -> 641  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
642 -> 643  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
644 -> 645  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
644 -> 666  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
645 -> 646  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
645 -> 647  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
645 -> 649  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
645 -> 653  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
647 -> 648  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
649 -> 650  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
650 -> 651  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
650 -> 652  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
653 -> 654  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
654 -> 655  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
654 -> 664  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
655 -> 656  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
655 -> 663  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
656 -> 657  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
656 -> 660  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
657 -> 658  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
657 -> 659  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
660 -> 661  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
660 -> 662  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
664 -> 665  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
666 -> 667  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
666 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
667 -> 668  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
669 -> 670  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
669 -> 671  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
669 -> 675  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
669 -> 679  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
669 -> 683  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
669 -> 684  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
669 -> 685  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
671 -> 672  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
671 -> 674  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
672 -> 673  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
675 -> 676  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
675 -> 678  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
676 -> 677  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
679 -> 680  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
679 -> 682  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
680 -> 681  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
684 -> 685  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
684 -> 694  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
685 -> 686  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
685 -> 694  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
686 -> 687  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
686 -> 688  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
688 -> 689  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
689 -> 690  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
689 -> 693  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
690 -> 691  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
690 -> 692  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
694 -> 695  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
695 -> 696  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
695 -> 701  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
696 -> 697  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
696 -> 700  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
697 -> 698  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
697 -> 699  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
701 -> 702  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
703 -> 704  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
703 -> 705  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
703 -> 709  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
703 -> 713  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
703 -> 714  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
703 -> 718  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
703 -> 719  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
705 -> 706  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
705 -> 708  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
706 -> 707  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
709 -> 710  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
709 -> 712  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
710 -> 711  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
714 -> 715  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
715 -> 716  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
716 -> 717  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
718 -> 719  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
718 -> 730  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
719 -> 720  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
719 -> 730  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
720 -> 721  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
720 -> 722  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
720 -> 726  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
720 -> 728  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
722 -> 723  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
723 -> 724  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
723 -> 725  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
726 -> 727  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
728 -> 729  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
730 -> 731  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
730 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
731 -> 732  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
733 -> 734  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
733 -> 735  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
733 -> 739  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
733 -> 743  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
733 -> 747  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
733 -> 748  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
733 -> 749  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
735 -> 736  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
735 -> 738  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
736 -> 737  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
739 -> 740  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
739 -> 742  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
740 -> 741  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
743 -> 744  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
743 -> 746  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
744 -> 745  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
748 -> 749  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
748 -> 758  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
749 -> 750  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
749 -> 758  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
750 -> 751  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
750 -> 752  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
752 -> 753  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
753 -> 754  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
753 -> 757  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
754 -> 755  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
754 -> 756  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
758 -> 759  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
759 -> 760  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
759 -> 765  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
760 -> 761  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
760 -> 764  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
761 -> 762  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
761 -> 763  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
765 -> 766  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
767 -> 768  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
767 -> 769  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
767 -> 773  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
767 -> 777  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
767 -> 778  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
767 -> 779  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
767 -> 783  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
767 -> 784  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
769 -> 770  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
769 -> 772  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
770 -> 771  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
773 -> 774  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
773 -> 776  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
774 -> 775  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
779 -> 780  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
780 -> 781  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
781 -> 782  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
783 -> 784  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
784 -> 785  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
784 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
785 -> 786  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
785 -> 789  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
786 -> 787  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
786 -> 788  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
790 -> 791  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
790 -> 792  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
790 -> 796  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
790 -> 800  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
790 -> 801  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
790 -> 802  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
792 -> 793  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
792 -> 795  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
793 -> 794  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
796 -> 797  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
796 -> 799  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
797 -> 798  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
801 -> 802  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
801 -> 811  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
802 -> 803  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
802 -> 811  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
803 -> 804  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
803 -> 805  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
805 -> 806  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
806 -> 807  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
806 -> 810  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
807 -> 808  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
807 -> 809  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
811 -> 812  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
812 -> 813  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
812 -> 816  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
813 -> 814  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
813 -> 815  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
816 -> 817  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
817 -> 818  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
817 -> 821  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
818 -> 819  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
818 -> 820  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
822 -> 823  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
822 -> 824  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
822 -> 828  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
822 -> 829  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
822 -> 830  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
824 -> 825  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
824 -> 827  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
825 -> 826  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
829 -> 830  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
830 -> 831  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
831 -> 832  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
831 -> 833  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
831 -> 837  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
833 -> 834  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
834 -> 835  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
834 -> 836  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
837 -> 838  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
839 -> 840  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
839 -> 841  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
839 -> 845  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
839 -> 849  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
839 -> 850  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
839 -> 851  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
841 -> 842  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
841 -> 844  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
842 -> 843  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
845 -> 846  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
845 -> 848  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
846 -> 847  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
850 -> 851  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
850 -> 860  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
851 -> 852  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
851 -> 860  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
852 -> 853  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
852 -> 854  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
854 -> 855  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
855 -> 856  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
855 -> 859  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
856 -> 857  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
856 -> 858  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
860 -> 861  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
861 -> 862  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
861 -> 865  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
862 -> 863  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
862 -> 864  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
865 -> 866  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
866 -> 867  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
866 -> 870  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
867 -> 868  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
867 -> 869  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
871 -> 872  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
871 -> 873  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
871 -> 877  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
871 -> 881  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
871 -> 882  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
871 -> 883  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
873 -> 874  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
873 -> 876  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
874 -> 875  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
877 -> 878  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
877 -> 880  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
878 -> 879  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
882 -> 883  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
882 -> 892  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
882 -> 901  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
882 -> 914  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
883 -> 884  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
883 -> 892  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
884 -> 885  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
884 -> 886  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
886 -> 887  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
887 -> 888  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
887 -> 889  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
889 -> 890  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
889 -> 891  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
892 -> 893  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
892 -> 901  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
893 -> 894  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
893 -> 895  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
895 -> 896  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
895 -> 899  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
896 -> 897  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
896 -> 898  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
899 -> 900  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
901 -> 902  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
902 -> 903  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
902 -> 906  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
903 -> 904  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
903 -> 905  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
906 -> 907  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
906 -> 912  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
907 -> 908  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
907 -> 911  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
908 -> 909  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
908 -> 910  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
912 -> 913  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
914 -> 915  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
914 -> 916  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
914 -> 920  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
914 -> 922  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
916 -> 917  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
917 -> 918  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
917 -> 919  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
920 -> 921  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
922 -> 923  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
924 -> 925  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
924 -> 926  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
924 -> 930  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
924 -> 931  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
924 -> 932  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
926 -> 927  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
926 -> 929  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
927 -> 928  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
931 -> 932  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
932 -> 933  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
933 -> 934  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
933 -> 935  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
935 -> 936  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
936 -> 937  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
936 -> 940  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
937 -> 938  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
937 -> 939  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
941 -> 942  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
941 -> 943  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
941 -> 947  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
941 -> 951  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
941 -> 955  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
941 -> 956  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
941 -> 957  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
943 -> 944  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
943 -> 946  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
944 -> 945  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
947 -> 948  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
947 -> 950  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
948 -> 949  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
951 -> 952  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
951 -> 954  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
952 -> 953  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
956 -> 957  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
956 -> 966  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
956 -> 979  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
956 -> 992  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
957 -> 958  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
957 -> 966  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
958 -> 959  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
958 -> 960  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
960 -> 961  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
961 -> 962  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
961 -> 963  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
963 -> 964  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
963 -> 965  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
966 -> 967  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
966 -> 979  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
967 -> 968  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
967 -> 971  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
968 -> 969  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
968 -> 970  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
971 -> 972  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
971 -> 977  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
972 -> 973  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
972 -> 976  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
973 -> 974  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
973 -> 975  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
977 -> 978  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
979 -> 980  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
980 -> 981  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
980 -> 984  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
981 -> 982  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
981 -> 983  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
984 -> 985  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
984 -> 990  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
985 -> 986  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
985 -> 989  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
986 -> 987  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
986 -> 988  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
990 -> 991  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
992 -> 993  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
992 -> 994  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
992 -> 996  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
992 -> 998  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
994 -> 995  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
996 -> 997  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
998 -> 999  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1000 -> 1001  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1000 -> 1002  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1000 -> 1006  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1000 -> 1010  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1000 -> 1014  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1000 -> 1015  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1000 -> 1016  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1002 -> 1003  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1002 -> 1005  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1003 -> 1004  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1006 -> 1007  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1006 -> 1009  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1007 -> 1008  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1010 -> 1011  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1010 -> 1013  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1011 -> 1012  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1015 -> 1016  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1015 -> 1025  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1016 -> 1017  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1016 -> 1025  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1017 -> 1018  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1017 -> 1019  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1019 -> 1020  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1020 -> 1021  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1020 -> 1024  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1021 -> 1022  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1021 -> 1023  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1025 -> 1026  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1026 -> 1027  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1026 -> 1032  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1027 -> 1028  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1027 -> 1031  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1028 -> 1029  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1028 -> 1030  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1032 -> 1033  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1034 -> 1035  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1034 -> 1036  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1034 -> 1040  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1034 -> 1044  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1034 -> 1048  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1034 -> 1049  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1034 -> 1050  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1036 -> 1037  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1036 -> 1039  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1037 -> 1038  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1040 -> 1041  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1040 -> 1043  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1041 -> 1042  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1044 -> 1045  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1044 -> 1047  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1045 -> 1046  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1049 -> 1050  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1049 -> 1059  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1049 -> 1068  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1049 -> 1076  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1050 -> 1051  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1050 -> 1059  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1051 -> 1052  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1051 -> 1053  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1053 -> 1054  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1054 -> 1055  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1054 -> 1056  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1056 -> 1057  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1056 -> 1058  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1059 -> 1060  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1059 -> 1068  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1060 -> 1061  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1060 -> 1062  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1062 -> 1063  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1063 -> 1064  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1063 -> 1065  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1065 -> 1066  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1065 -> 1067  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1068 -> 1069  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1069 -> 1070  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1069 -> 1075  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1070 -> 1071  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1070 -> 1074  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1071 -> 1072  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1071 -> 1073  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1076 -> 1077  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1076 -> 1078  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1076 -> 1080  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1076 -> 1082  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1078 -> 1079  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1080 -> 1081  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1082 -> 1083  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1084 -> 1085  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1084 -> 1086  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1084 -> 1090  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1084 -> 1091  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1084 -> 1092  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1086 -> 1087  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1086 -> 1089  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1087 -> 1088  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1091 -> 1092  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1092 -> 1093  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1093 -> 1094  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1093 -> 1095  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1095 -> 1096  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1096 -> 1097  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1096 -> 1100  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1097 -> 1098  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1097 -> 1099  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1101 -> 1102  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1101 -> 1103  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1101 -> 1107  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1101 -> 1111  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1101 -> 1112  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1101 -> 1113  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1103 -> 1104  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1103 -> 1106  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1104 -> 1105  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1107 -> 1108  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1107 -> 1110  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1108 -> 1109  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1112 -> 1113  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1112 -> 1122  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1112 -> 1131  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1112 -> 1144  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1113 -> 1114  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1113 -> 1122  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1114 -> 1115  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1114 -> 1116  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1116 -> 1117  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1117 -> 1118  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1117 -> 1119  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1119 -> 1120  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1119 -> 1121  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1122 -> 1123  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1122 -> 1131  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1123 -> 1124  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1123 -> 1125  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1125 -> 1126  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1125 -> 1129  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1126 -> 1127  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1126 -> 1128  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1129 -> 1130  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1131 -> 1132  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1132 -> 1133  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1132 -> 1136  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1133 -> 1134  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1133 -> 1135  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1136 -> 1137  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1136 -> 1142  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1137 -> 1138  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1137 -> 1141  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1138 -> 1139  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1138 -> 1140  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1142 -> 1143  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1144 -> 1145  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1144 -> 1146  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1144 -> 1148  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1144 -> 1152  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1146 -> 1147  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1148 -> 1149  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1149 -> 1150  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1149 -> 1151  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1152 -> 1153  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1154 -> 1155  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1154 -> 1156  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1154 -> 1160  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1154 -> 1164  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1154 -> 1168  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1154 -> 1169  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1154 -> 1170  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1156 -> 1157  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1156 -> 1159  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1157 -> 1158  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1160 -> 1161  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1160 -> 1163  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1161 -> 1162  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1164 -> 1165  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1164 -> 1167  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1165 -> 1166  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1169 -> 1170  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1169 -> 1179  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1170 -> 1171  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1170 -> 1179  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1171 -> 1172  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1171 -> 1173  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1173 -> 1174  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1174 -> 1175  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1174 -> 1178  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1175 -> 1176  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1175 -> 1177  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1179 -> 1180  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1180 -> 1181  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1180 -> 1186  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1181 -> 1182  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1181 -> 1185  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1182 -> 1183  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1182 -> 1184  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1186 -> 1187  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1188 -> 1189  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1188 -> 1190  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1188 -> 1193  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1190 -> 1191  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1191 -> 1192  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1194  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1199  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1204  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1236  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1241  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1267  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1284  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1295  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1327  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1338  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1372  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1193 -> 1383  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1194 -> 1195  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1194 -> 1197  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1194 -> 1198  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1194 -> 1199  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1195 -> 1196  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1199 -> 1200  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1199 -> 1202  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1199 -> 1203  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1200 -> 1201  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1204 -> 1205  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1204 -> 1206  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1204 -> 1210  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1204 -> 1214  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1204 -> 1215  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1204 -> 1216  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1206 -> 1207  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1206 -> 1209  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1207 -> 1208  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1210 -> 1211  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1210 -> 1213  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1211 -> 1212  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1215 -> 1216  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1215 -> 1225  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1216 -> 1217  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1216 -> 1225  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1217 -> 1218  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1217 -> 1219  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1219 -> 1220  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1220 -> 1221  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1220 -> 1224  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1221 -> 1222  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1221 -> 1223  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1225 -> 1226  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1226 -> 1227  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1226 -> 1230  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1227 -> 1228  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1227 -> 1229  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1230 -> 1231  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1231 -> 1232  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1231 -> 1235  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1232 -> 1233  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1232 -> 1234  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1236 -> 1237  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1236 -> 1239  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1236 -> 1240  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1237 -> 1238  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1241 -> 1242  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1241 -> 1246  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1241 -> 1250  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1241 -> 1254  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1242 -> 1243  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1242 -> 1245  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1243 -> 1244  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1246 -> 1247  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1246 -> 1249  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1247 -> 1248  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1250 -> 1251  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1250 -> 1253  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1251 -> 1252  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1254 -> 1255  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1254 -> 1259  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1254 -> 1263  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1255 -> 1256  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1255 -> 1259  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1256 -> 1257  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1256 -> 1258  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1259 -> 1260  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1259 -> 1263  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1260 -> 1261  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1260 -> 1262  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1263 -> 1264  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1264 -> 1265  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1264 -> 1266  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1267 -> 1268  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1267 -> 1269  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1267 -> 1273  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1267 -> 1274  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1267 -> 1275  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1269 -> 1270  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1269 -> 1272  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1270 -> 1271  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1274 -> 1275  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1275 -> 1276  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1276 -> 1277  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1276 -> 1278  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1278 -> 1279  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1279 -> 1280  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1279 -> 1283  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1280 -> 1281  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1280 -> 1282  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1284 -> 1285  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1284 -> 1286  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1284 -> 1287  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1284 -> 1288  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1284 -> 1292  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1284 -> 1293  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1288 -> 1289  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1289 -> 1290  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1290 -> 1291  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1292 -> 1293  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1293 -> 1294  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1293 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1295 -> 1296  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1295 -> 1297  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1295 -> 1301  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1295 -> 1305  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1295 -> 1309  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1295 -> 1310  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1295 -> 1311  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1297 -> 1298  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1297 -> 1300  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1298 -> 1299  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1301 -> 1302  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1301 -> 1304  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1302 -> 1303  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1305 -> 1306  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1305 -> 1308  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1306 -> 1307  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1310 -> 1311  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1310 -> 1320  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1311 -> 1312  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1311 -> 1320  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1312 -> 1313  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1312 -> 1314  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1314 -> 1315  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1315 -> 1316  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1315 -> 1319  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1316 -> 1317  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1316 -> 1318  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1320 -> 1321  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1321 -> 1322  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1321 -> 1325  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1322 -> 1323  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1322 -> 1324  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1325 -> 1326  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1327 -> 1328  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1327 -> 1329  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1327 -> 1330  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1327 -> 1331  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1327 -> 1335  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1327 -> 1336  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1331 -> 1332  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1332 -> 1333  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1333 -> 1334  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1335 -> 1336  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1336 -> 1337  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1336 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1338 -> 1339  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1338 -> 1340  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1338 -> 1344  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1338 -> 1348  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1338 -> 1352  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1338 -> 1353  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1338 -> 1354  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1340 -> 1341  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1340 -> 1343  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1341 -> 1342  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1344 -> 1345  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1344 -> 1347  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1345 -> 1346  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1348 -> 1349  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1348 -> 1351  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1349 -> 1350  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1353 -> 1354  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1353 -> 1363  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1354 -> 1355  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1354 -> 1363  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1355 -> 1356  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1355 -> 1357  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1357 -> 1358  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1358 -> 1359  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1358 -> 1362  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1359 -> 1360  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1359 -> 1361  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1363 -> 1364  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1364 -> 1365  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1364 -> 1370  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1365 -> 1366  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1365 -> 1369  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1366 -> 1367  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1366 -> 1368  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1370 -> 1371  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1372 -> 1373  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1372 -> 1374  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1372 -> 1375  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1372 -> 1376  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1372 -> 1380  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1372 -> 1381  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1376 -> 1377  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1377 -> 1378  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1378 -> 1379  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1380 -> 1381  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1381 -> 1382  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1381 -> 2  [color=red, controlflow_type=return_exit, edge_type=CFG_edge, key=0, label=return_exit];
1383 -> 1384  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1383 -> 1385  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1383 -> 1389  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1383 -> 1393  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1383 -> 1397  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1383 -> 1398  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1383 -> 1399  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1385 -> 1386  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1385 -> 1388  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1386 -> 1387  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1389 -> 1390  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1389 -> 1392  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1390 -> 1391  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1393 -> 1394  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1393 -> 1396  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1394 -> 1395  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1398 -> 1399  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1398 -> 1408  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1399 -> 1400  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1399 -> 1408  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1400 -> 1401  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1400 -> 1402  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1402 -> 1403  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1403 -> 1404  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1403 -> 1407  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1404 -> 1405  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1404 -> 1406  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1408 -> 1409  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1409 -> 1410  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1409 -> 1415  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1410 -> 1411  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1410 -> 1414  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1411 -> 1412  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1411 -> 1413  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1415 -> 1416  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1417 -> 1418  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1417 -> 1419  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1417 -> 1422  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1417 -> 1425  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1419 -> 1420  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1420 -> 1421  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1422 -> 1423  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1423 -> 1424  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1425 -> 1426  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1425 -> 1443  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1425 -> 1449  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1425 -> 1462  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1425 -> 1483  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1426 -> 1427  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1426 -> 1428  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1426 -> 1432  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1426 -> 1433  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1426 -> 1434  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1428 -> 1429  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1428 -> 1431  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1429 -> 1430  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1433 -> 1434  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1434 -> 1435  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1435 -> 1436  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1435 -> 1437  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1437 -> 1438  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1438 -> 1439  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1438 -> 1442  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1439 -> 1440  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1439 -> 1441  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1443 -> 1444  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1443 -> 1446  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1443 -> 1447  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1443 -> 1448  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1443 -> 1449  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1444 -> 1445  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1449 -> 1450  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1449 -> 1452  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1449 -> 1453  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1449 -> 1454  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1450 -> 1451  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1454 -> 1455  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1454 -> 1456  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1456 -> 1457  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1457 -> 1458  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1457 -> 1459  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1459 -> 1460  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1459 -> 1461  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1462 -> 1463  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1462 -> 1473  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1463 -> 1464  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1463 -> 1465  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1463 -> 1468  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1463 -> 1471  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1465 -> 1466  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1466 -> 1467  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1468 -> 1469  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1469 -> 1470  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1471 -> 1472  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1473 -> 1474  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1474 -> 1475  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1475 -> 1476  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1475 -> 1477  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1475 -> 1481  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1477 -> 1478  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1478 -> 1479  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1478 -> 1480  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1481 -> 1482  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1483 -> 1484  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1483 -> 1485  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1483 -> 1489  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1483 -> 1493  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1483 -> 1497  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1483 -> 1498  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1483 -> 1499  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1485 -> 1486  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1485 -> 1488  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1486 -> 1487  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1489 -> 1490  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1489 -> 1492  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1490 -> 1491  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1493 -> 1494  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1493 -> 1496  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1494 -> 1495  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1498 -> 1499  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1498 -> 1508  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1499 -> 1500  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1499 -> 1508  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
1500 -> 1501  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1500 -> 1502  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1502 -> 1503  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1503 -> 1504  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1503 -> 1507  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1504 -> 1505  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1504 -> 1506  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1508 -> 1509  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1509 -> 1510  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1509 -> 1513  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1510 -> 1511  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1510 -> 1512  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1513 -> 1514  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
1540 -> 37  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
}
